<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>线程、进程、协程 —— 并行提速</title>
      <link href="/2023/10/25/%E3%80%90Python%E5%9F%BA%E7%A1%80%E3%80%9117.%E5%8D%8F%E7%A8%8B%E5%92%8C%E7%BA%BF%E7%A8%8B%E2%80%94%E2%80%94%E5%B9%B6%E8%A1%8C%E6%8F%90%E9%80%9F/"/>
      <url>/2023/10/25/%E3%80%90Python%E5%9F%BA%E7%A1%80%E3%80%9117.%E5%8D%8F%E7%A8%8B%E5%92%8C%E7%BA%BF%E7%A8%8B%E2%80%94%E2%80%94%E5%B9%B6%E8%A1%8C%E6%8F%90%E9%80%9F/</url>
      
        <content type="html"><![CDATA[<h1>线程、进程、协程——并行提速</h1><p>Python的并行编程有三种方式：多线程Thread、多进程Process、多协程Coroutine</p><p>Python中可以使用多协程或者多线程来实现并行执行程序，从而加速程序的执行速度。具体选择使用协程还是线程取决于应用场景和需求。协程适用于I/O密集型任务，如网络请求、文件读写等，而线程适用于I/O密集型任务和计算密集型任务的混合场景。</p><p>在Python中，有两个主要的库用于实现协程和线程：asyncio和threading</p><h2 id="CPU密集型计算、IO密集型计算">CPU密集型计算、IO密集型计算</h2><h3 id="CPU密集型（CPU-bound）">CPU密集型（CPU-bound）</h3><p>CPU密集型也叫计算密集型，是指在IO很短的时间内可以完成，但是在这期间CPU要进行大量的运算和处理，特点是CPU占用率相当高。</p><p>比如：压缩和解压缩、加密和解密、正则表达式搜索</p><h3 id="IO密集型（IO-bound）">IO密集型（IO-bound）</h3><p>在系统运行过程中，CPU在等待IO的读写操作，CPU占用率较低。</p><p>比如：文件处理程序、网络爬虫程序、读写数据库程序</p><h3 id="多进程、多线程、多协程的对比">多进程、多线程、多协程的对比</h3><h4 id="多进程（Process-multiprocessing）">多进程（Process-multiprocessing）</h4><p>优点：可以利用多核CPU进行并行运算</p><p>缺点：占用资源多、可以启动的数目少（受到CPU个数的限制）</p><p>适用于CPU密集型计算</p><h4 id="多线程（Thread-Threading）">多线程（Thread-Threading）</h4><p>一个进程中，可以开启多个线程</p><p>优点：相比进程更轻量级，占用资源少</p><p>缺点：</p><ul><li>相比进程：多线程只能并发执行，不能用多个CPU（在计算期间，由于Python的GIL锁（全局解释器）要确保程序执行过程中只能有一个线程，所以这个期间只能使用单核CPU；当程序进行IO时，GIL锁释放，可以进行并行IO）</li><li>相比协程：启动数目有限，占用内存资源，有线程切换的开销</li></ul><p>适用于IO密集型计算、同时运行的任务数目要求不多</p><h4 id="多协程（Coroutine-asyncio）">多协程（Coroutine-asyncio）</h4><p>一个线程中，可以开启多个协程，甚至可以达到几万个协程</p><p>优点：内存开销最小、启动协程数目最多</p><p>缺点：支持的库有限制（aiohttp可以用，但是request不能用）、代码实现复杂</p><p>适用于IO密集型计算、需要运行超多任务，且现有的库支持的场景</p><h2 id="多线程demo">多线程demo</h2><p>这里演示一下多线程request</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> request</span><br><span class="line"><span class="keyword">import</span> threading</span><br><span class="line">url = [<span class="string">f&quot;https://.....page=<span class="subst">&#123;i&#125;</span>&amp;...&quot;</span> <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, <span class="number">50</span>+<span class="number">1</span>)]<span class="comment">#分析到一个url链接，通过配置page参数得到多个url</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">craw</span>(<span class="params">t_url</span>):</span><br><span class="line">        resp = request.get(t_url)</span><br><span class="line">        <span class="built_in">print</span>(turl,<span class="built_in">len</span>(resp.text))</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">single_thread</span>():</span><br><span class="line">    <span class="keyword">for</span> t_url <span class="keyword">in</span> url:</span><br><span class="line">        craw(t_url)</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">multiply_thread</span>():</span><br><span class="line">    threads = []</span><br><span class="line">    <span class="keyword">for</span> t_url <span class="keyword">in</span> url:</span><br><span class="line">        threads.append(threading.Thread(target=craw, args=(t_url,)))<span class="comment">#threading.Thread是threading库的一个方法，传入执行的函数名和函数参数，返回一个Thread对象，参数以元组形式传入</span></span><br><span class="line">    <span class="keyword">for</span> thread <span class="keyword">in</span> threads:</span><br><span class="line">        thread.start()<span class="comment">#启动多线程</span></span><br><span class="line">    <span class="keyword">for</span> thread <span class="keyword">in</span> threads:</span><br><span class="line">        thread.join()<span class="comment">#等待多线程执行完毕</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Python基础 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
            <tag> Python基础 - 爬虫设计 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>markdown快速入门指南</title>
      <link href="/2023/10/18/%E3%80%90%E6%8A%80%E6%9C%AF%E5%BC%80%E5%8F%91%E3%80%91markdown%E8%BF%85%E9%80%9F%E5%85%A5%E9%97%A8/"/>
      <url>/2023/10/18/%E3%80%90%E6%8A%80%E6%9C%AF%E5%BC%80%E5%8F%91%E3%80%91markdown%E8%BF%85%E9%80%9F%E5%85%A5%E9%97%A8/</url>
      
        <content type="html"><![CDATA[<h1>markdown快速入门</h1><blockquote><p>本文旨在介绍markdown以及其使用技巧，以及typora在windows端和ubuntu端的白嫖。浅浅介绍一下typora自定义主题。</p><hr><p>下面说一些废话，如果想直接上手，可以直接<a href="##Typora%E7%9A%84%E5%AE%89%E8%A3%85">跳到这里</a></p></blockquote><h2 id="markdown简介">markdown简介</h2><p>markdown是一种轻量级标记语言(本质上是个浏览器)，你可以通过它的标记语法插入图片、视频、网站链接等等一切浏览器可表示的静态内容。具体定义见<a href="https://zh.wikipedia.org/zh-sg/Markdown">wiki关于markdown的介绍</a></p><h2 id="markdown的优点">markdown的优点</h2><p>个人来说，markdown的优点在于：</p><ul><li>没有word的繁杂的排版，可以让你专注于写内容</li><li>支持多种格式导出，可以导出成pdf、word、latex、html等多种格式的文件，实现all in one!</li><li>可自定义程度高，如果会写css的话，魔改markdown样式也是一项乐趣，可以把它写成学校实验报告、论文等格式；写一次、用一生。:joy:</li><li>基本上一些项目的readme都是markdown格式文本，最常见就是github上的了。所以是程序员必须掌握的东西；当然我认为不是程序员也应该掌握它，你会喜欢上掌握它带来的便利。</li><li>更多待解锁…</li></ul><h2 id="Typora编辑器">Typora编辑器</h2><p>就像用word写word文档一样，markdown也有很多编辑器。</p><p>其实用记事本也可以写markdown，只要会它的语法即可。不过还需要其他一些软件渲染出来。个人一直使用流行的markdown编辑器Typora。Typora的编辑方式是&quot;所见即所得&quot;，我们写好的markdown文本会马上被渲染成我们想要的样子。</p><p>那么接下来，我们按照：Typora的安装——&gt;Typora以及markdown的使用——&gt;Typora自定义主题  的逻辑上手markdown。</p><h2 id="Typora的安装">Typora的安装</h2><p>Typora目前是收费的，但是咱可以白嫖。下面分别介绍windows端typora的白嫖以及linux端的白嫖。</p><h3 id="Windows端Typora的使用">Windows端Typora的使用</h3><ol><li><p>在官网下载Typora</p><p><a href="https://typora.io/">Typora官网地址</a></p><p>选择历史版本1.6.7，下载windows64位的Typora。</p></li><li><p>下载github仓库包</p><p><a href="https://github.com/shuhongfan/TyporaCrack">仓库地址</a></p><p>下载好后，把下载下来的仓库里面的winmm.dll复制到Typora的安装目录下即可。</p><p><strong>如果不行的话，可以试试用仓库里的typora安装包安装Typora</strong></p></li></ol><h3 id="Linux端Typora的使用">Linux端Typora的使用</h3><p>这里只介绍Ubuntu端的Typora的使用，详细见我前面的博客。</p><h2 id="markdown的基本语法">markdown的基本语法</h2><p>markdown详细语法可以参考<a href="https://markdown.com.cn/basic-syntax/">markdown语法教程</a></p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line">标题</span><br><span class="line"><span class="section">#一级标题</span></span><br><span class="line"><span class="section">##二级标题</span></span><br><span class="line"><span class="section">###三级标题</span></span><br><span class="line">依此类推，最多6级</span><br><span class="line">Typora快捷键——&gt;<span class="code">`ctrl+n`</span> 这里的n代表的是第几级标题</span><br><span class="line"></span><br><span class="line">加粗</span><br><span class="line"><span class="strong">**加粗字体**</span></span><br><span class="line">Typora快捷键——&gt;<span class="code">`ctrl+B`</span></span><br><span class="line"></span><br><span class="line">倾斜</span><br><span class="line"><span class="emphasis">*倾斜字体*</span></span><br><span class="line">Typora快捷键——&gt;<span class="code">`ctrl+I`</span></span><br><span class="line"></span><br><span class="line">高亮</span><br><span class="line">==高亮字体==</span><br><span class="line"></span><br><span class="line">超链接</span><br><span class="line">[<span class="string">百度</span>](<span class="link">https://www.baidu.com</span>)  这时点击百度即可跳转</span><br><span class="line">支持插入图片</span><br><span class="line"></span><br><span class="line">内嵌HTML代码</span><br><span class="line">HTML代码可以自定义为任何样式，需要一点HTML和CSS基础</span><br><span class="line"></span><br><span class="line">引用</span><br><span class="line">&gt;引用的句子</span><br><span class="line">Typora快捷键——&gt;<span class="code">`ctrl+shift+Q`</span></span><br><span class="line"></span><br><span class="line">列表（注意.后面有空格）</span><br><span class="line"><span class="bullet">1.</span> 第一行</span><br><span class="line"><span class="bullet">2.</span> 第二行</span><br><span class="line"><span class="bullet">1.</span> 第一行</span><br><span class="line">Typora快捷键——&gt;<span class="code">`ctrl+shift+[`</span>,或者<span class="code">`ctrl+shift+]`</span>分别对应不同的样式</span><br><span class="line"></span><br><span class="line">内嵌代码</span><br><span class="line">这是一段代码<span class="code">`代码`</span></span><br><span class="line"></span><br><span class="line">代码块</span><br><span class="line">Typora快捷键<span class="code">`ctrl+shift+k`</span></span><br><span class="line"></span><br><span class="line">表格</span><br><span class="line">Typora快捷键 <span class="code">`ctrl+T`</span></span><br></pre></td></tr></table></figure><p>当然，markdown还支持数学公式的渲染，如果你会latex数学公式的语法，可以无缝衔接。markdown内<a href="https://blog.csdn.net/NSJim/article/details/109045914?spm=1001.2014.3001.5506">数学公式汇总</a></p><h2 id="Typora自定义主题">Typora自定义主题</h2><p>菜单栏的themes可以换主题样式，如果想自定义主题可以打开file-&gt;prefernces-&gt;appearance-&gt;open theme floder</p><p>把自定义的css文件放进去，重启后可以再次选择themes，选择自定义的样式。</p><p>由于本人平时比较喜欢latex论文风格，所以这里推荐一个别人写好的样式，具体教程在其仓库的readme有详细介绍。</p><ul><li><p>仓库地址：</p><p><a href="https://github.com/Keldos-Li/typora-latex-theme">typora-latex-theme</a></p></li><li><h2 id="写在最后">写在最后</h2></li></ul><p>当然，Typora的图片管理，可以用图床，这里不过多介绍，可能后续会更新，读者也可以自行搜索实现，我主要用的是github仓库+PicGo-cli+cdn域名加速。</p><p>说到底，markdown这类的都属于工具，对于工具，我们想快速掌握，最好的办法就是用上它，多用、多写就行了，想实现什么，google一下，慢慢积累，自然就熟悉了。</p>]]></content>
      
      
      <categories>
          
          <category> 技术分享 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 技术分享 </tag>
            
            <tag> markdown </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo初步搭建个人博客</title>
      <link href="/2023/10/18/%E3%80%90%E6%8A%80%E6%9C%AF%E5%BC%80%E5%8F%91%E3%80%91Hexo%E6%90%AD%E5%BB%BA%E8%BF%87%E7%A8%8B/"/>
      <url>/2023/10/18/%E3%80%90%E6%8A%80%E6%9C%AF%E5%BC%80%E5%8F%91%E3%80%91Hexo%E6%90%AD%E5%BB%BA%E8%BF%87%E7%A8%8B/</url>
      
        <content type="html"><![CDATA[<h1>Hexo搭建个人博客</h1><blockquote><p>本文介绍hexo博客框架在Ubuntu下的搭建，只是搭建一个能用的个人博客框架，至于美化等其他的暂不介绍。</p></blockquote><h2 id="Hexo博客框架">Hexo博客框架</h2><p>优点：社区成熟，学习文档多。</p><h2 id="环境搭建">环境搭建</h2><p>环境：Ubuntu22.04 LST</p><ol><li><p>第一步，个人习惯，更新一下源</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get update</span><br><span class="line">sudo apt-get upgrade</span><br></pre></td></tr></table></figure></li><li><p>安装Nodejs</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">curl -fsSL https://deb.nodesource.com/setup_lts.x | sudo -E bash -<span class="comment">#添加源</span></span><br><span class="line">sudo apt-get install nodejs <span class="comment">#安装</span></span><br><span class="line">node -v<span class="comment">#检查是否安装成功</span></span><br></pre></td></tr></table></figure></li><li><p>安装npm节点包管理器（安装完nodejs自带），速度慢的话可以使用淘宝镜像，注意淘宝的域名换了，网上查的较老的教程已经无效</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#使用淘宝镜像</span></span><br><span class="line">npm get registry <span class="comment">#查看自己的本地镜像</span></span><br><span class="line"><span class="comment">#设置本地镜像</span></span><br><span class="line">npm config <span class="built_in">set</span> registry https://registry.npmmirror.com/</span><br><span class="line">npm config <span class="built_in">set</span> ELECTRON_MIRROR https://npmmirror.com/mirrors/electron/</span><br></pre></td></tr></table></figure><blockquote><p>踩坑环节：</p><p>下载好使用npm下载hexo时出现<code>npm ERR! Cannot read property 'insert' of undefined </code>报错；</p><p>错误原因是我电脑已经有nodejs环境，但是版本比较旧，与新的npm不兼容，导致npm不可用；</p><p>我的解决方法：</p><p>纯净地卸载nodejs，如果nodejs还残留一些其他的东西很可能影响后续操作；</p><p>重新下nodejs</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#卸载nodejs</span></span><br><span class="line">sudo apt-get --purge remove nodejs</span><br><span class="line">sudo apt-get --purge remove npm</span><br><span class="line"><span class="comment">#然后分别到/usr/local/下的lib目录、include目录、bin目录下删除所有关于node的东西</span></span><br><span class="line"><span class="comment">#安装nodejs见上面步骤2</span></span><br></pre></td></tr></table></figure></blockquote></li><li><p>安装hexo框架</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">npm install -g hexo-cli</span><br><span class="line"><span class="comment">#检查是否安装成功</span></span><br><span class="line">hexo -v</span><br><span class="line"></span><br><span class="line"><span class="comment">#进入自己的blog目录，初始化一下</span></span><br><span class="line"><span class="built_in">mkdir</span> blog  <span class="comment">#创建一个文件夹，用于放博客</span></span><br><span class="line"><span class="built_in">cd</span> blog</span><br><span class="line">hexo init</span><br><span class="line">hexo g</span><br><span class="line">hexo s <span class="comment">#预览一下，在本地localhost:4000可访问</span></span><br></pre></td></tr></table></figure></li><li><p><strong>配置ssh key</strong></p><blockquote><p>由于github在2021年8月停止了账号密码登录，改为token或者ssh登录。</p></blockquote><ol><li><p>新建一个github仓库，注意仓库名必须为<code>你的github用户名.github.io</code>，以后通过该地址访问你的网站。（<em>注意：仓库创建成功一半10-30分钟才生效</em>）</p></li><li><p>配置ssh key</p><p>使用ssh key连接本地与服务器，避免多次输入密码</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> ~/.ssh <span class="comment">#检查本机是有存在ssh密钥，如果没有的话可能你是第一次使用git</span></span><br><span class="line">ssh-keygen -t rsa -C <span class="string">&quot;你注册github的邮箱地址&quot;</span> <span class="comment">#生成本机ssh key</span></span><br><span class="line"><span class="comment">#然后要你输入一些东西，可以不输入，三次回车即可</span></span><br><span class="line">vim /.ssh/id_rsa.pub <span class="comment">#找到.ssh/id_rsa.pub文件，复制里面的内容，就是ssh key</span></span><br></pre></td></tr></table></figure><p>上面生成并拿到key之后，打开自己的github主页：settings -&gt; SSH and GPG keys -&gt;New SSH key；将刚刚拿到的key复制到key中，title随意，保存。</p></li><li><p>测试是否配置成功</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh -T git@github.com</span><br></pre></td></tr></table></figure></li><li><p>配置git全局用户</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.name <span class="string">&quot;你的git用户名&quot;</span></span><br><span class="line">git config --global user.email <span class="string">&quot;你注册github时用的邮箱&quot;</span></span><br></pre></td></tr></table></figure></li></ol></li><li><p>hexo部署到github</p><p>主要是通过npm的一个hexo插件完成的，hexo-deployer-git</p><p>在自己的blog目录下安装git部署的插件</p><p>注意下面的<code>_config.yml</code>的配置<code>:</code>前面不要少了空格</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">npm install --save hexo-deployer-git </span><br><span class="line"><span class="comment">#需要对_config.yml文件进行配置修改</span></span><br><span class="line">vim _config.yml</span><br><span class="line"><span class="comment">#到文件最底部</span></span><br><span class="line"><span class="comment">#把Deployment下的配置修改成如下：</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Deployment</span></span><br><span class="line"><span class="comment">## Docs: https://hexo.io/docs/one-command-deployment</span></span><br><span class="line">deploy:</span><br><span class="line">  <span class="built_in">type</span>: git</span><br><span class="line">  repo: <span class="comment">#这里复制粘贴你刚刚git仓库的ssh地址！</span></span><br><span class="line">  branch: main</span><br></pre></td></tr></table></figure></li><li><p>hexo发布</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo g</span><br><span class="line">hexo d <span class="comment">#hexo deploy的意思</span></span><br></pre></td></tr></table></figure></li></ol><p><em>至此，hexo博客框架搭建完毕</em></p><h2 id="hexo基本使用">hexo基本使用</h2><h3 id="常用命令汇总">常用命令汇总</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo s <span class="comment">#hexo server，启动写好的博客，可以预览实时的笔记效果</span></span><br><span class="line">hexo n <span class="string">&quot;第一篇文章&quot;</span> <span class="comment">#new新建一篇文章，markdown文件</span></span><br><span class="line">hexo g <span class="comment">#hexo generate生成一篇文章，hexo进行渲染，注意，使用该命令需要去到自己博客的根目录进行生成</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 技术分享 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> 技术分享 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Ubuntu下使用Typora</title>
      <link href="/2023/10/18/%E3%80%90%E6%8A%80%E6%9C%AF%E5%BC%80%E5%8F%91%E3%80%91Ubuntu22.04%E7%8E%AF%E5%A2%83%E4%B8%8B%E5%85%8D%E8%B4%B9%E4%BD%BF%E7%94%A8%E4%BB%98%E8%B4%B9%E7%89%88typora/"/>
      <url>/2023/10/18/%E3%80%90%E6%8A%80%E6%9C%AF%E5%BC%80%E5%8F%91%E3%80%91Ubuntu22.04%E7%8E%AF%E5%A2%83%E4%B8%8B%E5%85%8D%E8%B4%B9%E4%BD%BF%E7%94%A8%E4%BB%98%E8%B4%B9%E7%89%88typora/</url>
      
        <content type="html"><![CDATA[<h1>Ubuntu22.04环境使用Typora</h1><h2 id="敬告">敬告</h2><p>**请注意：**本文仅以记录个人的学习过程，请不要从事任何违法行为。由此产生的任何问题都将由用户（您）承担。</p><h2 id="须知">须知</h2><ul><li>支持typora版本1.0.3</li><li>本人已测试平台：Ubuntu22.04</li></ul><h2 id="激活环境准备">激活环境准备</h2><ul><li><p>安装Python3、Python3-pip</p></li><li><p>安装nodejs</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install nodejs</span><br></pre></td></tr></table></figure></li><li><p>克隆typoraCraker项目</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/cnvetman/typoracracker.git</span><br></pre></td></tr></table></figure></li><li><p>安装python相关依赖</p><p>切换到克隆下来的项目根目录typoracracker下执行：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip3 install -r requirements.txt</span><br></pre></td></tr></table></figure></li></ul><h2 id="解包替换文件">解包替换文件</h2><blockquote><p>以下操作都是切换到<strong>typoraCracker项目根目录下</strong>执行</p><p><strong>注意，强烈建议在解包原生文件到~/Desktop中</strong></p></blockquote><ul><li><p>下载Typora1.0.3版本</p><p>项目目录下有typora_1.0.3的deb包，执行下面命令直接安装即可。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dpkg -i typora_1.0.3_amd64.deb</span><br></pre></td></tr></table></figure></li><li><p>解包原生app.asar</p></li></ul><p>安装Typora后，原生<code>app.asar文件</code>默认路径是<code>/usr/share/typora/resources/app.asar</code>；解包原生<code>app.asar文件</code>：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">python3 typora.py /usr/share/typora/resources/app.asar ~/Desktop/  </span><br><span class="line"><span class="comment"># 解包后，在桌面会有一个`dec_app`目录</span></span><br></pre></td></tr></table></figure><ul><li>修改License.js</li></ul><p>修改<code>dec_app</code>目录中的License.js；在typoraCracker项目下，提供有修改好的License.js，所以直接替换即可：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cp</span> example/patch/License.js ~/Desktop/dec_app/</span><br></pre></td></tr></table></figure><ul><li>生成app.asar</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">python3 typora.py -u ~/Desktop/dec_app ~/Desktop</span><br><span class="line"><span class="comment"># 在~/Desktop路径下，会生成新的的app.asar文件</span></span><br></pre></td></tr></table></figure><ul><li>替换app.asar</li></ul><p>将Typora原生的的app.asar文件替换：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 备份原生app.asar文件</span></span><br><span class="line">sudo <span class="built_in">cp</span> /usr/share/typora/resources/app.asar /usr/share/typora/resources/app.asar.bak    </span><br><span class="line"><span class="comment"># 用新生成的app.asar文件替换typora自带的app.asar文件</span></span><br><span class="line">sudo <span class="built_in">cp</span> ~/Desktop/app.asar /usr/share/typora/resources/app.asar         </span><br></pre></td></tr></table></figure><h2 id="激活Typora">激活Typora</h2><ul><li>在<strong>typoraCracker项目根路径下</strong>，执行keygen.js脚本：</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">生成激活码</span></span><br><span class="line">node example/keygen.js</span><br></pre></td></tr></table></figure><p>得到激活码后，打开Typora软件 --&gt; Typora帮助 --&gt; 我的许可证 --&gt; 输入你的激活信息，随便一个邮箱加生成的激活码。</p><ul><li>激活成功</li></ul><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20230801001323820.png" alt="image-20230801001323820"></p>]]></content>
      
      
      <categories>
          
          <category> 技术分享 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 技术分享 </tag>
            
            <tag> markdown </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Ubuntu下搭建arduino+vscode开发环境</title>
      <link href="/2023/10/18/%E3%80%90%E6%8A%80%E6%9C%AF%E5%BC%80%E5%8F%91%E3%80%91Ubuntu22%E7%8E%AF%E5%A2%83%E4%B8%8Barduino+vscode%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/"/>
      <url>/2023/10/18/%E3%80%90%E6%8A%80%E6%9C%AF%E5%BC%80%E5%8F%91%E3%80%91Ubuntu22%E7%8E%AF%E5%A2%83%E4%B8%8Barduino+vscode%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/</url>
      
        <content type="html"><![CDATA[<h1>Ubuntu22环境下arduino+vscode开发环境搭建</h1><p>本文用于记录搭建环境的过程，同时希望能帮助到有需要的人。</p><blockquote><p>背景：</p><p>本来想diy以下arduino小车，于是在linux系统上安装了arduinoIDE，发现这IDE比较丑，也没有代码提示，体验感不太好，于是想用万能vscode搭建arduino开发环境。</p></blockquote><h2 id="具体步骤">具体步骤</h2><ol><li><p>网上常见的步骤：</p><ul><li>安装vscode的arduino插件</li><li>安装arduinoIDE</li><li>在vscode的arduino插件设置中配置arduino的command路径和安装路径</li></ul><blockquote><p>大家可以按照第一种步骤试一试，我配置好后会出现can not find arduino tools的报错而不能使用；可能是我哪个环节出了问题吧。</p></blockquote></li><li><p>本人的方案</p><ul><li>安装vscode的arduino插件</li><li>下载arduino cli</li><li>清空arduino插件设置的command path和path</li></ul><blockquote><p>我这里可以正常使用</p></blockquote></li></ol><h2 id="第一种方案">第一种方案</h2><ol><li><p>打开vscode，打开扩展资源，搜索arduino，选择有微软蓝标的进行下载；</p><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20230514121233087.png" alt="image-20230514121233087"></p></li><li><p>去官网下载arduinoIDE</p><p>官网链接：<a href="https://www.arduino.cc/en/software">https://www.arduino.cc/en/software</a></p><p>（也可以谷歌arduino，进入官网，点击solfware）</p><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20230514121511784.png" alt="image-20230514121511784"></p></li><li><p>根据自己的系统进行下载</p><p>我根据自己的系统，选择了Linux 64bit的下载，我下载的版本是1.8.19；</p><p>vscode的arduino插件支持arduinoIDE的版本为1.6.x以上，但是不支持2.0.0版本；（插件的detail里面有说）</p><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20230514121606213.png" alt="image-20230514121606213"></p></li><li><p>下载好后，得到arduino-1.8.19-linux64.tar.xz的包，默认在Download目录下，终端cd进入Download目录对包进行解压；</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#在arduino-1.8.19-linux64.tar.xz所在的目录下（默认是Download）</span></span><br><span class="line">tar -xvf arduino-1.8.19-linux64.tar.xz</span><br><span class="line"><span class="comment">#解压得到文件夹arduino-1.8.19</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#然后移动到你想移动的地方,我把他放在根目录下的/opt</span></span><br><span class="line">sudo <span class="built_in">mv</span> arduino-1.8.19 /opt</span><br><span class="line"></span><br><span class="line"><span class="comment">#然后进行安装</span></span><br><span class="line"><span class="built_in">cd</span> /opt/arduino-1.8.19</span><br><span class="line">./install.sh</span><br></pre></td></tr></table></figure></li><li><p>回到vscode插件设置;</p><p>在输入框输入path，出现如下界面，把arduino的安装路径和可执行文件的路径写下去即可；</p><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20230514123129531.png" alt="image-20230514123129531"></p><blockquote><p>如何查看arduino的安装路径和可执行文件的路径？</p><p>在终端输入</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">whereis arduino</span><br></pre></td></tr></table></figure><p>在bin目录下的是可执行文件的路径</p></blockquote></li></ol><h2 id="第二种方案">第二种方案</h2><p>不用arduinoIDE+vscode，而用arduinoCLI+vsode。</p><p>简单来讲，arduinoCLI是基于命令行的arduino，和arduinoIDE的差别在于没有其自带的编辑器，而且arduinoCLI体量很小，只有20M不到。</p><p>而vscode正是我们要使用的编辑器，所以用vscode+arduinoCLI是十分合适的。</p><h3 id="步骤">步骤</h3><ol><li><p>在vsode插件资源中下载arduino（和第一种方案一致）</p></li><li><p>去arduinoCLI的github仓库中下载对应的版本</p><p>下载地址：<a href="https://github.com/arduino/arduino-cli/releases/">https://github.com/arduino/arduino-cli/releases/</a></p><p>选择对应版本下载，我选择的是linux64位的；</p><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20230514123907364.png" alt="image-20230514123907364"></p></li><li><p>然后在对应目录下解压下载好的文件；</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#解压到指定目录，这里我把文件解压到/usr/local/bin（把目录解压到这里，arduino-cli的环境变量也顺便配置好了），并把解压后的文件放在arduino-cli里面（C要大写）</span></span><br><span class="line">sudo tar xf arduino-cli.tar.gz -C /usr/local/bin arduino-cli</span><br><span class="line"></span><br><span class="line"><span class="comment">#检查是否安装成功</span></span><br><span class="line">arduino-cli version</span><br><span class="line"></span><br><span class="line"><span class="comment">#安装成功后，可以把原来的包删掉</span></span><br><span class="line"><span class="built_in">rm</span> -rf arduino-cli-tar.gz</span><br><span class="line"></span><br><span class="line"><span class="comment">#至此，arduino-cli配置完毕</span></span><br></pre></td></tr></table></figure></li><li><p>然后去到vscode的arduino插件设置，command path和path什么东西都不用写，空着就行。</p><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20230514123129531.png" alt="image-20230514123129531"></p></li><li><p>然后在右底角选择串口、板子型号之类的。</p></li><li><p>然后就能在vscode优雅地编写代码并烧录编译啦；</p><p>尝试简单的代码烧写，可以烧录，arduino板子也可以跑程序。</p><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20230514125244701.png" alt="image-20230514125244701"></p></li></ol><blockquote><p>本人小白一枚，本篇仅以记录学习过程和给他人提供参考；如果有错误之处，请大家指正。</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 技术分享 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 单片机 </tag>
            
            <tag> 技术分享 </tag>
            
            <tag> vscode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>机器学习概述</title>
      <link href="/2023/10/16/%E3%80%90%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E3%80%910-%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E6%A6%82%E8%BF%B0/"/>
      <url>/2023/10/16/%E3%80%90%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E3%80%910-%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E6%A6%82%E8%BF%B0/</url>
      
        <content type="html"><![CDATA[<h1>机器学习概述</h1><h2 id="概述">概述</h2><p>机器学习（ML），专门研究计算机怎样模拟实现人类的学习行为，以获取新知识或技能，重新组织已有的知识结构使之不断改善自身的性能。</p><p>机器学习是人工智能的核心，是使得计算机具有智能的根本途径，其应用遍及人工智能的各个领域，主要使用<strong>归纳、综合</strong>而不是演绎。</p><h2 id="机器学习场景">机器学习场景</h2><ul><li>模式识别</li><li>机器学习</li><li>深度学习：其主要研究建立、模拟人脑进行分析学习的<strong>神经网络</strong>，模仿人脑的机制来解释数据，例如图像、声音和文本。</li></ul><p>应用举例：</p><ol><li>搜索引擎： 根据你的搜索点击，优化你下次的搜索结果,是机器学习来帮助搜索引擎判断哪个结果更适合你（也判断哪个广告更适合你）。</li><li>垃圾邮件：会自动的过滤垃圾广告邮件到垃圾箱内。</li><li>超市优惠卷：在构面小孩尿布的时候，售货员会送你一份优惠卷买啤酒</li><li>邮局邮寄：手写软件自动识别寄送贺卡的地址</li><li>申请贷款：通过最近的金融活动信息进行综合评价，决定你是否合格</li></ol><h2 id="机器学习组成">机器学习组成</h2><h3 id="主要任务">主要任务</h3><p>回归和分类都是机器学习的算法，一个问题用机器学习的方式解决，需要采用回归还是分类，取决于<strong>目标变量</strong>需要的是连续的数据还是离散的数据。一般回归算法用于X到Y的映射这样的关系（连续），分类算法一般用于离散的标记数据。</p><p>分类预测的目标变量通常是有限的有限集合，回归预测的目标变量通常是无限的连续集合。</p><ul><li><p>分类（classification）：将实例数据划分到合适的类别中</p><p>应用：判断网站是否被黑客入侵（二分类：是和否），手写数字自动识别（多分类）</p></li><li><p>回归（regression）：主要用于预测数值型数据。</p><p>应用：股票价格波动的预测，房屋价格预测等</p></li></ul><h3 id="监督学习（supervised-learning）">监督学习（supervised learning）</h3><ul><li>必须确定<strong>目标变量</strong>的值，以便机器学习算法可以发现<strong>特征变量和目标变量</strong>的关系。在监督学习中，给一组数据，我们知道正确的输出结果是怎么样的，并且知道输入与输出之间存在一定的关系。</li><li>样本集：训练数据+测试数据<ol><li>训练样本=特征（feature）+目标变量（label：分类-离散值/ 回归-连续值）</li><li>特征通常样本的列，他们是独立测量得到的</li><li>目标变量：目标变量是机器学习预测算法的测试结果<ul><li>在分类算法中，目标变量的结果通常是标称变量，比如真假、是否、猫还是狗；</li><li>在回归算法中，目标变量的结果通常是连续型的，比如1-100</li></ul></li></ol></li><li>监督学习需要注意的问题：<ol><li>偏执方差权衡</li><li>功能的复杂性和数量的训练数据</li><li>输入空间的维数</li><li>噪声中的输出值</li></ol></li><li>知识表示：<ol><li>可以采用规则集的形式【例如: 数学成绩大于90分为优秀】</li><li>可以采用概率分布的形式【例如: 通过统计分布发现，90%的同学数学成绩，在70分以下，那么大于70分定为优秀】</li><li>可以使用训练样本集中的一个实例【例如: 通过样本集合，我们训练出一个模型实例，得出 年轻，数学成绩中高等，谈吐优雅，我们认为是优秀】</li></ol></li></ul><h3 id="非监督学习（unsupervised-learning）">非监督学习（unsupervised learning）</h3><ul><li>在机器学习中，无监督学习的问题是，在未加标签的数据中，试图找到隐藏的结构和关系。因为提供给学习者的示例是未标记的，因此没有错误或者报酬信号来评估潜在的解决方案。</li><li>与无监督学习密切相关的是<strong>统计数据密度估计</strong>的问题。然而无监督学习还包括寻求、总结和解释数据的主要特点等诸多技术。在无监督学习中，使用的许多方法都是基于处理数据的数据挖掘技术。</li><li>数据没有类别信息，也不给目标值</li><li>无监督学习包括的类型：<ol><li>聚类：在无监督学习中，将数据分成由类似的对象组成的多个类的过程称为聚类</li><li>密度估计：通过样本分布的紧密程度，来估计与分组的相似性</li><li>此外，无监督学习<strong>还可以减少数据特征的维度</strong>，以便我们使用二维图、三维图更加直观地展示数据信息</li></ol></li></ul><h3 id="强化学习">强化学习</h3><p>这个算法可以训练程序作出某一决定。程序在某一情况下尝试所有可能行动，记录不同行动的结果并尝试着找出最好的一次尝试来做决定。属于这一类算法的有马尔可夫决策过程。</p><h3 id="算法汇总">算法汇总</h3><p><strong>监督学习</strong></p><table><thead><tr><th>算法</th><th>用途</th></tr></thead><tbody><tr><td>K-近邻值算法</td><td>线性回归</td></tr><tr><td>朴素贝叶斯算法</td><td>局部加权线性回归</td></tr><tr><td>支持向量机</td><td>Ridge回归</td></tr><tr><td>决策树</td><td>Lasso最小回归系数估计</td></tr></tbody></table><p><strong>无监督学习</strong></p><table><thead><tr><th>算法</th><th>用途</th></tr></thead><tbody><tr><td>K-均值算法</td><td>最大期望算法</td></tr><tr><td>DBSCAN</td><td>Parzen窗设计</td></tr></tbody></table><h2 id="机器学习的使用">机器学习的使用</h2><h3 id="选择算法">选择算法</h3><p>选择算法需要考虑两个问题：</p><ol><li><p>算法场景？</p><p>主要是根据算法场景决定选择监督学习还是非监督学习</p></li><li><p>需要收集或者分析的数据是什么？</p><p>根据需要收集或分析的数据选择具体算法</p><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20231010183232654.png" alt="image-20231010183232654"></p></li></ol><h3 id="机器学习开发流程">机器学习开发流程</h3><ol><li>收集数据：收集样本数据</li><li>准备数据：注意数据格式</li><li>分析数据：为了确保数据集中没有垃圾数据；（数据预处理）</li><li>训练算法：[机器学习算法核心]如果使用无监督学习算法，由于不存在目标变量值，则可以跳过此步骤</li><li>测试算法：[机器学习算法核心]评估算法效果</li><li>使用算法：将机器学习算法封装成应用程序</li></ol><h2 id="机器学习基础概念">机器学习基础概念</h2><h3 id="数据集的划分">数据集的划分</h3><ul><li><strong>训练集（Training Set）</strong>学习样本数据，通过匹配一些参数来建立模型，主要用来训练模型</li><li><strong>验证集（valudation set）</strong>     对学习出来的模型，调整模型参数，如在神经网络中选择隐藏单元数。验证集还用来确定网格结构或者控制模型的复杂程度参数</li><li><strong>测试集（test set）</strong>       测试训练好的模型的分辨能力</li></ul><h3 id="模型的拟合程度">模型的拟合程度</h3><ul><li>欠拟合（underfitting）：模型没有很好地捕捉到数据特征，不能很好地拟合数据，对样本的一般性质还未学好。</li><li>过拟合（overfitting）：模型把训练样本学习的“太好了”，可能把一些训练样本训练集仅有的特性当做了所有样本都有的一般特性，导致泛化能力下降。</li></ul><h3 id="常见的模型指标">常见的模型指标</h3><ul><li>正确率：提取出正确信息数量/提取出的信息数量</li><li>召回率：提取出正确信息数量/样本中信息数量</li><li>F值：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mfrac><mrow><mn>2</mn><mo>×</mo><mtext>正确率</mtext><mo>×</mo><mtext>召回率</mtext></mrow><mrow><mtext>正确率</mtext><mo>+</mo><mtext>召回率</mtext></mrow></mfrac></mrow><annotation encoding="application/x-tex">\frac{2\times正确率\times召回率}{正确率+召回率}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.2757em;vertical-align:-0.4033em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8723em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord cjk_fallback mtight">正确率</span><span class="mbin mtight">+</span><span class="mord cjk_fallback mtight">召回率</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="mbin mtight">×</span><span class="mord cjk_fallback mtight">正确率</span><span class="mbin mtight">×</span><span class="mord cjk_fallback mtight">召回率</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.4033em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span>    F值即为正确率和召回率的<strong>调和平均值</strong></li></ul><h3 id="模型">模型</h3><ul><li><p>分类问题</p></li><li><p>回归问题</p></li><li><p>聚类问题：聚类是一种无监督学习任务，该算法基于数据内部结构寻找观察样本的自然簇群。<br>聚类问题的标准一般基于距离：簇内距离，簇间距离</p><p>簇内距离越小越好，簇间距离越大越好</p><p>一般地，衡量聚类问题一般会给出一个结合簇内距离和簇间距离的公式</p></li></ul><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20231010185415558.png" alt="image-20231010185415558"></p><h2 id="特征工程">特征工程</h2><ul><li><p>特征选择：也叫特征子集选择（FFS，Feature Subset Selection）。</p><p>从已有的M个特征中选择N个特征使得系统特定指标最优化，是从原始特征中选择出一些最有效特征以降低数据集维度的过程，是提高算法效率的重要手段，也是关键的数据预处理工作。</p></li><li><p>特征提取：特征提取是计算机视觉和图像处理的一个概念，是指使用计算机提取图像信息，决定每个图像的点是否属于一个图像特征。特征提取的结果是把图像上的点分为不同的子集，这些子集往往属于孤立的点，连续的曲线或者连续的区域。</p></li></ul><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20231010190110340.png" alt="image-20231010190110340"></p>]]></content>
      
      
      <categories>
          
          <category> 人工智能 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
            <tag> 人工智能 - 机器学习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>代价损失函数</title>
      <link href="/2023/10/16/%E3%80%90%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E3%80%911-%E4%BB%A3%E4%BB%B7%E6%8D%9F%E5%A4%B1%E5%87%BD%E6%95%B0/"/>
      <url>/2023/10/16/%E3%80%90%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E3%80%911-%E4%BB%A3%E4%BB%B7%E6%8D%9F%E5%A4%B1%E5%87%BD%E6%95%B0/</url>
      
        <content type="html"><![CDATA[<h1>代价损失函数</h1><h2 id="如何判断参数选的好不好？-选择模型的最佳参数">如何判断参数选的好不好？| 选择模型的最佳参数</h2><p>代价损失函数是用于衡量我们模型训练出来的参数好不好的一个重要函数。可以根据具体问题具体定义分析，但是以下讲的平均误差平方和的形式是最常见也是最常用的代价损失函数。</p><p>我们可以使用代价成本函数，来选择模型的最佳参数。</p><h2 id="代价损失函数公式">代价损失函数公式</h2><h3 id="基本介绍">基本介绍</h3><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi>f</mi><mrow><mi>w</mi><mo separator="true">,</mo><mi>b</mi></mrow></msub><mo stretchy="false">(</mo><msup><mi>x</mi><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msup><mo stretchy="false">)</mo><mo>=</mo><mi>w</mi><msup><mi>x</mi><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msup><mo>+</mo><mi>b</mi><mspace linebreak="newline"></mspace><msup><mover accent="true"><mi>y</mi><mo>^</mo></mover><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msup><mo>=</mo><msub><mi>f</mi><mrow><mi>w</mi><mo separator="true">,</mo><mi>b</mi></mrow></msub><mo stretchy="false">(</mo><msup><mi>x</mi><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">f_{w,b}(x^{(i)})=wx^{(i)}+b \\ \hat{y}^{(i)}=f_{w,b}(x^{(i)})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.2241em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.1076em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.02691em;">w</span><span class="mpunct mtight">,</span><span class="mord mathnormal mtight">b</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.938em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">i</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.0213em;vertical-align:-0.0833em;"></span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.938em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">i</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal">b</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:1.1324em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.6944em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.1944em;"><span class="mord">^</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.1944em;"><span></span></span></span></span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.938em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">i</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.2241em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.1076em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.02691em;">w</span><span class="mpunct mtight">,</span><span class="mord mathnormal mtight">b</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.938em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">i</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></span></p><p>这里是一个线性回归函数以及线性的例子，我们回归和训练、学习的目的就是得到一个参数组合w,b，使得拟合效果最好。</p><p>那么我们怎么知道我们最终选的w,b到底效果怎么样呢？</p><p>这时我们可以引入一个代价损失函数，该函数定义如下：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>J</mi><mo stretchy="false">(</mo><mi>w</mi><mo separator="true">,</mo><mi>b</mi><mo stretchy="false">)</mo><mo>=</mo><mfrac><mn>1</mn><mrow><mn>2</mn><mi>m</mi></mrow></mfrac><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>m</mi></munderover><mo stretchy="false">(</mo><msup><mover accent="true"><mi>y</mi><mo>^</mo></mover><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msup><mo>−</mo><msup><mi>y</mi><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msup><msup><mo stretchy="false">)</mo><mn>2</mn></msup></mrow><annotation encoding="application/x-tex">J(w,b) = \frac{1}{2m}\sum_{i=1}^m(\hat{y}^{(i)}-y^{(i)})^2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.09618em;">J</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">b</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.9291em;vertical-align:-1.2777em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3214em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span><span class="mord mathnormal">m</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.6514em;"><span style="top:-1.8723em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">m</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.2777em;"><span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.6944em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.1944em;"><span class="mord">^</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.1944em;"><span></span></span></span></span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.938em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">i</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.188em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.938em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">i</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span></span></p><p>其中<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mover accent="true"><mi>y</mi><mo>^</mo></mover><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msup><mo>−</mo><msup><mi>y</mi><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msup></mrow><annotation encoding="application/x-tex">\hat{y}^{(i)}-y^{(i)}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0824em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.6944em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.1944em;"><span class="mord">^</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.1944em;"><span></span></span></span></span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.888em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">i</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.0824em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.888em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">i</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span></span></span></span>我们称之为误差error，预测值与现实值的误差。为了统一得到非负数的表示，我们统一取其平方。我们对这组预测的每一个值都进行误差平方的运算并加起来，用于衡量在该参数选择下该组数据的拟合效果。</p><p>但是如果我们有许多组不同的数据，每个数据集的量级都不同，如果只计算上面的误差平方和，会导致数据量越大的数据集算出来的损失函数越大。这并不是我们希望看到的。</p><p>所以我们对误差平方和的计算取平均，平均到每一个数据元素上，抵消累加的效果。这样不同的数据集就在一个尺度进行衡量。</p><p>但是我们为了后续数据的计算方便和美观，根据经验，我们应该除以2m，当然除以m也没有任何问题。</p><p>注意：这里的m是指样本的个数，i是指某一个样本，J(w,b是参数为w.b下的代价损失函数，页脚平方误差损失函数。</p><h3 id="代价成本函数引入的目的">代价成本函数引入的目的</h3><p>我们引入代价成本函数后，为了找到最佳的模型参数，我们可以对其代价成本函数求最小值，即使得<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>J</mi><mrow><mi>w</mi><mo separator="true">,</mo><mi>b</mi></mrow></msub></mrow><annotation encoding="application/x-tex">J_{w,b}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9694em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.09618em;">J</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.0962em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.02691em;">w</span><span class="mpunct mtight">,</span><span class="mord mathnormal mtight">b</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span></span></span></span>最小，这样意味着在该代价成本函数的衡量指标下，模型损失精确度的代价最小，也就是模型效果最好。</p><p>数学表达：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>m</mi><mi>o</mi><mi>d</mi><mi>e</mi><mi>l</mi><mo>:</mo><msub><mi>f</mi><mrow><mi>w</mi><mo separator="true">,</mo><mi>b</mi></mrow></msub><mo>=</mo><mi>w</mi><mi>x</mi><mo>+</mo><mi>b</mi><mspace linebreak="newline"></mspace><mi>p</mi><mi>a</mi><mi>r</mi><mi>a</mi><mi>m</mi><mi>e</mi><mi>t</mi><mi>e</mi><mi>r</mi><mi>s</mi><mo>:</mo><mi>w</mi><mo separator="true">,</mo><mi>b</mi><mspace linebreak="newline"></mspace><mi>c</mi><mi>o</mi><mi>s</mi><mi>t</mi><mi>f</mi><mi>u</mi><mi>n</mi><mi>c</mi><mi>t</mi><mi>i</mi><mi>o</mi><mi>n</mi><mo>:</mo><mi>J</mi><mo stretchy="false">(</mo><mi>w</mi><mo separator="true">,</mo><mi>b</mi><mo stretchy="false">)</mo><mo>=</mo><mfrac><mn>1</mn><mrow><mn>2</mn><mi>m</mi></mrow></mfrac><munder><mo>∑</mo><mi>i</mi></munder><mo>=</mo><msup><mn>1</mn><mi>m</mi></msup><mo stretchy="false">(</mo><msub><mi>f</mi><mrow><mi>w</mi><mo separator="true">,</mo><mi>b</mi></mrow></msub><mo stretchy="false">(</mo><msup><mi>x</mi><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msup><mo stretchy="false">)</mo><mo>−</mo><msup><mi>y</mi><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msup><msup><mo stretchy="false">)</mo><mn>2</mn></msup><mspace linebreak="newline"></mspace><mi>g</mi><mi>o</mi><mi>a</mi><mi>l</mi><mo>:</mo><mi>m</mi><mi>i</mi><mi>n</mi><mi>i</mi><mi>m</mi><mi>i</mi><mi>z</mi><msub><mi>e</mi><mrow><mi>w</mi><mo separator="true">,</mo><mi>b</mi></mrow></msub><mi>J</mi><mo stretchy="false">(</mo><mi>w</mi><mo separator="true">,</mo><mi>b</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">model:f_{w,b}=wx+b \\parameters: w, b \\cost function:J(w,b)=\frac{1}{2m}\sum_i=1^m(f_{w,b}(x^{(i)})-y^{(i)})^2\\goal: minimize_{w,b}J(w,b)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal">m</span><span class="mord mathnormal">o</span><span class="mord mathnormal">d</span><span class="mord mathnormal">e</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">:</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.9805em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.1076em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.02691em;">w</span><span class="mpunct mtight">,</span><span class="mord mathnormal mtight">b</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6667em;vertical-align:-0.0833em;"></span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal">b</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.8095em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">p</span><span class="mord mathnormal">a</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mord mathnormal">am</span><span class="mord mathnormal">e</span><span class="mord mathnormal">t</span><span class="mord mathnormal">ers</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">:</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">b</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">cos</span><span class="mord mathnormal">t</span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mord mathnormal">u</span><span class="mord mathnormal">n</span><span class="mord mathnormal">c</span><span class="mord mathnormal">t</span><span class="mord mathnormal">i</span><span class="mord mathnormal">o</span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">:</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.09618em;">J</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">b</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.5991em;vertical-align:-1.2777em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3214em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span><span class="mord mathnormal">m</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.05em;"><span style="top:-1.8723em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.2777em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.2241em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord">1</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7144em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">m</span></span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.1076em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.02691em;">w</span><span class="mpunct mtight">,</span><span class="mord mathnormal mtight">b</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.938em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">i</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.188em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.938em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">i</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal">o</span><span class="mord mathnormal">a</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">:</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.0361em;vertical-align:-0.2861em;"></span><span class="mord mathnormal">minimi</span><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="mord"><span class="mord mathnormal">e</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.02691em;">w</span><span class="mpunct mtight">,</span><span class="mord mathnormal mtight">b</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mord mathnormal" style="margin-right:0.09618em;">J</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">b</span><span class="mclose">)</span></span></span></span></span></p><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20231013004359099.png" alt="image-20231013004359099"></p><h3 id="如何根据代价损失函数找到最佳参数">如何根据代价损失函数找到最佳参数</h3><p>由于代价损失函数J公式(3)，J是衡量平方误差的函数。所以我们找到的参数w，尽可能在参数w情况下的拟合曲线或者直线与其他样本点的平方误差和小即可。</p>]]></content>
      
      
      <categories>
          
          <category> 人工智能 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
            <tag> 人工智能 - 机器学习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MPU6050传感器</title>
      <link href="/2023/10/16/%E3%80%90STM32HAL%E5%BA%93%E5%BC%80%E5%8F%91%E3%80%9119-MPU6050%E4%BC%A0%E6%84%9F%E5%99%A8/"/>
      <url>/2023/10/16/%E3%80%90STM32HAL%E5%BA%93%E5%BC%80%E5%8F%91%E3%80%9119-MPU6050%E4%BC%A0%E6%84%9F%E5%99%A8/</url>
      
        <content type="html"><![CDATA[<h1>MPU6050传感器</h1><h2 id="姿态检测">姿态检测</h2><p>抽象来说，姿态就是“载体坐标系”和“地理坐标系”之间的转换关系。</p><h3 id=""></h3><h3 id="坐标系">坐标系</h3><p><strong>常用的坐标系</strong></p><ul><li><p>地球坐标系</p><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20230113234542491.png" alt="image-20230113234542491"></p></li><li><p>地理坐标系</p></li><li><p>载体坐标系</p><p>以运载体的质心为原点，一般根据运载体自身结构方向构成坐标系，如Z轴上由原点指向载体顶部，Y轴指向载体头部，X轴沿载体两侧方向。上面说基于飞机建立的坐标系就是一种载体坐标系，可类比到汽车、船舰、人体、动物或手机等各种物体。</p><p><strong>重要的几个角</strong></p><p>这几个角涉及到坐标转换</p><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20230115213019160.png" alt="image-20230115213019160"></p><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20230115213152492.png" alt="image-20230115213152492"></p></li></ul><h3 id="MPU6050传感器">MPU6050传感器</h3><p>采用MEMS（微机系统）结合机械系统的方式，可以求出实时的偏航角、俯仰角、横滚角的角速度，然后通过对时间的积分可以求出偏离的角度从而确定物体的姿态。</p><h4 id="误差分析"><strong>误差分析</strong></h4><p><strong>累计误差</strong></p><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20230115220033292.png" alt="image-20230115220033292"></p><h4 id="减少误差、克服缺陷的方案"><strong>减少误差、克服缺陷的方案</strong></h4><ul><li>加速度传感器（无法测算出偏航角的误差、不区分重力加速度和外力加速度，当受到外部冲击时会有很大的精度误差）</li><li>磁场检测传感器（电子罗盘，在磁场环境不稳定的区域会有误差）</li><li>GPS检测（只适用于大范围移动）</li></ul><p><strong>姿态融合，滤波算法（多传感器采样，利用不同传感器在不同情况的优点使用一定的算法提高某种传感器采样数据的权重，来提高姿态检测的精确性）</strong></p><p><strong>姿态角也叫欧拉角</strong></p><p><strong>四元数</strong></p><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20230115222808182.png" alt="image-20230115222808182"></p><p><strong>拓展：惯性导航（一般是军用设施）</strong></p><p>惯性导航不需要连接GPS等卫星导航，只需要知道起始坐标（开始时在地球的哪一个位置），每次的移动的运动都能够被累加计算出来，得到新的坐标，这样就知道物体的实时位置而不需要联网或者GPS</p><h2 id="传感器工作原理">传感器工作原理</h2><p>在电子技术中，传感器一般是指把物理量转化为电信号的装置。</p><p>传感器的原理</p><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20230116214557779.png" alt="image-20230116214557779"></p><p>比如温度传感器，可以把温度量转化成电压信号量输出，且温度值与电压值成比例关系，我们只要使用ADC测量出电压值，并根据转换关系即可求得实际温度值。</p><h3 id="传感器参数">传感器参数</h3><p>线性误差：传感器测量值与真实物理量之间的拟合度误差</p><p>分辨率：传感器能够检测到的最小物理量的单位</p><p>采样频率：单位时间内的采样次数</p><h3 id="物理量的表示方法">物理量的表示方法</h3><p>大部分传感器的输出都是与电压成比例关系的，电压值一般采用ADC来测量，而ADC一般有固定的位数，如8位的ADC、12位的ADC等等，ADC的位数会影响测量的分辨率吧以及量程。</p><p>假设用一个2位的ADC来测量长度，2位的ADC最多可以表示4个数字，分别是0、1、2、3、4；那么假如分辨率位20cm，量程就是60cm；分辨率为10cm，量程就是30cm。</p><p><strong>所以，对于特定位数的ADC，量程和分辨率不可兼得（我们往往需要更大的量程和最小的精度，但是从上面的例子可以明显看出量程和分辨率是成正比例关系的）</strong></p><p>在实际应用钟，常常直接使用ADC<strong>每位</strong>表征的物理量的值来表示分辨率，如<strong>每位</strong>代表20cm，我们称它的分辨率为1LBS/20cm，它等效于5位表示1米：5LSB/m。<strong>其中的LSB（least significant bit），意为ADC的最低有效位</strong>。</p><p>使用采集得到的ADC数值除以分辨率，即可求得物理量。例如使用分辨率为5LBS/m，线性误差为0.1m的传感器进行长度测量，其ADC采样数据为20时，可计算得到传感器测量值为20/5=4m，而该物体长度的实际值在3.9m-4.1之m间。</p><p>例如在ADC电压采集的例程中，我们使用的STM32F103C8T6的板子是有12位的ADC，那么我们测量量程为3.3v的电压时，分辨率（也就是LSB）为3.3/4096，结果是LSB=0.0008056640625；如果哦我们ADC测到的数据为2048，那么我们就用2048*LSB=1.65；</p><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20230116222444665.png" alt="image-20230116222444665"></p><h2 id="MPU6050传感器介绍">MPU6050传感器介绍</h2><p>MPU6050是一个六轴的传感器模块，能同时检测三轴加速度、三轴陀螺仪（三轴角速度）的运动以及温 度数据。 利用MPU6050芯片内部的DMP模块（Digital Motion Processor数字运算处理器），可以对传感数据进 行滤波、融合处理，它直接通过I2C协议接口向主控制器输出姿态解算后的姿态数据，降低主控制器的运 算量。其姿态解算率最高可达200Hz，非常适合用于对姿态控制实时要求较高的领域。常见应用于手机 计步器、只能手环、四轴传感器以及计步器等的姿态检测。</p><p><strong>一般MPU6050芯片上会有方向的标注，我们在安装芯片时我们应该尽可能使得芯片与载体坐标系重合， 减少误差。</strong></p><h3 id="MPU6050的一些特性参数">MPU6050的一些特性参数</h3><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20230122122002343.png" alt="image-20230122122002343"></p><h4 id="小结："><strong>小结：</strong></h4><p>从表中，我们了解到传感器的加速度以及陀螺仪的采样频率分别为1000Hz和8000Hz，它们是指加速度 以及角速度数据的采样频率，我们可以使用STM32控制器把这些数据读取出来然后进行姿态融合解算， 以求出传感器当前的姿态（俯仰角、偏航角、横滚角）。</p><p>而如果我们直接使用传感器内部的DMP单元进行解算，可以直接对采样的加速度以及角速度进行姿态解 算，解算得到的结果再输出给STM32控制器，即STM32无需自己计算，可以直接获得偏航角等姿态数 据，该DMP每秒可以输出200次姿态数据（输出频率为200Hz）。</p><p><strong>如果你是专门研究算法的话，你觉得你自己的解算姿态角的算法比官方的库的算法要好，那我们可以不 使用DMP模块而用自己的算法来进行解算。</strong></p><p><strong>小tips</strong></p><p>本传感器采用I2C协议，原本只需要GCC、GND、SCL、SDA即可进行通讯使用，那么为什么还有8个引 脚呢？</p><p>因为MPU6050是6轴传感器（三个角速度以及三个加速度），有时我们需要计算9轴的数据，需要外接 芯片对三个方向的磁场进行数据采样，多出来的几个引脚的用处就在于此，其实很少用到，仅作了解。</p><h2 id="MPU6050引脚介绍">MPU6050引脚介绍</h2><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20230122122123683.png" alt="image-20230122122123683"></p><h2 id="MPU6050实验——获取原始数据">MPU6050实验——获取原始数据</h2><h3 id="MPU6050传感器与控制器的连接">MPU6050传感器与控制器的连接</h3><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20230123201741275.png" alt="image-20230123201741275"></p><h2 id="HAL库实操">HAL库实操</h2><h3 id="疑问：">疑问：</h3><ol><li><p>配置地址的大小的时候怎么写？</p></li><li><p>记录采样数据的时候为什么可以这样？？</p><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20230223130253383.png" alt="image-20230223130253383"></p></li><li><p>为什么串口重定向时用</p><p>(uint8_t *)&amp;ch</p></li><li><p>出现的问题：</p><p>在写自己的函数库的时候，包含了头文件#include &quot;stm32f1xx_hal_conf.h&quot;用于调度寄存器映射，但是会报错undefine</p><p>于是改为/#include &quot;stm32f1xx_hal.h&quot;不会报错</p></li><li><p>检测不到ID，不确定ID地址是不是0x68&lt;&lt;1</p><p>(已解决，原因是设备地址是：0xD0)</p></li></ol>]]></content>
      
      
      <categories>
          
          <category> 单片机 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
            <tag> 单片机 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>I2C</title>
      <link href="/2023/10/16/%E3%80%90STM32HAL%E5%BA%93%E5%BC%80%E5%8F%91%E3%80%9118-IIC/"/>
      <url>/2023/10/16/%E3%80%90STM32HAL%E5%BA%93%E5%BC%80%E5%8F%91%E3%80%9118-IIC/</url>
      
        <content type="html"><![CDATA[<h1>I2C</h1><h2 id="I2C通信协议简介">I2C通信协议简介</h2><h3 id="I2C简单介绍">I2C简单介绍</h3><p>另外，CubeMx上面也有类I2C协议，SMBus-Alert-mode，这是一种类I2C协议</p><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20221118230608357.png" alt="image-20221118230608357"></p><h3 id="I2C物理层特点">I2C物理层特点</h3><ul><li>它是一个支持多设备的总线。“总线”指的是多个设备共用的信号线。在一个I2C通讯总线中，可连接多个I2C通讯设备，支持多个通讯主机以及多个通讯从机。</li><li>一个I2C总线只使用两条总线线路，一条双向串行数据线(SDA)，一条串行时钟线(SCL).数据线即用来表示数据，<strong>时钟线用于数据收发同步。</strong></li><li>每个连接到总线的设备都有一个独立的地址，主机可以利用这个地址进行不同设备之间的访问。</li></ul><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20221118231151865.png" alt="image-20221118231151865"></p><p>了解I2C<strong>物理层的电路设计</strong></p><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20221118231654400.png" alt="image-20221118231654400"></p><h3 id="I2C的协议层">I2C的协议层</h3><p><strong>I2C的协议定义了通讯的起始和停止信号、数据有效性、响应、仲裁、时钟同步和地址广播等环节。</strong></p><p>我们的目的是了解协议的核心内容，然后学会通过STM32配置出合适的协议来实现具体的功能。</p><ol><li><h4 id="I2C的基本读写过程">I2C的基本读写过程</h4><h5 id="主机写数据到从机"><strong>主机写数据到从机</strong></h5><p><strong>注意结合下图来理解这个过程，图中阴影位表示主机发送的数据，无阴影位是从机相应的数据</strong></p><ul><li><p>首先传输一个起始信号S，然后在其实信号后面紧接着传输从机地址的信号SLAVE_ADDRESS，确定通讯数据传输目标；</p></li><li><p>在传输目标之后就是一个读写信号位：W/R，通过这个信号位指定这个传输的信号是用来读还是用来写的；（‘0’对应着写，‘1’对应着读）</p></li><li><p>如果从机接收到主机传输的数据之后（确认主机传输的地址是该从机地址），从机就会向主机发送一个响应信号：ACK(应答)/UACK(非应答)，如果从机收到了与它地址相匹配的内容的话，就会响应ACK表示“我收到了”。</p></li><li><p>如果从机没有响应主机是否收到信息，那么主机就会等待应答，直到达到最大响应时间，主机就会认为数据没有发送成功。</p></li><li><p>如果从机发出了响应并响应ACK收到信息，那么主机认为存在这样的从机，并且数据发送成功。于是主机就会开始对从机发送数据信息。于是主机和从机就开始了通信，这时主机从机就会占用总线通信。</p></li><li><p>按照这样的格式，主机和从机就可以不断通讯。</p></li><li><p>在这个协议的末尾是一个P位，停止位，表示数据传输完毕。</p><p><strong>这就是一个简单的主机写数据到从机的过程。</strong></p></li></ul><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20221118232057351.png" alt="image-20221118232057351"></p><h5 id="主机由从机中读数据"><strong>主机由从机中读数据</strong></h5><ul><li>和主机写数据到从机的过程基本一致。</li><li>区别在于：<ul><li>主机向从机发送的标志位位写（W）</li><li>当从机响应之后，从机向主机传输数据（而不是主机向从机传输数据）</li><li>数据传输完成之后，主机向从机进行响应是否收到</li><li>就这样不断地进行传输，直到主机不想再读数据了，主机就不响应从机。于是从机没有得到响应之后就会停止数据的传输。于是数据传输就结束了。</li></ul></li></ul><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20221118234802031.png" alt="image-20221118234802031"></p><h5 id="通讯的复合过程"><strong>通讯的复合过程</strong></h5><p>通常，我们的通讯过程不是单向的读或者单向的写。通常是一个复合的过程。</p><p>复合的过程和前面的内容相似，只是读和写的任意交替组合。</p><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20221118235055139.png" alt="image-20221118235055139"></p></li><li><h4 id="通讯的起始信号和停止信号">通讯的起始信号和停止信号</h4><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20221118235151343.png" alt="image-20221118235151343"></p><p>由第一点我们可以知道，通讯的起始状态对应着时钟线高电平而数据传输线低电平。<strong>这意味着数据传输线的起始状态是高电平，当它遇到高电平的时钟线SCL时就会由高电平变低电平，于是通讯起始。</strong></p><p>停止信号原理相似。</p></li><li><h4 id="I2C数据有效性">I2C数据有效性</h4><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20221118235741952.png" alt="image-20221118235741952"></p></li><li><h4 id="地址以及数据的方向">地址以及数据的方向</h4><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20221119000043512.png" alt="image-20221119000043512"></p><p>主机会主动地产生一个起始信号以及将从机设备的地址发送到SDA信号线上。</p><p>设备地址的位数也决定了这个总线上可以挂载的设备的数量。</p></li><li><h4 id="响应位">响应位</h4><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20221119082544976.png" alt="image-20221119082544976"></p></li></ol><h3 id="如何使用STM32产生I2C协议信号？">如何使用STM32产生I2C协议信号？</h3><ul><li><h4 id="软件模拟协议：">软件模拟协议：</h4><p>使用CPU直接控制通信引脚电平，产生符合通讯协议标准的逻辑。（模拟I2C）</p></li><li><h4 id="硬件实现协议：">硬件实现协议：</h4><p>由STM32的I2C片上外设专门负责实现I2C通信协议，只要配置好该外设，它就会自动根据协议要求产生通信信号，收发数据并缓存起来，CPU只要检测这个外设的状态和访问数据寄存器，就可以完成数据的收发。</p><p>这种由硬件外设处理I2C协议的方式减轻了CPU的工作负担，并且使得软件设计更为简单。</p><p>STM32的I2C 外设可以用做通讯的主机以及从机，支持100Kbit/s和400kbit/s的速率，支持7位、10位设备地址，支持DMA数据传输，并且具有数据校验功能。</p></li></ul><p><strong>一般我们都使用硬件外设实现I2C，软件模拟协议在设计时经常会遇到时序冲突的问题，十分麻烦。一般在I2C不够用的时候才模拟I2C协议。</strong></p><h4 id="STM32的I2C框图对比">STM32的I2C框图对比</h4><p><strong>F103的框图</strong></p><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20221119085418933.png" alt="image-20221119085418933"></p><p>对于框图的理解，我们只需要重点把握住输入和输出即可很好地理解这个逻辑。</p><p>两个关键点，时钟总线（SCL）和数据总线（SDA）</p><ul><li>时钟总线产生时钟控制，时钟控制的实现又是由各种寄存器实现的。对于时钟控制，我们只需要使能时钟和失能时钟即可，具体的时钟产生以及控制由对应的硬件完成。</li><li>数据总线与数据控制相连，数据控制由数据移位寄存器实现，数据移位寄存器通过数据寄存器来实现数据的接收和发送</li></ul><h3 id="实验工程讲解">实验工程讲解</h3><ol><li><p>配置基本的时钟、DEBUG、时钟树等等。</p></li><li><p>选择I2C1</p><ul><li><p>配置参数</p><p>参数配置中有两个配置</p><ul><li><p>主机特性</p><p>我们可以选择快速模式</p><p>时钟速率会根据I2C的速度模式进行改变</p><p>然后我们可以配置Duty Cycle，就是配置占空比，一般选择16/9</p></li><li><p>从机特性</p></li></ul></li><li><p>NVIC中断配置</p><p>将错误中断和事件中断开启，如果需要用到中断</p></li><li><p>DMA配置</p><p>和DMA章节讲解的配置一致，如果要用到，请查看之前的文章</p></li><li><p><strong>GPIO设置（重点）</strong></p><p>我们知道I2C是由两条总线的，所以它对外的接口至少也有两个，一个时钟线接口、一个数据线接口。</p><p>需要用到什么引脚，在配置I2C的时候已经会在CubeMX上面显示出来，当然，我们也可以从原理图中找到I2C器件或者从数据手册/参考手册中找到I2C的部分，查看引脚映射图找到I2C对应的引脚。</p><ul><li>我们可以看到，配置GPIO时，CubeMX已经自动帮我们把引脚模式配置好了，复用功能以及开漏模式。</li></ul></li><li><p>配置好基本设置后即可生成工程代码。</p></li></ul></li></ol>]]></content>
      
      
      <categories>
          
          <category> 单片机 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
            <tag> 单片机 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ADC</title>
      <link href="/2023/10/16/%E3%80%90STM32HAL%E5%BA%93%E5%BC%80%E5%8F%91%E3%80%9117-ADC/"/>
      <url>/2023/10/16/%E3%80%90STM32HAL%E5%BA%93%E5%BC%80%E5%8F%91%E3%80%9117-ADC/</url>
      
        <content type="html"><![CDATA[<h1>ADC章节</h1><h2 id="ADC简介">ADC简介</h2><h3 id="嵌入式闭环控制系统框图">嵌入式闭环控制系统框图</h3><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20221116172942820.png" alt="image-20221116172942820"></p><p>数字量（D）与模拟量（A），在其中起着连接计算机系统和外部世界的桥梁作用。</p><h3 id="模拟信号的采集和处理过程">模拟信号的采集和处理过程</h3><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20221116173055705.png" alt="image-20221116173055705"></p><p>传感器采集数据，经过运放放大…（<strong>主要是模拟信号的采集、AD转换、数字信号处理三部分组成</strong>）</p><h3 id="ADC原理">ADC原理</h3><p>ADC的转换主要是两个过程：采样保持、量化编码</p><p><strong>采样保持，因为采集到数据之后需要给单片机一点时间来进行转换。</strong></p><p><strong>量化编码，也有许多算法。STM32均采用逐次比较型算法。</strong></p><h3 id="ADC主要参数">ADC主要参数</h3><ul><li><p>分辨率</p><p>比如说，一个n位的AD转换器的分辨率就是n；</p><p>一般我们使用的stm32单片机都是12位的。</p><p>具体理解：假设最大输入电压是5v，那么stm32AD转换器所能分辨的最小电压量是</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mn>5</mn><mi mathvariant="normal">/</mi><msup><mn>2</mn><mn>12</mn></msup><mi>v</mi></mrow><annotation encoding="application/x-tex">5/2^{12}v</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.1141em;vertical-align:-0.25em;"></span><span class="mord">5/</span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">12</span></span></span></span></span></span></span></span></span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span></span></span></span></span></p><p>ADC位数越多，所能分辨的最小电压越小，但是ADC的测量结果是经过放大的。</p></li><li><p>相对精度</p><p>AD转换器实际输出直与理论值之差</p></li><li><p>转换速度</p><p>stm32一般是微秒级别</p></li><li><p>采样间隔时间</p><p>数值上转换速率等于转换速率</p></li><li><p>采样电压范围</p></li></ul><p><strong>值得注意的是，我们的最小采样时间应该大于转换时间，这是为了让采集的数据保持到转换完成。</strong></p><p><strong>注意，采样时间至少3个周期。</strong></p><h2 id="STM32上的ADC外设">STM32上的ADC外设</h2><p>ADC通道是什么概念呢？</p><p>每个ADC指向很多个通道，但是一旦ADC开始工作，一次只能采集一个通道所指向的外设，所以我们需要一个ADC对多个通道采集信息的话，我们就需要预先设置该ADC上所使能的通道的采集顺序。</p><p>如果我们用3个ADC对同一个通道进行采集，那么采集速率就是原来的3倍！</p><h4 id="STM32的规则排序寄存器有3个，分别是SQR1、SQR2、SQR3。（针对规则通道而言）">STM32的规则排序寄存器有3个，分别是SQR1、SQR2、SQR3。（针对规则通道而言）</h4><p>SQR3控制的是1-6的转换通道。</p><p>根据下图，如果16通道想第一个转换，那么就在SQR3的SQ1取值为16；</p><p>以此类推。</p><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20221116182704665.png" alt="image-20221116182704665"></p><p><strong>注意：ADC规则数据寄存器（ADC_DR）的作用，当寄存器按顺序采集完成后得到的数据值最后都会存在ADC_DR中，我们读取这一次采集的数据也是在ADC_DR中读取。三个ADC共同使用这一个ADC_DR寄存器</strong></p><h4 id="注入通道（只有一个寄存器）">注入通道（只有一个寄存器）</h4><p>​最多支持4个通道，只有一个寄存器JSQR。</p><h2 id="ADC的结构体介绍">ADC的结构体介绍</h2><h3 id="ADC的句柄结构体">ADC的句柄结构体</h3><p>ADC_HandleTypeDef</p><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20221116192750872.png" alt="image-20221116192750872"></p><h3 id="ADC初始化结构体">ADC初始化结构体</h3><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20221116192910583.png" alt="image-20221116192910583"></p><p><strong>单通道AD不用设置扫描，但是两个以上的通道的话就需要设置扫描顺序，就是开启扫描模式。</strong></p><p><strong>一般我们都是选择不连续采样模式</strong></p><p><strong>外部事件触发选择一般我们都使用软件自动触发</strong></p><p><strong>如果开启DMA传输的话，就需要用到DMA连续请求转换</strong></p><h4 id="ADC通道结构体">ADC通道结构体</h4><p>ADC_ChannelConfTypeDef</p><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20221116193401566.png" alt="image-20221116193401566"></p><h2 id="例程">例程</h2><h3 id="ADC最简单的使用，用串口打印ADC的采集数据">ADC最简单的使用，用串口打印ADC的采集数据</h3><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20221116200650952.png" alt="image-20221116200650952"></p><p>ADC<strong>的配置选择</strong></p><p>要选择使能连续采样模式：连续采样模式，当采样一次完成后，将数据保存在采样数据寄存器中（ADC_DR），然后外设继续下一轮采样；如果不使能，那么外设就只采样一次便停止工作。</p><h4 id="ADC的数据读取">ADC的数据读取</h4><p>有两种方式</p><ul><li><p>中断模式</p><p>定时读取ADC数据</p></li><li><p>DMA模式</p><p>只要有数据更新，就源源不断地把数据往存储器里搬运</p></li></ul><h4 id="相关参数配置讲解">相关参数配置讲解</h4><ul><li><p><strong>End Of Conversion Selection ——&gt; 这里是选择触发中断函数的条件标志选择</strong></p></li><li><p>External Trigger Conversion Source (外部触发转换源)， 这里选择软件触发。</p></li><li><p>Sampling Time (采样时间)</p><h5 id="这里涉及到计算问题"><strong>这里涉及到计算问题</strong></h5><p>首先罗列计算公式</p><ul><li><strong>转换周期</strong>， <strong>转换周期=采样时间+存储时间</strong></li><li><strong>转换速率=1/转换周期</strong></li></ul><p>我们在该例程中，选择了PCLK2=84，就是时钟2的频率为84M</p><p>分频系数=4</p><p>那么计算得到我们的ADC_Clock（ADC时钟频率）=84/4=21M</p><p>采样时间：至少3个周期</p><p><strong>那我们现在验证一下，我们这个选择是否合理，验证的标准是：</strong></p><p><strong>转换时间&lt;=采样时间+存储时间</strong></p><p>那么现在我们知道我们这个ADC分辨率为12位，每一位占一个周期时间，算上采样时间三个周期，一共是15个周期时间，我们的一个ADC周期是1/21M（频率的倒数是周期），那么算一下我们的单ADC转换时间/转换周期，数值为1/21M*（12+3）=7.5us</p><p>所以我们这里转换速率，21M/（12+3）=1.4M</p><p><strong>然后回忆，我们刚开始在CubeMX上面选择芯片的时候，有ADC参数介绍，那里介绍说单ADC最大转换速率为2.4MSPS</strong></p><p>所以我们这里的比较 1.4&lt;2.4，这样的选择理论上没有问题。</p><p><strong>但是，值得注意的是，我们现在选择的是中断触发，就是说，这里的中断频率是转换速率，1.4M；也就是说ADC以1.4M的频率不断地发出中断请求，这对于CPU来说是很快的，CPU在这里的频率为168M，近1/168的时间都被中断了，CPU的资源大大被耗费，所以这是不合理的。解决方案为延长转换时间，所以我们把采样时间选择15个周期以上</strong></p></li></ul>]]></content>
      
      
      <categories>
          
          <category> 单片机 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
            <tag> 单片机 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>常见的存储器介绍</title>
      <link href="/2023/10/16/%E3%80%90STM32HAL%E5%BA%93%E5%BC%80%E5%8F%91%E3%80%9116-%E5%B8%B8%E7%94%A8%E7%9A%84%E5%AD%98%E5%82%A8%E5%99%A8%E4%BB%8B%E7%BB%8D/"/>
      <url>/2023/10/16/%E3%80%90STM32HAL%E5%BA%93%E5%BC%80%E5%8F%91%E3%80%9116-%E5%B8%B8%E7%94%A8%E7%9A%84%E5%AD%98%E5%82%A8%E5%99%A8%E4%BB%8B%E7%BB%8D/</url>
      
        <content type="html"><![CDATA[<h1>常见的存储器介绍</h1><h2 id="常见存储器分类">常见存储器分类</h2><ul><li><p>易失性存储器</p><p>RAM</p></li><li><p>非易失性</p><p>ROM、FLASH、光盘、软盘、机械硬盘</p></li></ul><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20221116165907615.png" alt="image-20221116165907615" style="zoom: 67%;" /><h3 id="易失性存储器">易失性存储器</h3><p>一般把他当成RAM了</p><h4 id="分类">分类</h4><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20221116170140230.png" alt="image-20221116170140230" style="zoom:80%;" /><h4 id="SRAM-DRAM的存储单元结构">SRAM/DRAM的存储单元结构</h4><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20221116170245777.png" alt="image-20221116170245777"></p><h4 id="SRAM-DRAM的通信方式">SRAM/DRAM的通信方式</h4><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20221116170423547.png" alt="image-20221116170423547"></p><p><strong>同步和异步的主要区别是有无时钟源</strong></p><p>从图片我们可以看到，DRAM同步是要有时钟支持的。</p><p><strong>DRAM也分为DDR、DDR2（双边沿数据采集）、DDR3（和2主要区别是采样频率的变化）、SDRAM。上面的<a href="###%E5%B8%B8%E8%A7%81%E5%AD%98%E5%82%A8%E5%99%A8%E5%88%86%E7%B1%BB">图片</a>也有介绍到</strong></p><p><strong>DDR的意思是内存，这里的意识是，内存主要都是采用SDRAM来实现的（同步DRAM，同步动态随机存储器）</strong></p><h4 id="SEAM-DRAM的简单对比">SEAM/DRAM的简单对比</h4><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20221116171206099.png" alt="image-20221116171206099"></p><h3 id="非易失性存储器">非易失性存储器</h3><ul><li>ROM，只读存储器</li><li>FLASH，闪存</li><li>磁盘、光盘</li></ul><h4 id="ROM">ROM</h4><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20221116171748799.png" alt="image-20221116171748799"></p><h4 id="FLASH闪存">FLASH闪存</h4><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20221116171857358.png" alt="image-20221116171857358"></p><h4 id="哪一个闪存支持程序的执行？"><strong>哪一个闪存支持程序的执行？</strong></h4><p>答案是Nor Flash，因为Nor Flash的读写单元是字节，可以访问一条一条的指令，计算机就可以访问存放在FLASH的指令进行执行。</p><p>但是NAND FLASH的读写单元是“块/扇区”，计算机进行访问时，会读取到以指令为首地址的一大块存储空间，计算机不知道该执行哪一条，所以不能执行。</p>]]></content>
      
      
      <categories>
          
          <category> 单片机 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
            <tag> 单片机 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>DMA-直接存储器访问控制器</title>
      <link href="/2023/10/15/%E3%80%90STM32HAL%E5%BA%93%E5%BC%80%E5%8F%91%E3%80%9115-DMA%E9%80%9A%E4%BF%A1/"/>
      <url>/2023/10/15/%E3%80%90STM32HAL%E5%BA%93%E5%BC%80%E5%8F%91%E3%80%9115-DMA%E9%80%9A%E4%BF%A1/</url>
      
        <content type="html"><![CDATA[<h1>DMA-直接存储器访问控制器</h1><h2 id="DMA的作用">DMA的作用</h2><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20221110200245727.png" alt="image-20221110200245727"></p><p>在单片机上继续数据传输，大概有两种方式</p><ul><li>CPU处理数据</li><li>DMA处理数据</li></ul><p><strong>DMA实际上是一个控制器，DMA控制器的实现基于复杂的总线矩阵架构</strong></p><p><strong>DMA专注于数据转移，而CPU专注于计算处理</strong></p><h3 id="DMA的实现">DMA的实现</h3><h4 id="DMA在总线矩阵架构的位置">DMA在总线矩阵架构的位置</h4><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20221110212116145.png" alt="image-20221110212116145"></p><p>结构图解读</p><ul><li>DMA是一个独立的外设，它独立于总线之外，接在总线矩阵上</li><li>它可以通过总线矩阵，访问各种与总线相连的外设</li></ul><h4 id="DMA内部的具体实现">DMA内部的具体实现</h4><p><strong>DMA框图</strong></p><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20221110213334785.png" alt="image-20221110213334785"></p><p>DMA<strong>内部实现解读</strong></p><ol><li><p>DMA请求，总线连接的外设发送DMA请求，高速DMA可以对它进行数据的搬运，于是DMA就会去对该外设里面的数据进行访问和操作；</p></li><li><p>通道选择，用于配置外设中的数据放在DMA的哪一个通道；</p><p>当外设中的数据提取到相应的通道中之后，DMA就会将数据传输到数据搬运的目标地址中</p></li></ol><h4 id="对DMA外设要点的概括">对DMA外设要点的概括</h4><p><strong>首先明白，通信实际上就是数据的传输</strong></p><p>DMA这个器件，它的功能就是建立起一个数据传输通道（不需要CPU参与这样的工作，减轻CPU的负担）</p><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20221110214031119.png" alt="image-20221110214031119"></p><h4 id="如何用DMA？最贴切的应用场景（基于现有的水平）">如何用DMA？最贴切的应用场景（基于现有的水平）</h4><p>如果我们想要用串口接收数据，将数据放在内存里，我们可以不用CPU来搬运，而用DMA搬运；（传输模式：外设——&gt;存储器）</p><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20221110214450651.png" alt="image-20221110214450651"></p><p>反之类似，比如想将存储器数据发送到外设里，外设发送出去；</p><p>看图注意：</p><p>空心圆点的意思是两条总线有相连的地方</p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20221110212756092.png" alt="image-20221110212756092" style="zoom:67%;" /><h2 id="DMA的使用">DMA的使用</h2><ol><li><h3 id="建立（选取）传输通道">建立（选取）传输通道</h3><ul><li>存储器-&gt;存储器（相当于copy）</li><li>外设-&gt;存储器</li><li>存储器-&gt;外设</li><li><strong>选取通道和确定传输对象的办法：可以去参考手册查DMA请求映像</strong></li></ul></li><li><h3 id="确定传输对象">确定传输对象</h3><ul><li><p>具体的功能：</p><p>UART-内存（将串口数据传输到内存去）</p><p>内存数据-UART</p></li></ul></li><li><h3 id="敲定传输细节">敲定传输细节</h3><ul><li><p>确定谁来产生DMA请求，确定外设的DMA请求的对应的通道</p></li><li><p>确定通道优先级</p><p>注意：在DMA里，七个通道并不是同时进行传递的，而是一个通道一个通道地依次地传输的；<strong>也就是串行传输</strong></p></li><li><p>确定传输数据双方的数据格式</p><p>比如我们要将一个字节的数据传输到四个字节数据的存储器里，我们需要将数据进行怎么样的打包和拆包？(编码和解码)</p><p>参考手册中提到“源和目标地址必须按数据传输宽度对齐”</p></li><li><p>确定数据是否需要一直采集（循环模式）</p><p>循环传输模式和一般传输模式，一般传输模式就是只传输一次(比如进行ADC功能，需要进行不断地采样和传输，就需要循环传输模式)</p><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20221110215556825.png" alt="image-20221110215556825"></p></li><li><p>是否需要传输标志/中断</p></li></ul></li></ol><h2 id="DMA在HAL库中的功能实现">DMA在HAL库中的功能实现</h2><p>句柄结构体：DMA_HandleTypeDef</p><p>DMA初始化结构体：DMA_InitTypeDef</p><hr><h2 id="DMA-CubeMX配置">DMA-CubeMX配置</h2><h3 id="首先在systerm-core配置DMA">首先在systerm-core配置DMA</h3><p><strong>DMA内存—&gt;内存的配置：</strong></p><ul><li>然后添加DMA请求；</li><li>地址递增功能的选择，可以配置目标地址递增与否，源地址递增与否的任意组合</li></ul><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20221111091932001.png" alt="image-20221111091932001"></p><p><strong>DMA外设-&gt;内存/内存-&gt;外设的配置</strong></p><p>以UART为例</p><ul><li><p>打开UART一个外设，比如UART1</p></li><li><p>然后找到DMA设置</p></li><li><p>点击Add添加DMA通道</p></li><li><p>UART1_RX    ——&gt;   外设-内存</p><p>UART1_TX    ——&gt;   内存-外设</p></li><li><p>配置请求模式：一般/循环</p></li><li><p>配置地址递增</p></li><li><p><strong>配置数据传输宽度</strong>（这里不太理解）——&gt;  一般会帮你自动选择</p></li></ul><h2 id="实例讲解">实例讲解</h2><p><strong>储存器-储存器</strong></p><h3 id="储存器-外设"><strong>储存器-外设</strong></h3><p>将DMA与外设联系起来，要使用一个函数</p><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20221111103634242.png" alt="image-20221111103634242"></p>]]></content>
      
      
      <categories>
          
          <category> 单片机 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
            <tag> 单片机 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>通讯</title>
      <link href="/2023/10/14/%E3%80%90STM32HAL%E5%BA%93%E5%BC%80%E5%8F%91%E3%80%9114-%E4%B8%B2%E5%8F%A3%E9%80%9A%E8%AE%AF/"/>
      <url>/2023/10/14/%E3%80%90STM32HAL%E5%BA%93%E5%BC%80%E5%8F%91%E3%80%9114-%E4%B8%B2%E5%8F%A3%E9%80%9A%E8%AE%AF/</url>
      
        <content type="html"><![CDATA[<h1>通讯</h1><h2 id="通讯的基本概念">通讯的基本概念</h2><h3 id="通讯的分类概览">通讯的分类概览</h3><ul><li><p>串行通讯与并行通讯</p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20221109232726483.png" alt="image-20221109232726483" style="zoom:50%;" /></li></ul><p>​串行通讯与并行通讯的区别</p><p>​串行通讯的有点是节省数据线</p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20221109232821901.png" alt="image-20221109232821901" style="zoom:50%;" /><ul><li><p>全双工、半双工及单工通讯（按通讯方向来分）</p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20221109233038371.png" alt="image-20221109233038371" style="zoom:50%;" /></li><li><p>同步通讯与异步通讯（根据数据的同步方式划分）</p><p><strong>同步通讯</strong>一般会有<strong>时钟</strong>来协调，一般用于处理实时有效速率（对时钟误差要求高）</p><p>异步通讯要先约定好速率，有效数据位减少，异步通信双方的时钟允许误差较大</p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20221109233238407.png" alt="image-20221109233238407" style="zoom:50%;" /></li><li><p>通讯速率</p><p>每秒钟传输的二进制位数</p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20221109233501780.png" alt="image-20221109233501780" style="zoom:50%;" /></li></ul><p><strong>一个通信方式，可以是上面三种通信方式的集合</strong></p><h2 id="USART-通用同步异步收发器">USART-通用同步异步收发器</h2><p>它是STM32上的一个外设</p><h3 id="USART概览">USART概览</h3><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20221109233856401.png" alt="image-20221109233856401"></p><p>协议信号主要包括物理层面这些线如何接线等等信息。</p><h3 id="STM32和PC通信模型">STM32和PC通信模型</h3><p><strong>tx是发线，rx是收线</strong></p><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20221109234421267.png" alt="image-20221109234421267"></p><h3 id="STM32和PC通过RS-232标准通信">STM32和PC通过RS-232标准通信</h3><p>即RS-232是他们之间通信的一个协议</p><p>有了这个协议，它才能确定具体的物理层器件，比如接口，以及数据的交互方式；具体接线图如下。</p><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20221109234703651.png" alt="image-20221109234703651"></p><p><strong>RS-232标准介绍</strong></p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20221109234811327.png" alt="image-20221109234811327" style="zoom:50%;" /><p><strong>RS-232协议电平标准对比</strong></p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20221109235046424.png" alt="image-20221109235046424" style="zoom:50%;" /><p><strong>RS-232标准的物理接口规定及接口标号</strong></p><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20221109235308107.png" alt="image-20221109235308107"></p><p><strong>RS-232标准下接口标号的作用</strong></p><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20221109235356921.png" alt="image-20221109235356921"></p><p>我们目前用得到的，常用的就只有三条， <strong>即，RXD和TSD、GND</strong></p><p><strong>RS-232标准数据传输协议层</strong></p><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20221109235624662.png" alt="image-20221109235624662"></p><p><strong>协议的概念</strong></p><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20221109235948123.png" alt="image-20221109235948123"></p><p><strong>数据校验</strong></p><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20221110000027251.png" alt="image-20221110000027251"></p><p>如果数据校验出错，那么这个数据包就是个无用数据包</p><h3 id="UART收发器的外设框图">UART收发器的外设框图</h3><h4 id="链路逻辑："><strong>链路逻辑：</strong></h4><ol><li><p>接受信息端：</p><ul><li>GPIO引脚复用输入输出通信功能，GPIO引脚向TX传输电平信号；</li><li>电平信号从IrDASIR/ENDEC块传送到接收移位寄存器，电平信号一位一位地填充接收移位寄存器；</li><li>当接收移位寄存器被填满后，接收<strong>移位</strong>寄存器的数据被一位一位地传输到接收<strong>数据</strong>寄存器；</li><li>接收数据寄存器被填满后，将数据传输到总线，由CPU或者DMA处理数据；</li></ul></li><li><p>发送信息端：</p><ul><li>CPU/DMA处理好数据，传输给发送数据寄存器；</li><li>发送数据寄存器将数据传输给发送位移寄存器；</li><li>发送位移寄存器将数据传给IrDASIR/ENDEC块，然后传送给RX引脚输出；</li></ul></li><li><p>USART同步异步收发器框图</p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20221110090923123.png" alt="image-20221110090923123" style="zoom:67%;" /></li><li><p>如何控制USART的输入输出控制呢？</p><p>它是通过各种寄存器控制的，可以根据参考手册的框图找到那些寄存器，然后自行了解。</p></li><li><p>波特率发生器以及过采样模式</p><p>波特率：用于协调数据以什么数据进行发送</p><p>过采样：用于提高采样率，提高数据的精确性</p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20221110091542907.png" alt="image-20221110091542907" style="zoom:67%;" /></li></ol><p><strong>缩写：</strong></p><p>USART_RDR    接受数据寄存器</p><p>USART_TDR    发送数据寄存器</p><h2 id="实验工程讲解">实验工程讲解</h2><h3 id="串口收发">串口收发</h3><h4 id="硬件层必要只是准备">硬件层必要只是准备</h4><p>USB转串口（RS-232协议，PB9接口现在已经很少见到了）</p><p><strong>原理图阅读积累</strong>——&gt;<strong>跳帽</strong></p><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20221110092821812.png" alt="image-20221110092821812"></p><h3 id="CubeMX的配置">CubeMX的配置</h3><p><strong>基本配置：RCC外部高速时钟源，在Trace和Debug选项选择单线</strong></p><ol><li>在connetivity选择串口1</li><li>选择串口模式(目前是异步模式)</li><li>使能中断NVIC</li><li>重点关注时钟域的配置（对于有不同的时钟域的板子）<ul><li>外部高速时钟，然后外部倍频，然后自动配置</li><li>具体配置可以看参考手册框图下面的文字</li></ul></li><li><strong>CubeMX只配置好初始化代码，具体使用还是要自己去敲代码</strong></li></ol><h3 id="工程代码的讲解">工程代码的讲解</h3><p>USART1普通中断回显实验</p><blockquote><p>阅读任何一份代码，都从main开始，因为他是.c文件的入口函数。</p></blockquote><p>keil快捷键：crtl+F  查看函数在哪定义，在哪个文档出现…</p><h4 id="HAL库的调用流程："><strong>HAL库的调用流程：</strong></h4><p><strong>HAL_XXX_Init ——&gt;HAL_XXX_MSPInit——&gt;在MSPinit函数中，会进行对应外设使用的GPIO引脚、特殊功能比如时钟使能之类的进行配置；</strong></p><p>所以，本次例程中的HAL_USART_Init()就会调用HAL_USART_MSPInit进行底层硬件的配置</p><h4 id="串口代码的使用">串口代码的使用</h4><h5 id="初始化USART外设（HAL库的底层逻辑）（可部分了解一下即可）">初始化USART外设（HAL库的底层逻辑）（可部分了解一下即可）</h5><ol><li>定义一个UART_HandleTypeDef结构体句柄</li><li>通过HAL_USART_MSPInit实现串口外设的底层初始化<ul><li>使能串口外设的初始化时钟</li><li>配置UART使用的引脚模式</li><li>如果要用中断就配置中断</li><li>如果要用DMA就配置DMA</li></ul></li><li>通过前面定义的结构体句柄配置串口的波特率、数据字长、停止位、奇偶校验位、硬件流控制（不常用）</li><li>通过调用HAL_USART_Init()来将串口配置为异步模式</li></ol><h5 id="发送串口数据">发送串口数据</h5><ol><li><p>调用printf函数发送数据</p></li><li><p>重新定向fputc函数，在fputc函数中调用串口发送函数HAL_UART_Transmit(…)，实现真正的串口发送（<strong>重定向C库函数printf到串口</strong>）（这一步让我们可以让单片机输出数据出来）</p><ul><li>HAL_UART_Transmit(&amp;UartHandle,  (uint8_t *)&amp;ch, 1, 1000)</li><li>参数解析：<ul><li>&amp;UartHandle  传入的串口的句柄，我们的一些初始化底层配置内容都存在句柄里；</li><li>(uint8_t *)&amp;ch  我们要发送的数据；</li><li>1   发送数据的数量；</li><li>1000  等待时间（ms）</li></ul></li></ul></li><li><p>重新定向C库函数scanf到串口，重写向后可以使用scanf，getchar等函数（这一步可以让我们输入数据到单片机）</p></li><li><p>原理：直接调用printf函数不会将内容发送到我们想要的硬件，所以我们要对printf函数中调用的fputc进行重新定义，定向向某个硬件发送数据；</p><p>具体流程：printf调用fputc，fputc调用串口发送函数</p></li><li><p>注意一点，使用fputc要在魔法棒配置中勾选Use MrcoLIB</p></li></ol><h5 id="自定义函数方式实现函数输出">自定义函数方式实现函数输出</h5><p>自定义函数发送字符串，自定义函数原型如图（自行分析理解，不懂会视频看 <em>野火第17讲第四部分第4分钟</em>）：</p><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20221110123331377.png" alt="image-20221110123331377"></p><h5 id="认识串口通讯的几个常用的函数">认识串口通讯的几个常用的函数</h5><p>HAL_UART_Transmit(&amp;husart,(uint8*)&amp;ch,1,10)</p><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20221110153929967.png" alt="image-20221110153929967"></p><p>等待时间是指在接收数据和发送数据时等待的时间，如果在这个时间内没有完成操作，就会返回失败的值；</p><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20221110154021619.png" alt="image-20221110154021619"></p><p><strong>中断发送和接受函数</strong></p><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20221110154050218.png" alt="image-20221110154050218"></p><p>这是不需要占用主程序的时间的，因为发生在中断的时候</p><hr><h4 id="如何找宏定义？">如何找宏定义？</h4><ul><li>右键，跳转到头文件</li><li>然后再头文件里面找</li></ul><h4 id="如何找到句柄结构体的定义？">如何找到句柄结构体的定义？</h4><ul><li><p>跳转搜索全部文件</p></li><li><p>一般在.h文件中</p></li><li><p>以}开头</p></li><li><p>图片</p><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20221110121203542.png" alt="image-20221110121203542"></p></li></ul><h3 id="疑问">疑问</h3><p>中断执行完一次之后就会关闭，需要再次打开？</p><p><em>BUG熊视频第八章的11分30秒</em></p>]]></content>
      
      
      <categories>
          
          <category> 单片机 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
            <tag> 单片机 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>驱动蜂鸣器播放音乐</title>
      <link href="/2023/10/13/%E3%80%90STM32HAL%E5%BA%93%E5%BC%80%E5%8F%91%E3%80%9113-%E9%A9%B1%E5%8A%A8%E8%9C%82%E9%B8%A3%E5%99%A8%E6%92%AD%E6%94%BE%E9%9F%B3%E4%B9%90/"/>
      <url>/2023/10/13/%E3%80%90STM32HAL%E5%BA%93%E5%BC%80%E5%8F%91%E3%80%9113-%E9%A9%B1%E5%8A%A8%E8%9C%82%E9%B8%A3%E5%99%A8%E6%92%AD%E6%94%BE%E9%9F%B3%E4%B9%90/</url>
      
        <content type="html"><![CDATA[<h1>驱动蜂鸣器播放音乐</h1><h2 id="原理">原理</h2><p>利用定时器+PWM控制输出的电压频率，控制蜂鸣器的发声。</p><h3 id="乐理知识">乐理知识</h3><p>必须知道的三个参数：音符，音调，节拍</p><p>一般以C调音符为主</p><h4 id="音调">音调</h4><h5 id="C调音符与频率对照表">C调音符与频率对照表</h5><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20221027175546586.png" alt="image-20221027175546586" style="zoom:50%;" /><h4 id="节拍">节拍</h4><p><code>节拍决定了音符的时间长短</code></p><h5 id="节拍的简谱图">节拍的简谱图</h5><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20221027175802542.png" alt="image-20221027175802542" style="zoom:50%;" /><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20221027175932606.png" alt="image-20221027175932606" style="zoom:50%;" /><h3 id="编程思路原理">编程思路原理</h3><p>采用定时器+PWM的方式，解放主循环，让程序可以做更多的事。</p><p>定时器用于把握节拍</p><p>PWM控制音调和音符</p><p>PWM的周期(Hz) = 主频(Hz) / (重装载值 + 1) / (分频系数 + 1)</p><p>每次转换音符时，动态修改重装载值即可实现PWM输出频率的变化，进而控制无源蜂鸣器的发声。定时器进行ms中断，判断节拍时间是否达到。</p><h3 id="电路原理">电路原理</h3><p>无源蜂鸣器需要输入方波驱动发声；</p><p>应注意在IO口要一个下拉电阻(使得蜂鸣器IO口不工作时保持低电平)，避免不通电时IO口处于浮空状态导致意外发声；</p><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20221028094814492.png" alt="image-20221028094814492"></p><h2 id="疑问">疑问</h2><h3 id="关于hal库的函数">关于hal库的函数</h3><p>如何找到相应的函数？只是看csdn不是治本之策。</p>]]></content>
      
      
      <categories>
          
          <category> 单片机 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
            <tag> 单片机 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Debug功能及其方法简述</title>
      <link href="/2023/10/12/%E3%80%90STM32HAL%E5%BA%93%E5%BC%80%E5%8F%91%E3%80%9112-Debug%E5%8A%9F%E8%83%BD/"/>
      <url>/2023/10/12/%E3%80%90STM32HAL%E5%BA%93%E5%BC%80%E5%8F%91%E3%80%9112-Debug%E5%8A%9F%E8%83%BD/</url>
      
        <content type="html"><![CDATA[<h1>Debug功能及其方法简述</h1><h2 id="常见的调试方法">常见的调试方法</h2><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20221021155605614.png" alt="image-20221021155605614"></p><h2 id="常见的Debug工具">常见的Debug工具</h2><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20221021155920484.png" alt="image-20221021155920484"></p><h2 id="MDK-Keil的DEBUG使用">MDK-Keil的DEBUG使用</h2><h3 id="硬件层面的准备">硬件层面的准备</h3><ol><li>用仿真器连接电脑与开发板</li></ol><h3 id="软件层面的准备">软件层面的准备</h3><ol><li><p>魔法棒的output选项中勾选这些(否则将无法看到现象)</p><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20221021160646686.png" alt="image-20221021160646686"></p></li><li><p>Debug选项设置，重点关注右侧</p><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20221021160739705.png" alt="image-20221021160739705"></p></li><li><p>打开setting进行配置，配置好接口，其他不用管。</p><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20221021161208271.png" alt="image-20221021161208271"></p></li><li><p>然后打开FlashDownload</p><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20221021161232202.png" alt="image-20221021161232202"></p><p>进行相应配置</p></li><li><p>若不小心做了失误改动，按照如下图片复原、或者重新安装</p><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20221021161428131.png" alt="image-20221021161428131"></p></li></ol><h3 id="Debug的具体使用">Debug的具体使用</h3><ol><li><p>Run按钮，点击它程序就会运行。</p></li><li><p>stop就会停止，代码也停止在相应的地方。</p></li><li><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20221021162611339.png" alt="image-20221021162611339"></p><p>第一个step是步入，进入函数执行；</p><p>第二个是step over步过(它还是会执行，只不过不跟踪其代码而已)；</p><p>第三个是步出step out，即离开当前子函数，回到上一级函数；</p><p>第四个是运行到当前行</p><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20221021162544796.png" alt="image-20221021162544796"></p><p><strong>蓝色箭头：光标所处位置；    黄色箭头：程序运行到的位置</strong></p></li><li><p>回到当前程序停止位置（黄色箭头）</p><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20221021162807384.png" alt="image-20221021162807384"></p></li></ol><h4 id="断点：">断点：</h4><ul><li><p>断点只能设置再小黑快里，因为在小黑块里才有实际的语句执行。</p><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20221021163015870.png" alt="image-20221021163015870"></p></li><li><p>点击断点后，程序运行到断点处便会停下，但斌没有执行断点处的语句。(停在了断电处语句之前)</p></li><li><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20221021163250452.png" alt="image-20221021163250452"></p><p>两个红色圆圈的按键可以实现一键清除所有断点的作用</p></li></ul><h3 id="窗口工具">窗口工具</h3><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20221021163532751.png" alt="image-20221021163532751"></p><ol><li><p>命令窗口</p><p>可以输入一些调试相关的指令(一般不怎么用)</p></li><li><p>反汇编窗口(很少使用)</p></li><li><p>标志窗口(少用)</p><p>展示程序中使用到的一些变量、参数等等</p></li><li><p>寄存器窗口</p><p>用于指示CPU工作状态</p></li><li><p>调用栈以及函数调用所在位置窗口(常用)</p><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20221021164311187.png" alt="image-20221021164311187"></p></li><li><p>Watch窗口</p><p>用于监控指定的变量，具体添加方式：可以拖动至窗口，也可以如图</p><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20221021164501258.png" alt="image-20221021164501258"></p><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20221021164533957.png" alt="image-20221021164533957"></p></li><li><p>Memory 窗口</p><p>和watch窗口使用方法和功能类似。</p><p>主要用于看内存的数据。如图，对i取地址后放入窗口中监控，我们i在内存中的位置以及在相应内存地址上的值。</p><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20221021164849666.png" alt="image-20221021164849666"></p><p>点击右键，还可以通过不同形式来展示窗口</p><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20221021164930402.png" alt="image-20221021164930402"></p></li><li><p>UART，串口窗口</p></li><li><p>余下的窗口都需要特定的仿真器支持。</p></li><li><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20221021165123208.png" alt="image-20221021165123208"></p></li></ol><pre><code>**最常用的窗口**![image-20221021165208559](https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20221021165208559.png)可以打开查看这些内核外设的寄存器状态![image-20221021165303930](https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20221021165303930.png)也可以看到其他多有外设的寄存器![image-20221021165525154](https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20221021165525154.png)</code></pre><h3 id="注意：">注意：</h3><p><strong>如果窗口中的数据没有实时变化，可以在veiw中选择实时更新窗口</strong></p><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20221021165906902.png" alt="image-20221021165906902"></p><p>其次是每次debug，如果做了改动，需要重新编译和烧录。</p>]]></content>
      
      
      <categories>
          
          <category> 单片机 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
            <tag> 单片机 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>HAL库的驱动框架</title>
      <link href="/2023/10/11/%E3%80%90STM32HAL%E5%BA%93%E5%BC%80%E5%8F%91%E3%80%9111-HAL%E5%BA%93%E9%A9%B1%E5%8A%A8%E6%A1%86%E6%9E%B6/"/>
      <url>/2023/10/11/%E3%80%90STM32HAL%E5%BA%93%E5%BC%80%E5%8F%91%E3%80%9111-HAL%E5%BA%93%E9%A9%B1%E5%8A%A8%E6%A1%86%E6%9E%B6/</url>
      
        <content type="html"><![CDATA[<h1>HAL库驱动框架</h1><h2 id="外设初始化">外设初始化</h2><h3 id="对外设的封装">对外设的封装</h3><h4 id="xx-HandleTypeDef-xx外设句炳结构体，xx表示任何外设名，如GPIO、UART等等">xx_HandleTypeDef (xx外设句炳结构体，xx表示任何外设名，如GPIO、UART等等)</h4><ul><li>Instance成员(xx_TypeDef类型)，一般是指向外设的基地址，访问相关外设的资源</li><li>Init成员(xx_InitTypeDef类型)，用于初始化外设，配置外设如何去工作</li><li>Hdma*成员(DMA_HandleTypeDef类型，可能一个句柄结构有多个)</li><li>其他资源<ul><li>LOCK锁(HAL_LockTypeDef类型)    用于防止资源竞争，保护外设工作过程</li><li>STATUS状态(HAL_xx_StateTypeDef类型)    指示句柄结构体状态，可以用这个检查一下外设状态</li><li>…</li></ul></li></ul><h3 id="对外设初始化使用方法">对外设初始化使用方法</h3><ul><li><p>HAL_xx_Init,  参数一般为xx外设的句柄结构体</p><p>对句柄结构体下的init成员的相关参数配置到寄存器之前，它会先调用hal_xx_mspinit函数，将相关底层资源初始化完成，比如时钟、使用到的引脚、中断的使能等等。</p></li><li><p>HAL_xx_MspInit, 参数一般为xx外设的句柄结构体 (再HAL库中，这个函数是一个回调函数，用于初始化相关资源，是个弱定义，可以由用户重新定义)</p></li><li><p>其他，具体的外设初始化，我们要参考相关.c驱动文件，去参考学习“How to use this driver”</p></li></ul><h3 id="外设的使用逻辑">外设的使用逻辑</h3><h4 id="阻塞轮询-Polling">阻塞轮询(Polling)</h4><ul><li>xx_start</li><li>xx_read/write</li><li>…等等函数。==特征：传入参数需要一个Timeout参数==</li></ul><h4 id="中断-It">中断(It)</h4><ul><li>xx_start_it<ul><li>HAL_XX_IRQHandler(xx外设中断处理函数，在中断入口函数中调用，参数一般为句柄结构中的参数。在该函数中，一般会检测外设状态寄存器的标志，根据不同的状态回调不同的回调函数)  ——&gt;  各种HAL_XX_xxCallback函数</li></ul></li><li>xx_read/write_it</li><li>xx_xx_it…等等中断启动函数；==特征：函数名以IT结尾。==</li></ul><h4 id="DMA-可以再CPU不完全监控的情况下进行数据的操作">DMA(可以再CPU不完全监控的情况下进行数据的操作)</h4><ul><li>xx_start_dma<ul><li>DMA功能</li></ul></li><li>xx_read/write_dma</li><li>xx_xx_dma…等等DMA启动函数；==特征：函数名以DMA结尾==</li></ul><h4 id="其他功能">其他功能</h4><ul><li>标志查询/清除、中断功能使能/失能、时钟使能/失能<ul><li>_HAL_xx_ENABLE_IT</li><li>_HAL_xx_GET_FLAG</li><li>…等等</li></ul></li></ul><h4 id="对HAL库驱动全面了解、查看">对HAL库驱动全面了解、查看</h4><p>去HAL库的驱动包的   ##### How to use this driver ##### 了解</p><p>对于任意一个外设驱动，都会有相应的注释</p><p>==强推看注释==</p><h2 id="总结">总结</h2><ol><li><p>外设初始化</p><ul><li>定义并填充xxx外设句柄结构体</li><li>如果遵循HAL库规范，通过HAL_xxx_MspInit()函数，实现外设底层资源的初始化，包括但不限于GPIO、时钟、DMA、中断等资源的初始化</li><li>调用HAL库的对应的外设初始化函数，形如：HAL_xxx_Init()</li><li>初始化完成，开始使用外设</li></ul></li><li><p>使用外设，使用方法具体看对应外设的HAL库驱动包中的说明：</p><p><code>#####How to use this driver#####</code></p></li></ol>]]></content>
      
      
      <categories>
          
          <category> 单片机 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
            <tag> 单片机 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PWM专题理解</title>
      <link href="/2023/10/10/%E3%80%90STM32HAL%E5%BA%93%E5%BC%80%E5%8F%91%E3%80%9110-PWM%E4%B8%93%E9%A2%98%E7%90%86%E8%A7%A3/"/>
      <url>/2023/10/10/%E3%80%90STM32HAL%E5%BA%93%E5%BC%80%E5%8F%91%E3%80%9110-PWM%E4%B8%93%E9%A2%98%E7%90%86%E8%A7%A3/</url>
      
        <content type="html"><![CDATA[<h1>PWM专题理解</h1><h2 id="PWM-Pluase-Width-Mudulation">PWM(Pluase Width Mudulation)</h2><p><code>脉冲宽度调制 </code></p><p>利用微处理器的数字输出来对模拟电路进行控制的一种技术</p><h3 id="原理">原理</h3><p>面积等效原理</p><p><strong>相关概念：</strong></p><ul><li>脉冲：在短持续时间内突变，随后又迅速返回其初始值的物理量变化过程。(学术上的定义)</li><li>脉冲信号：瞬间突然变化、作用时间极短的电压或电流。脉冲信号是一种离散信号，具有一定的周期性。</li><li>脉冲宽度：高电平持续的时间。</li><li>脉冲冲量：脉冲信号在时间上的积累量。</li><li>周期：信号从高电平到低电平，再回到高电平所需的时间。</li><li>频率：一秒内又多少个这样的周期。</li><li>PWM占空比：一个脉冲周期内，高电平保持的时间。</li></ul><p>电压不同、时间不同的两组输入，如果他们的脉冲冲量(电压与时间的乘积)相等，那么他们输出的波形基本相同。</p><blockquote><p>如图上下两个波形钟，上下对齐且颜色相同的区域面积两两相等，所以上面的标准正弦波和下面的方波是等效的。</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20221021111337030.png" alt="image-20221021111337030"></p><p><strong>至此，我们可以理解为什么PWM可以通过数字输出来对模拟电路进行控制了，它其实就是使用数字信号(比如图中的方波)，来达到模拟信号(比如图中的正弦波)的效果</strong></p><h3 id="占空比与平均输出电压">占空比与平均输出电压</h3><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20221021112035144.png" alt="image-20221021112035144"></p><p>占空比越大，所得到的平均电压也就越大，幅度值也就越大。</p><p>不断改变占空比，就可以得到我们想要的正弦波。</p><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20221021112134306.png" alt="image-20221021112134306"></p>]]></content>
      
      
      <categories>
          
          <category> 单片机 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
            <tag> 单片机 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>定时器</title>
      <link href="/2023/10/09/%E3%80%90STM32HAL%E5%BA%93%E5%BC%80%E5%8F%91%E3%80%919-STM32%E5%AE%9A%E6%97%B6%E5%99%A8/"/>
      <url>/2023/10/09/%E3%80%90STM32HAL%E5%BA%93%E5%BC%80%E5%8F%91%E3%80%919-STM32%E5%AE%9A%E6%97%B6%E5%99%A8/</url>
      
        <content type="html"><![CDATA[<h1>定时器</h1><h2 id="SysTick定时器介绍">SysTick定时器介绍</h2><h3 id="Systick定时器特性介绍">Systick定时器特性介绍</h3><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20221020182311469.png" alt="image-20221020182311469"></p><ul><li>**计数宽度：**24bit来存储数据，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mn>2</mn><mn>24</mn></msup><mo>=</mo><mn>16777216</mn></mrow><annotation encoding="application/x-tex">2^{24}=16777216</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8141em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">24</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">16777216</span></span></span></span></li><li>**向下递减：**计数器的工作模式</li><li><strong>计数器的工作周期：</strong> 工作周期为 1/CLKsource(时钟源)，1/72Mh z。</li><li>**计时器工作过程：**设定一个计数宽度，则计时器开始工作后，每经过1/72Mhz的时间，计数器都会向下递减一次计数宽度值。</li><li>**计时器的计时意义：**计时器完成一次工作过程所需的时间是固定的，若计数宽度和频率确定。</li><li><strong>每完成一次计时，都能触发一次中断。(详细见上面的SysTick特点图)</strong></li></ul><h3 id="计算公式-换算公式">计算公式/换算公式</h3><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20230223181225118.png" alt="image-20230223181225118"></p><h3 id="SysTick定时器功能">SysTick定时器功能</h3><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20221020185745749.png" alt="image-20221020185745749"></p><h3 id="SysTick定时器寄存器介绍">SysTick定时器寄存器介绍</h3><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20221020185917195.png" alt="image-20221020185917195"></p><h4 id="SysTick控制及状态寄存器-CTRL">SysTick控制及状态寄存器(CTRL)</h4><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20221020190234851.png" alt="image-20221020190234851"></p><p>第0位是使能位，置1使能</p><p>第1位是中断位，若置1，则即使其倒数到0时产生SysTick异常请求，置0时误动作。</p><p>第2位是时钟源选择位</p><ul><li>置1    AHB  处理器时钟</li><li>置0   外部时钟</li></ul><p>第3到16位是计数标志位，功能描述如图。</p><h4 id="重装载数值寄存器-LOAD">重装载数值寄存器(LOAD)</h4><p>当倒数计数至零时，将被重新装载的值</p><p>例：比如我们将这个寄存器的重装载值设置位1000，则系统计时器会从1000开始递减。</p><h4 id="当前数值寄存器-VAL">当前数值寄存器(VAL)</h4><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20221020191354504.png" alt="image-20221020191354504"></p><h2 id="基本定时器">基本定时器</h2><h3 id="定时器的分类">定时器的分类</h3><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20221022142706284.png" alt="image-20221022142706284"></p><p><code>我们在Timer feature comparison 可以找到不同定时器的功能和分类</code></p><h3 id="基本定时器框架">基本定时器框架</h3><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20221023151530464.png" alt="image-20221023151530464"></p><ul><li>DMA输出是数模转换</li><li>定时器工作频率为总线频率除以预分频频率加一的和，定时器工作频率的具体解释，比如定时器工作频率为100KHz，那么定时器每一秒钟数100000个数字。</li><li>CNT，自动重装载值</li><li>定时频率为定时器工作频率除以自动重装载值加一的和，定时频率的具体解释，比如定时频率为1KHz，那么每一秒钟就会有1000次的溢出中断来标识计时完成，意味着每1ms触发一次中断，定时频率为每毫秒一次。</li></ul><h3 id="CubeMx配置定时器参数">CubeMx配置定时器参数</h3><h3 id="触发输信号">触发输信号</h3><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20221023154640655.png" alt="image-20221023154640655"></p><p>当计数完成触发一次中断后，定时器可以向其他寄存器释放信号。</p><h2 id="实例讲解">实例讲解</h2><h3 id="延时函数">延时函数</h3><p>HAL_Delay函数是基于定时器而实现的。</p><h3 id="SysTick在CubeMax中的配置">SysTick在CubeMax中的配置</h3><p>两个方面</p><p>SYS定时器来源配置</p><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20221020193544493.png" alt="image-20221020193544493"></p><p>Clock Configuration配置(配置定时器计数周期的频率)</p><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20221020193923385.png" alt="image-20221020193923385"></p><p><code>to cortex systerm timer(MHz)</code></p><h3 id="如何找到内核定义的函数">如何找到内核定义的函数</h3><ul><li>路径CMSIS</li><li>systerm_stm32f1xx.c</li><li>进入该头文件(stm32f1xx.h)</li></ul><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20221020195117977.png" alt="image-20221020195117977"></p><ul><li><p>找到本芯片型号，进入头文件</p><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20221020195218083.png" alt="image-20221020195218083"></p></li><li><p>找到内核函数头文件，进入</p><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20221020195400431.png" alt="image-20221020195400431"></p></li><li><p>中断中不建议大家使用延时函数，如果Systick每配置好，很容易进入死循环。</p></li></ul><h3 id="延时函数的实现原理（定时器）">延时函数的实现原理（定时器）</h3><p>SysTick_Init()函数，跟着函数定义找</p><p>在其定义中，发现其定义了HAL_SYSTICK_CONFIG函数</p><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20221020202517551.png" alt="image-20221020202517551"></p><p>继续找其定义，发现其又调用返回了另一个函数</p><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20221020202629549.png" alt="image-20221020202629549"></p><p>继续搜索它的定义(由于这是<a href="#%E5%A6%82%E4%BD%95%E6%89%BE%E5%88%B0%E5%86%85%E6%A0%B8%E5%AE%9A%E4%B9%89%E7%9A%84%E5%87%BD%E6%95%B0">内核定义</a>的函数，所以按照前面的方法找)</p><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20221020203332051.png" alt="image-20221020203332051"></p><p>看懂定时器的初始化原理，然后再看Delay_us函数，进去看其定义，一层一层查找</p>]]></content>
      
      
      <categories>
          
          <category> 单片机 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
            <tag> 单片机 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>STM32中断的使用</title>
      <link href="/2023/10/08/%E3%80%90STM32HAL%E5%BA%93%E5%BC%80%E5%8F%91%E3%80%918-STM32%E4%B8%AD%E6%96%AD%E7%9A%84%E4%BD%BF%E7%94%A8%E5%B7%A5%E7%A8%8B/"/>
      <url>/2023/10/08/%E3%80%90STM32HAL%E5%BA%93%E5%BC%80%E5%8F%91%E3%80%918-STM32%E4%B8%AD%E6%96%AD%E7%9A%84%E4%BD%BF%E7%94%A8%E5%B7%A5%E7%A8%8B/</url>
      
        <content type="html"><![CDATA[<h1>STM32中断的使用(工程讲解)</h1><p><code>使用EXTI外部中断的工程实例</code></p><h2 id="CubeMax配置">CubeMax配置</h2><ol><li><h3 id="配置时钟">配置时钟</h3></li><li><p>配置SYS的debug，选择Serial Wire</p><ul><li><p>若不勾选，程序只能下载一遍</p></li><li><p>若未勾选然后已经下载了程序</p><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20221019163209562.png" alt="image-20221019163209562"></p></li></ul></li><li><p>配置GPIO引脚</p><ul><li>任意引脚，选择GPIO_EXTI</li></ul><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20221019163358656.png" alt="image-20221019163358656"></p><p>图中的GPIO_EXTI2对应着GPIO2线的外部中断，可以在数据手册中的External interrupt/even line mapping中找到相关描述</p><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20221019163655650.png" alt="image-20221019163655650"></p><ul><li><p>配置GPIO模式，可选择上升沿触发或者下降沿触发或上下边沿都检测(rising/falling edge trigger detection)</p><p>可选择事件模式(event)或者中断模式(external interrupt)</p><p>事件模式：只产生事件</p><p>中断模式：既产生事件又产生中断</p></li></ul></li><li><p>配置NVIC(向量中断控制器)</p><ul><li>如图，如果设置了GPIO_EXTI2，那么我们要使能向量中断控制器去操纵这个引脚，所以需要在NVIC勾选相应的中断。</li></ul><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20221019164634750.png" alt="image-20221019164634750"></p><ul><li><p>然后在此界面设置优先级分组(详细请看中断概述中的NVIC章节)</p><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20221019164803817.png" alt="image-20221019164803817"></p><p><code>样例中勾选了Sort by ..., 以及选择了4bits for... 意思是选择优先级分组，并且将该中断的优先级分组全部位数用于表示抢占优先级，没有子优先级</code></p></li><li><p>然后点击line2，设置其抢占优先级和子优先级</p><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20221019165049399.png" alt="image-20221019165049399"></p></li></ul></li><li><p>然后配置Project Manager(工程路径最好不要有中文)</p></li></ol><h2 id="中断触发流程">中断触发流程</h2><p>中断触发——&gt;中断向量表(在其中找对应的偏移)——&gt;找到对应的入口地址——&gt;跳转到中断服务函数(我们最终会执行的函数)</p><p><strong>这些大量的handle储存了不同的中断服务函数</strong></p><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20221019170708165.png" alt="image-20221019170708165"></p><p><em><strong>如果没有定义好中断服务函数，那么触发中断后就会跳转到默认的中断服务函数(弱定义)进入死循环</strong></em></p><h3 id="注意：">注意：</h3><ol><li><p>我们在编写中断服务函数时最好先写个条件语句判断是否产生相应的中断。</p></li><li><p>判断玩之后记得清除中断标志位，否则会一直触发中断。(实际上，EXTI会将中断挂起，若不清除中断标志则会一直产生中断)</p><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20221019171426885.png" alt="image-20221019171426885"></p></li></ol>]]></content>
      
      
      <categories>
          
          <category> 单片机 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
            <tag> 单片机 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>中断概述</title>
      <link href="/2023/10/07/%E3%80%90STM32HAL%E5%BA%93%E5%BC%80%E5%8F%91%E3%80%917-STM32%E4%B8%AD%E6%96%AD%E6%A6%82%E8%BF%B0/"/>
      <url>/2023/10/07/%E3%80%90STM32HAL%E5%BA%93%E5%BC%80%E5%8F%91%E3%80%917-STM32%E4%B8%AD%E6%96%AD%E6%A6%82%E8%BF%B0/</url>
      
        <content type="html"><![CDATA[<h1>中断概述</h1><h2 id="中断">中断</h2><h3 id="中断的概念">中断的概念</h3><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20221017150827612.png" alt="image-20221017150827612"></p><p><code>感性的理解：当你执行A任务时，出现了B任务，B任务更重要，所以你停止做A，先做完B再做A，这个过程称为中断</code></p><h3 id="中断和异常">中断和异常</h3><p>中断和异常的概念相近，异常可以说是 <strong>内核活动</strong> 产生(比如说执行指令出错)；</p><p>而中断一般是由连接到内核的外部器件(外设)产生(比如外设产生中断，提示数据传输完成)；</p><p><em>它们的触发原理或者处理方式相同，在使用中并不严格区分异常和中断</em></p><h3 id="外部中断">外部中断</h3><p><code>外部中断，目前可以理解为外设中断，英文是 External Interrupte </code></p><p>不同开发板的中断以及中断类型各不相同，因此对不不同开发板的中断使用应该具体情况具体分析，查看中断的内容，我们可以打开工程，阅读startup文件，找到其中的 <strong>External Interrupts</strong></p><h2 id="优先级">优先级</h2><h3 id="中断优先级">中断优先级</h3><ul><li>优先级有两种：可编程、不可编程</li><li>中断的优先级决定着内核优先相应谁的中断请求</li><li>小值优先原则，优先级值越小，中断会被优先相应</li><li>中断优先级按照 <strong>优先级分组</strong> 配置</li></ul><h3 id="中断的优先级分组">中断的优先级分组</h3><ul><li><p>以F103为例，STM32上使用的M3内核支持8bit优先级中的高4位bit。也就是说STM32F103支持<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mn>2</mn><mn>4</mn></msup></mrow><annotation encoding="application/x-tex">2^4</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8141em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">4</span></span></span></span></span></span></span></span></span></span></span>个优先级。(0~15)</p><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20221017153044599.png" alt="image-20221017153044599"></p></li><li><p>在F103上，使用这4个bit，组织成五组优先级分组。这五组中，每组分为一个抢占优先级、一个子优先级组。</p><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20221017153507988.png" alt="image-20221017153507988"></p><ul><li>通过优先级分组，可以更好的管理中断响应顺序。</li><li>只有 <em><strong>抢占优先级</strong></em> 才有抢占中断的权限，发生中断嵌套。(所以，<strong>抢占优先级决定中断次序</strong>) <code>A中断抢占B中断执行，执行完后B中断再执行的过程称为中断嵌套</code><ul><li>例：B中断正在执行，A中断抢占优先级数值比B中断小(A的抢占优先级比B高)，A中断则抢过B中断的使用权，响应A的中断服务函数，A中断执行完再交还给B。</li></ul></li><li>如果中断抢占优先级相同，则不发生抢占行为。</li><li>如果多个挂起的中断具有相同的抢占优先级，则子优先级高的先行，如果子优先级都相同，则IRQ编号小的先行。<strong>中断挂起：就是挂起等待</strong><ul><li>IRQ编号是中断编号，不同开发板的中断编号不同，可以通过查阅文件看到使用的开发板的中断编号。<strong>如何找？详细见视频——中断概览，21min-23min</strong></li></ul></li></ul></li><li><p>小结：</p><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20221017155320648.png" alt="image-20221017155320648"></p></li></ul><hr><h2 id="嵌套向量中断控制器-NVIC">嵌套向量中断控制器(NVIC)</h2><h3 id="NVIC的功能">NVIC的功能</h3><h4 id="相关库函数">相关库函数</h4><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20221017155529783.png" alt="image-20221017155529783"></p><p><code>中断等待的状态：中断挂起/中断悬起</code></p><p>NVIC, Nested Vectored Interrupt Controller.</p><h2 id="EXTI扩展中断和事件控制器">EXTI扩展中断和事件控制器</h2><p><code>EXTI, external interrupt, 外部中断</code></p><h3 id="事件的概念">事件的概念</h3><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20221017181624580.png" alt="image-20221017181624580"></p><p><code>定时器是STM32的一个外设，可以实现计数的功能</code></p><h3 id="EXTI-扩展中断和事件控制器">EXTI-扩展中断和事件控制器</h3><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20221017181935548.png" alt="image-20221017181935548"></p><p><strong>重点：捕获外部输入事件</strong></p><h3 id="EXTI外设框图-F1-F4-F7">EXTI外设框图(F1/F4/F7)</h3><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20221017182615061.png" alt="image-20221017182615061"></p><ul><li>上升沿触发寄存器和下降沿触发寄存器可以同时配置</li><li>输入线的电平变化信号是否可以传到下一级门电路，取决于上升沿触发寄存器和下降沿触发寄存器是否捕获这个变化信号。</li></ul><p><strong>注意电路图的两个标志：</strong></p><ul><li><p>门电路</p><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20221017182940096.png" alt="image-20221017182940096"></p><p>other</p><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20221017183013894.png" alt="image-20221017183013894"></p></li><li><p>或门，输入的线其中一个输入满足条件则可通过</p><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20221017183046163.png" alt="image-20221017183046163"></p></li><li><p>与门，输入的线全都满足条件才可以通过</p><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20221017183122537.png" alt="image-20221017183122537"></p></li><li><p>脉冲发生器，一般用于唤醒MCU，MCU为了低功耗，不工作时一般会休眠</p></li></ul><p><strong>主要的使用逻辑：捕获外部引脚电平变化——&gt;触发EXTI——&gt;申请中断</strong></p>]]></content>
      
      
      <categories>
          
          <category> 单片机 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
            <tag> 单片机 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>GPIO</title>
      <link href="/2023/10/06/%E3%80%90STM32HAL%E5%BA%93%E5%BC%80%E5%8F%91%E3%80%916-STM32%E7%AC%AC%E4%B8%80%E4%B8%AA%E5%A4%96%E8%AE%BEGPIO/"/>
      <url>/2023/10/06/%E3%80%90STM32HAL%E5%BA%93%E5%BC%80%E5%8F%91%E3%80%916-STM32%E7%AC%AC%E4%B8%80%E4%B8%AA%E5%A4%96%E8%AE%BEGPIO/</url>
      
        <content type="html"><![CDATA[<h1>GPIO</h1><h2 id="GPIO的输入和输出">GPIO的输入和输出</h2><h3 id="GPIO输出模式-四种">GPIO输出模式(四种)</h3><h4 id="推腕输出">推腕输出</h4><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20221019195721798.png" alt="image-20221019195721798"></p><p><em>特点：驱动能力强</em>（因为MOS管电阻很小，VCC经过的电流大，驱动能力强）</p><p><em>是最常用的输出模式</em></p><h4 id="开漏输出">开漏输出</h4><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20221019195809597.png" alt="image-20221019195809597"></p><p><em>只能输出低电平</em></p><p><strong>输出高电平时，可以外接一个电阻和电压（上拉电阻），电压可以根据自己的需要选择，这样IO口就可以输出你想要的电平（高于5.5v）</strong></p><p>&quot;开漏输出&quot;具有”线与“的功能，一个为低全部为低，多用于I2C或者SMBUS总线;(个人理解：就是在开漏输出的IO连接的线上，如果驱动电压是开漏输出的IO口，那么这条线上只要有一处是低电平，意味着全部都是低电平)</p><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20230124000202845.png" alt="image-20230124000202845"></p><h4 id="复用推腕输出和复用推腕输出">复用推腕输出和复用推腕输出</h4><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20221019195943060.png" alt="image-20221019195943060"></p><p><strong>一般用于特殊的功能</strong></p><h3 id="GPIO输入模式-四种">GPIO输入模式(四种)</h3><h4 id="上拉输入">上拉输入</h4><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20221019200122677.png" alt="image-20221019200122677"></p><p><strong>外接独立按键可以使用这个，可以有效防止其他因素的干扰</strong></p><h4 id="下拉输入">下拉输入</h4><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20221019200228954.png" alt="image-20221019200228954"></p><h4 id=""></h4><h4 id="浮空输入和模拟输入">浮空输入和模拟输入</h4><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20221019200338947.png" alt="image-20221019200338947"></p><p><em><strong>注意：芯片复位上电后默认为浮空输入模式。</strong></em></p><h3 id="输出速度">输出速度</h3><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20221019200449504.png" alt="image-20221019200449504"></p><h3 id="GPIO初始化顺序">GPIO初始化顺序</h3><ol><li>选定具体的GPIO</li><li>配置GPIO工作模式（CRL和CRH寄存器）</li><li>控制GPIO输出高低电平（ODR、BSRR、BRR）</li></ol><h3 id="写自己的函数">写自己的函数</h3><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20221028104822659.png" alt="image-20221028104822659"></p><h2 id="操作寄存器点亮LED">操作寄存器点亮LED</h2><h3 id="C语言技巧">C语言技巧</h3><ul><li><p>给寄存器相应的位置位或者清0的操作</p><p>置位</p><p>|=</p><p>例子：*(unsigned int *)0x40021000 |= (1&lt;&lt;0)</p><p>表示对地址在0x40021000上的寄存器的第0位置1</p><p>清0</p><p>&amp;=</p><p>例子：*(unsigned int *)0x40021000 &amp;=  ~(1&lt;&lt;0)</p><p>表示对地址在0x40021000上的寄存器的第0位清0</p></li><li></li></ul>]]></content>
      
      
      <categories>
          
          <category> 单片机 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
            <tag> 单片机 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>RCC—复位和时钟控制</title>
      <link href="/2023/10/05/%E3%80%90STM32HAL%E5%BA%93%E5%BC%80%E5%8F%91%E3%80%915-STM32%E7%9A%84%E5%A4%8D%E4%BD%8D%E5%92%8C%E6%97%B6%E9%92%9F%E6%8E%A7%E5%88%B6/"/>
      <url>/2023/10/05/%E3%80%90STM32HAL%E5%BA%93%E5%BC%80%E5%8F%91%E3%80%915-STM32%E7%9A%84%E5%A4%8D%E4%BD%8D%E5%92%8C%E6%97%B6%E9%92%9F%E6%8E%A7%E5%88%B6/</url>
      
        <content type="html"><![CDATA[<h1>RCC—复位和时钟控制</h1><p><code>RCC, Reset and clock control(是STM32的一个外设)</code></p><h2 id="STM32-RCC知识">STM32 RCC知识</h2><h3 id="STM的复位功能-三种">STM的复位功能(三种)</h3><ol><li>系统复位<ul><li>就是将系统所有寄存器都设定为默认的复位值</li><li>所有寄存器是指，除了指针控制寄存器(CSR)的复位标志和备份区域中的寄存器以外的所有寄存器</li></ul></li><li>电源复位<ul><li>除了备份区域中的寄存器，复位其他所有寄存器</li></ul></li><li>后被域复位<ul><li>只影响备份区域</li></ul></li></ol><p><strong>详细的功能查阅参考手册RCC章节</strong></p><h3 id="时钟">时钟</h3><p>对于电子器件来说，时钟就是它的心跳，STM32芯片会根据时钟的节拍来工作。</p><p><code>常说的72Mhz、480Mhz，就是指STM32的主时钟(系统时钟)的频率，芯片就以这样的频率，对各种器件做着同步的工作</code></p><h4 id="时钟来源">时钟来源</h4><ul><li><p>芯片的时钟来源有很多种，这里以STM32为例</p><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20221016103625981.png" alt="image-20221016103625981"></p><p><code>PLL时钟是我们常用的时钟，二级时钟源主要是给其他器件使用的。比如LSE常用于定时器的配置。需要注意的是，频率越高、运行速度更快、功耗越高</code></p><p><strong>这些东西也能在参考手册找到</strong></p></li></ul><h4 id="STM32时钟树的设计">STM32时钟树的设计</h4><ul><li><p>方便对各种时钟进行整合以及管理，也方便用户的使用</p><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20221016103959764.png" alt="image-20221016103959764"></p><p><code>时钟树大概长这样</code></p></li></ul><h4 id="使用CubeMax配置时钟树-这里主要针对系统时钟的设置">使用CubeMax配置时钟树(这里主要针对系统时钟的设置)</h4><ol><li><p>在Clock Confriguration中进行配置</p></li><li><p>首先，在系统核心中配置RCC外设</p><ul><li><p>在RCC外设里，我们就可以选择使用哪一个时钟了(<a href="#%E6%97%B6%E9%92%9F%E6%9D%A5%E6%BA%90">如图有HSE振荡器时钟和低速外部晶体</a>)</p></li><li><p>对于高低速时钟各有的功能和作用，可以在参考手册中找到。</p></li><li><p>我们可以根据手册来选择时钟的时钟来源：晶振/用户输入/XXX</p></li><li><p>我们常选择的方案是使用一个晶振(Crystal Resonator)</p><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20221016105221536.png" alt="image-20221016105221536"></p></li><li><p>低速外部时种可选可不选(因为我们已经有一个时钟在用了)</p></li></ul><p><em>至此，配置好RCC时钟以及时钟源</em></p></li><li><p>跳转至时钟配置栏(Clock Confriguration)</p><p><code>在这里配置时钟树</code></p><ul><li><p>设置主系统时钟，找到中间的SYSCLK</p><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20221016105556992.png" alt="image-20221016105556992"></p><p><code>这里，我们可以看到我们的系统时钟是被HSI RC控制的</code></p><ul><li><p>一般，我们会用HSE作为倍频的时钟源输入，然后通过PLL对我们的输入时钟进行倍频，来实现一个较高频率的的输出，作为系统的主时钟，这样我们就可以得到一个较高的时钟频率。</p></li><li><p>根据上述逻辑，我们为了得到一个较高的时钟频率，将系统主时钟与PLL时钟相连，然后再调系统时钟的频率。</p></li><li><p>那我们应该选取什么样的系统时钟频率呢？</p><ol><li><p>参考数据手册的 <em>工作条件中的通用工作条件</em> 找到不同条件下对频率的限定范围</p><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20221016110420440.png" alt="image-20221016110420440"></p><p><code>参考手册一般会配有时钟树的图</code></p></li><li><p>先配置系统主时钟，再配置后面的分支，系统主时钟的配置，根据数据手册可以看到。(上面的工作条件图中，表明了内部AHB时钟频率的范围，以此为例调节内部HCLK的频率，然后回车，CubeMx就会有弹窗自动为你生成合适的配置方案帮你配好所有时钟)</p><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20221016110955178.png" alt="image-20221016110955178"></p><p>next，这里输入72MHz，是数据手册中限制的工作频率的最大值，但是具体配置什么值，<strong>取决于我们的个人需要以及工程需要</strong></p><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20221016111037532.png" alt="image-20221016111037532"></p><p>点击ok</p><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20221016111103108.png" alt="image-20221016111103108"></p><p><em>自动生成好了时钟方案，主要是由CubeMX检索方案自动生成合适的、不超过数据手册中的关于频率的限制的 <strong>分频因子</strong></em></p></li><li><p>看一下PLL的倍频实现</p><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20221016111218033.png" alt="image-20221016111218033"></p></li></ol></li></ul></li><li><p>对于大部分STM32外设来说，都是走这样一种主的系统时钟线路的</p><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20221016111732462.png" alt="image-20221016111732462"></p></li></ul></li></ol><p><strong>小结：</strong></p><ul><li>对于STM32上的时钟的具体配置，根据工作需求决定</li><li>时钟频率越高，一般功耗越高</li><li>另一方面，要考虑芯片的工作条件，根据芯片运行的工作条件选取时钟频率</li><li>只要满足工作条件的频率都可以配置，有一定自由度</li></ul>]]></content>
      
      
      <categories>
          
          <category> 单片机 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
            <tag> 单片机 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>STM32启动过程</title>
      <link href="/2023/10/04/%E3%80%90STM32HAL%E5%BA%93%E5%BC%80%E5%8F%91%E3%80%914-STM32%E7%A8%8B%E5%BA%8F%E5%90%AF%E5%8A%A8%E8%BF%87%E7%A8%8B/"/>
      <url>/2023/10/04/%E3%80%90STM32HAL%E5%BA%93%E5%BC%80%E5%8F%91%E3%80%914-STM32%E7%A8%8B%E5%BA%8F%E5%90%AF%E5%8A%A8%E8%BF%87%E7%A8%8B/</url>
      
        <content type="html"><![CDATA[<h1>STM32启动过程</h1><h2 id="程序启动流程">程序启动流程</h2><p>STM的内核结构</p><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20221016092241070.png" alt="image-20221016092241070"></p><p>该内核就是不断接受指令，然后不断执行指令</p><p>我们所有的代码和操作都会变成相应的指令传给内核。</p><p>ARM<strong>公司设计了一套指令集</strong></p><ul><li>所有的操作最后都会变成指令集中的指令</li><li>一旦芯片上电，就会引发芯片的复位异常，并且会跳到中断向量表特定的偏移位置，获取里面的内容执行。</li><li>我们修改复位异常的内容，我们就可以让处理器去执行我们的操作</li></ul><p><em>不同的存储器差异：</em></p><ul><li>flash存储器(闪存存储器)—&gt;相对较长时间保存数据(保存时间的长短取决于芯片的性能)</li><li>SRAM存储器—&gt;静态随机存储器(断电就会数据流失)</li></ul><p><em>启动文件：</em></p><ul><li><p>一般而言，每个工程启动文件都是.s文件(汇编文件)</p><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20221016094110055.png" alt="image-20221016094110055"></p><p><em>从启动文件的描述中，我们看到它做了这五个工作</em></p><ol><li>初始化堆栈指针</li><li>设置PC指针的值(PC指针-8的位置就是当前指针的地址)</li><li>设置中断向量表</li><li>配置系统时钟</li><li>调用C库函数_main<ol><li>完成初始化堆栈的工作</li><li>跳转到我们自己写的main函数中</li></ol></li><li>关键字：<ol><li>Stack(堆)、Heap(栈)</li><li>Vectors(中断)</li></ol></li></ol></li></ul>]]></content>
      
      
      <categories>
          
          <category> 单片机 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
            <tag> 单片机 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>STM32中断的使用</title>
      <link href="/2023/10/03/%E3%80%90STM32HAL%E5%BA%93%E5%BC%80%E5%8F%91%E3%80%913-%E6%9D%BF%E7%BA%A7%E7%9F%A5%E8%AF%86%E5%8C%85/"/>
      <url>/2023/10/03/%E3%80%90STM32HAL%E5%BA%93%E5%BC%80%E5%8F%91%E3%80%913-%E6%9D%BF%E7%BA%A7%E7%9F%A5%E8%AF%86%E5%8C%85/</url>
      
        <content type="html"><![CDATA[<h1>板级知识包</h1><h2 id="什么是板级知识包">什么是板级知识包</h2><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20221015212746055.png" alt="image-20221015212746055"></p><h4 id="一个软件的组织架构（简化的理解）">一个软件的组织架构（简化的理解）</h4><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20221015213206288.png" alt="image-20221015213206288"></p><p>我们的目的，以及嵌入式开发的重要目标，就是构建自己的板级支持包，板级支持包在软硬件中起到承上启下的作用。</p><ul><li>板级支持包提供硬件的具体功能，实现硬件的各种作用</li><li>不同的硬件应有不同的板级支持包</li><li>主要功能：对板上的资源功能给出实现，并提供用户应用程序接口</li></ul><h4 id="本节目标："><strong>本节目标：</strong></h4><ul><li>构建开发板上的LED灯板级支持包</li><li>构建开发板上的按键板级支持包</li></ul><h2 id="构建板级支持包的操作">构建板级支持包的操作</h2><h3 id="具体操作">具体操作</h3><h4 id="打开一个工程（以LED灯为例">打开一个工程（以LED灯为例)</h4><h4 id="板级支持包是一个单独的-c-文件，我们建立一个这样的文件">板级支持包是一个单独的 .c 文件，我们建立一个这样的文件</h4><ul><li>先建立一个文件夹命名为板级支持包，用于管理</li><li>然后建立.c文件用于操控，以及建立一个头文件（就是建立一个.h文件）</li><li><a href="#%E9%85%8D%E7%BD%AE%E8%B7%AF%E5%BE%84">然后设置相应的路径（在前文有讲）</a></li></ul><h4 id="写程序，使用相应的引脚，实现相应功能">写程序，使用相应的引脚，实现相应功能</h4><p>写程序时注意点：</p><ul><li>宏定义的对象时调用函数时，为了避免错误，使用do{}while(0)语句，这样能保证一次宏调用只执行一次。</li></ul><h4 id="板级支持包的使用">板级支持包的使用</h4><ul><li><p>在main函数中，将自己的头文件写进去(注意位置：写在USER CODE BEGIN Includes下面)</p><p><code>这样是为了在main函数中调用自己的板级支持包</code></p></li><li><p>然后在主函数进行调用，实现功能</p></li></ul><h2 id="自己移植库，并进行使用（作为补充知识）">自己移植库，并进行使用（作为补充知识）</h2><ul><li><h4 id="新建自己的移植工程目录，在目录里建好相应的文件夹便于文件的管理">新建自己的移植工程目录，在目录里建好相应的文件夹便于文件的管理</h4><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20221015222425815.png" alt="image-20221015222425815"></p></li><li><h4 id="打开keil，新建一个工程，放到自己的工程目录里的Project里面去">打开keil，新建一个工程，放到自己的工程目录里的Project里面去</h4><ul><li><p>选择对应的芯片</p><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20221015222637333.png" alt="image-20221015222637333"></p></li></ul></li><li><h4 id="然后将相关的库拷到工程目录下">然后将相关的库拷到工程目录下</h4><ul><li><p>主要是CMSIS和STM32的hal库，放到libraries</p><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20221015222934209.png" alt="image-20221015222934209"></p></li></ul></li><li><p>然后在User里建立自己的第一个文件main.c</p></li><li><p>然后就可以回到keil，对自己的工程文件进行其他文件的添加（点&quot;品&quot;字型的按键）</p><ul><li><p>管理Project</p><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20221015223324126.png" alt="image-20221015223324126"></p></li><li><p>然后点击ok</p><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20221015223347266.png" alt="image-20221015223347266"></p><p>然后就可以在相应的文件夹里移植自己的库函数文件或者其他文件了</p></li><li><p>然后添加相应的文件和函数库进去</p><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20221015223701172.png" alt="image-20221015223701172"></p><ul><li><p>一般ll的.c文件不添加、带有temple字样的.c文件不添加（会导致一些错误，所以不添加）</p></li><li><p>原则：按需添加（主要是添加一些外设和必要的驱动）</p><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20221015223904235.png" alt="image-20221015223904235"></p></li></ul></li><li><p>这样就将许多的必要文件放在了Project中</p><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20221015224021071.png" alt="image-20221015224021071"></p></li><li><p>但是这时我们很多.c文件是没有路径的，这就需要我们配置路径了</p></li></ul></li><li><h3 id="配置路径">配置路径</h3><ul><li><p>点击魔法棒调出窗口</p><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20221015224204184.png" alt="image-20221015224204184"></p><p>ARM compler 使用第五版本的编译器</p></li><li><p>然后点击C/C++</p><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20221015224342217.png" alt="image-20221015224342217"></p><p>然后点击include path的三个点进行路径的配置</p><ul><li><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20221015224453160.png" alt="image-20221015224453160"></p><p>这样找到头文件位置进行添加（主要是添加hal库的和CMSIS这种函数库的头文件）</p></li></ul></li><li><p>然后在Define中写上自己的芯片和相应的驱动，具体根据关键字写，如下图</p><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20221015224750744.png" alt="image-20221015224750744"></p><p><strong>然后点击ok就添加进了头文件</strong></p></li></ul></li></ul><p><strong>至此，我们就可以构建我们的程序，进行编写和编译</strong></p><ul><li><p>然后发现在编译过程中出现许多报错</p><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20221015225401672.png" alt="image-20221015225401672"></p><p>先解决第一个报错，如图鼠标所指向（找不到头文件XXX）</p><ul><li><p>如图这是个hal库的配置文件，通过下图的文件路径找到它</p><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20221015225523447.png" alt="image-20221015225523447"></p><p>点开这个文件，有配置说明</p><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20221015225625326.png" alt="image-20221015225625326"></p><p><strong>最后一行字说：这个文件应该被复制到应用文件夹，并且重命名为XXX</strong></p><p>（我们发现这个名字和报错名字一模一样）</p></li><li><p>按照文件提示操作，将之复制到应用目录下并重命名</p><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20221015225751127.png" alt="image-20221015225751127"></p><p>然后在keil中添加头文件路径</p><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20221015225908254.png" alt="image-20221015225908254"></p><p><strong>这样一来，就可以正常跳转到头文件了</strong></p><p>（这个config文件是必须的且重要的）</p></li></ul></li><li><p>然后我们编译，根据相应的报错，添加路径、解决错误。（一般是ex.c文件未链接）</p><p>注意，我们的main.c文件必须要有一个入口函数，不然会编译报错</p><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20221015230336400.png" alt="image-20221015230336400"></p><p><strong>至此，编译无误，工程移植建立完毕</strong>（在project中生成了.axf文件，即可进行烧录）</p></li></ul><p><strong>注意:</strong></p><ul><li>hal库定义了许多函数，一般函数的声明都集中放在文件的最后面。</li></ul>]]></content>
      
      
      <categories>
          
          <category> 单片机 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
            <tag> 单片机 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>STM库的基本操作</title>
      <link href="/2023/10/02/%E3%80%90STM32HAL%E5%BA%93%E5%BC%80%E5%8F%91%E3%80%912-STM%E5%BA%93%E7%9A%84%E5%9F%BA%E6%9C%AC%E6%93%8D%E4%BD%9C/"/>
      <url>/2023/10/02/%E3%80%90STM32HAL%E5%BA%93%E5%BC%80%E5%8F%91%E3%80%912-STM%E5%BA%93%E7%9A%84%E5%9F%BA%E6%9C%AC%E6%93%8D%E4%BD%9C/</url>
      
        <content type="html"><![CDATA[<h1>STM库的基本操作</h1><h2 id="如何使用函数">如何使用函数</h2><h3 id="点开各种外设的驱动文件">点开各种外设的驱动文件</h3><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20221015211502007.png" alt="image-20221015211502007"></p><ul><li>一定要看&quot;How to use this driver&quot;板块，了解如何使用</li><li>对于&quot;How to use this driver&quot;板块，带有(#)的是顶层操作，必须按步骤按顺序操作</li></ul>]]></content>
      
      
      <categories>
          
          <category> 单片机 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
            <tag> 单片机 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>KEIL5基本了解——新建工程模板</title>
      <link href="/2023/10/01/%E3%80%90STM32HAL%E5%BA%93%E5%BC%80%E5%8F%91%E3%80%911-KEIL5%E5%9F%BA%E6%9C%AC%E4%BA%86%E8%A7%A3/"/>
      <url>/2023/10/01/%E3%80%90STM32HAL%E5%BA%93%E5%BC%80%E5%8F%91%E3%80%911-KEIL5%E5%9F%BA%E6%9C%AC%E4%BA%86%E8%A7%A3/</url>
      
        <content type="html"><![CDATA[<h1>KEIL5基本了解——新建工程模板</h1><p>本文基于新建工程模板，使用KEIL5，对KEIL的操作和一些汇编知识进行了解。</p><h2 id="工程文件必须要的几个文件">工程文件必须要的几个文件</h2><h3 id="启动文件">启动文件</h3><p>从ST官方的固件库资料里面找到启动文件</p><p><strong>启动文件是和硬件相关的一些汇编代码，是必不可少的。</strong></p><h3 id="main函数">main函数</h3><p>main函数是一个程序中的入口函数，必不可少</p><h3 id="SystemInit">SystemInit</h3><p>首先我们了解一下程序执行过程，最开始是从启动文件中的Reset_Handler（复位程序）开始执行（汇编阶段），在复位程序里面，我们调用了一个外部函数SystemInit初始化各种东西，然后调用_main函数，在这个函数的最末尾调用入口函数main，然后从汇编世界进入C语言程序的世界；</p><h3 id="包含所有寄存器定义的头文件">包含所有寄存器定义的头文件</h3><p>stm32f10x.h，这个头文件对所有的寄存器等基础的东西都做了定义，帮我们完成了很多工作；</p><h3 id="两个重要的KEIL生成的文件">两个重要的KEIL生成的文件</h3><h4 id="Listings">Listings</h4><p>存放寄存器映射、存储器映射等文件</p><h4 id="Objects">Objects</h4><p>用于存放生成的工程目标文件</p><p>比如hex文件（串口烧录可执行文件）、axf文件（烧录可执行文件）</p><h2 id="魔法棒">魔法棒</h2><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20221019213030830.png" alt="image-20221019213030830"></p><p><strong>使用lab，优化我们的代码</strong></p><p>对于学习来说最好使用第五版的编译器</p><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20221019213113992.png" alt="image-20221019213113992"></p>]]></content>
      
      
      <categories>
          
          <category> 单片机 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
            <tag> 单片机 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>模糊预测(未更新)</title>
      <link href="/2023/08/24/%E3%80%90%E6%95%B0%E5%AD%A6%E5%BB%BA%E6%A8%A1%E3%80%91%E9%A2%84%E6%B5%8B%E6%A8%A1%E5%9E%8B-4-%E6%A8%A1%E7%B3%8A%E9%A2%84%E6%B5%8B/"/>
      <url>/2023/08/24/%E3%80%90%E6%95%B0%E5%AD%A6%E5%BB%BA%E6%A8%A1%E3%80%91%E9%A2%84%E6%B5%8B%E6%A8%A1%E5%9E%8B-4-%E6%A8%A1%E7%B3%8A%E9%A2%84%E6%B5%8B/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      <categories>
          
          <category> 数学建模 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
            <tag> 数学建模 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>神经网络预测(未更新)</title>
      <link href="/2023/08/23/%E3%80%90%E6%95%B0%E5%AD%A6%E5%BB%BA%E6%A8%A1%E3%80%91%E9%A2%84%E6%B5%8B%E6%A8%A1%E5%9E%8B-3-%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C%E9%A2%84%E6%B5%8B/"/>
      <url>/2023/08/23/%E3%80%90%E6%95%B0%E5%AD%A6%E5%BB%BA%E6%A8%A1%E3%80%91%E9%A2%84%E6%B5%8B%E6%A8%A1%E5%9E%8B-3-%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C%E9%A2%84%E6%B5%8B/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      <categories>
          
          <category> 数学建模 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
            <tag> 数学建模 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>马尔可夫预测(未更新)</title>
      <link href="/2023/08/22/%E3%80%90%E6%95%B0%E5%AD%A6%E5%BB%BA%E6%A8%A1%E3%80%91%E9%A2%84%E6%B5%8B%E6%A8%A1%E5%9E%8B-2-%E9%A9%AC%E5%B0%94%E5%8F%AF%E5%A4%AB%E9%A2%84%E6%B5%8B/"/>
      <url>/2023/08/22/%E3%80%90%E6%95%B0%E5%AD%A6%E5%BB%BA%E6%A8%A1%E3%80%91%E9%A2%84%E6%B5%8B%E6%A8%A1%E5%9E%8B-2-%E9%A9%AC%E5%B0%94%E5%8F%AF%E5%A4%AB%E9%A2%84%E6%B5%8B/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      <categories>
          
          <category> 数学建模 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
            <tag> 数学建模 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>回归分析</title>
      <link href="/2023/08/21/%E3%80%90%E6%95%B0%E5%AD%A6%E5%BB%BA%E6%A8%A1%E3%80%91%E9%A2%84%E6%B5%8B%E6%A8%A1%E5%9E%8B-1-%E7%BB%9F%E8%AE%A1%E5%9B%9E%E5%BD%92%E9%A2%84%E6%B5%8B/"/>
      <url>/2023/08/21/%E3%80%90%E6%95%B0%E5%AD%A6%E5%BB%BA%E6%A8%A1%E3%80%91%E9%A2%84%E6%B5%8B%E6%A8%A1%E5%9E%8B-1-%E7%BB%9F%E8%AE%A1%E5%9B%9E%E5%BD%92%E9%A2%84%E6%B5%8B/</url>
      
        <content type="html"><![CDATA[<h1>回归分析</h1><h2 id="简介">简介</h2><p>在统计学中，回归分析（regression analysis）指的是确定两种或者两种以上变量间相互依赖关系的定量关系的一种统计分析方法。回归分析根据涉及到的变量的多少，分为<strong>一元回归分析和多元回归分析</strong>；按照因变量的多少，可分为<strong>简单回归分析和多重回归分析</strong>；按照自变量和因变量的关系类型，可以分为<strong>线性回归分析和非线性回归分析</strong>。</p><p>在大数据分析中，回归分析是一种预测性的建模技术，它研究的是因变量（目标）和自变量（预测器）之间的关系。这种技术通常用于<strong>预测分析、时间序列分析以及发现变量之间的因果关系</strong>。</p><h3 id="回归分析的步骤">回归分析的步骤</h3><ol><li>确定回归方程的解释变量和被解释变量</li><li>确定回归模型，建立回归方程</li><li>对回归方程进行各种验证</li><li>利用回归方程进行预测</li></ol><h2 id="一元线性回归模型">一元线性回归模型</h2><p>如果<strong>只有一个自变量x，并且因变量Y和自变量X之间的数量变化关系呈近似线性关系</strong>，就可以建立一元线性回归方程，根据自变量X的值预测Y的值，这就是一元线性回归预测。</p><p>如果因变量Y和自变量X之间呈线性相关，那就是说，对于自变量X的某一值 xi ，因变量Y对应的取值 yi 不是唯一确定的，而是有很多的可能取值，它们分布在一条直线的上下，这是因为Y还受除自变量以外的其他因素的影响。这些因素的影响大小和方向都是不确定的，通常用一个随机变量(记为ε)来表示，也称为随机扰动项。于是，Y和X之间的依存关系可表示为：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi>y</mi><mi>i</mi></msub><mo>=</mo><mi>α</mi><mo>+</mo><mi>β</mi><msub><mi>x</mi><mi>i</mi></msub><mo>+</mo><msub><mi>ϵ</mi><mi>i</mi></msub><mspace linebreak="newline"></mspace><mi>α</mi><mtext> — 截距、</mtext><mi>β</mi><mtext> — 斜率、</mtext><mi>ϵ</mi><mtext> — 误差项，反映除了</mtext><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mtext>以外的随机因素对</mtext><mi>y</mi><mtext>的影响</mtext></mrow><annotation encoding="application/x-tex">y_i=\alpha+\beta x_i+\epsilon_i\\\alpha\ — \ 截距、\beta \ —\ 斜率、\epsilon \ — \ 误差项，反映除了x,y以外的随机因素对y的影响</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6667em;vertical-align:-0.0833em;"></span><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.05278em;">β</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">ϵ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="mspace"> </span><span class="mord">—</span><span class="mspace"> </span><span class="mord cjk_fallback">截距、</span><span class="mord mathnormal" style="margin-right:0.05278em;">β</span><span class="mspace"> </span><span class="mord">—</span><span class="mspace"> </span><span class="mord cjk_fallback">斜率、</span><span class="mord mathnormal">ϵ</span><span class="mspace"> </span><span class="mord">—</span><span class="mspace"> </span><span class="mord cjk_fallback">误差项，反映除了</span><span class="mord mathnormal">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mord cjk_fallback">以外的随机因素对</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mord cjk_fallback">的影响</span></span></span></span></span></p><h3 id="一元线性回归方程">一元线性回归方程</h3><p>描述因变量y的期望值如何依赖于自变量x的方程称为回归方程：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>E</mi><mo stretchy="false">(</mo><msub><mi>y</mi><mi>i</mi></msub><mo stretchy="false">)</mo><mo>=</mo><mi>α</mi><mo>+</mo><mi>β</mi><msub><mi>x</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">E(y_i)=\alpha+\beta x_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6667em;vertical-align:-0.0833em;"></span><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.05278em;">β</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></span></p><ul><li>如果回归方程参数已知，对于一个给定的x的值，利用回归方程就能计算出y的期望值</li><li>用样本统计代替回归方程中的位置参数，就得得到估计回归方程，也称为回归直线</li></ul><h4 id="参数的最小二乘估计">参数的最小二乘估计</h4><p>对于回归直线，<strong>关键在于求解参数</strong>，常用高斯提出的最小二乘法，它是使得因变量的<strong>观察值y与估计值之间的离差平方和达到最小</strong>来求解。</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>Q</mi><mo>=</mo><mo>∑</mo><mo stretchy="false">(</mo><mi>y</mi><mo>−</mo><mover accent="true"><mi>y</mi><mo>^</mo></mover><msup><mo stretchy="false">)</mo><mn>2</mn></msup><mo>=</mo><mo>∑</mo><mo stretchy="false">(</mo><mi>y</mi><mo>−</mo><msub><mover accent="true"><mi>β</mi><mo>^</mo></mover><mn>0</mn></msub><mo>−</mo><msub><mover accent="true"><mi>β</mi><mo>^</mo></mover><mn>1</mn></msub><mi>x</mi><msup><mo stretchy="false">)</mo><mn>2</mn></msup></mrow><annotation encoding="application/x-tex">Q=\sum(y-\hat{y})^2=\sum(y-\hat\beta_0-\hat\beta_1x)^2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8778em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">Q</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.6em;vertical-align:-0.55em;"></span><span class="mop op-symbol large-op" style="position:relative;top:0em;">∑</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.1141em;vertical-align:-0.25em;"></span><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.6944em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.1944em;"><span class="mord">^</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.1944em;"><span></span></span></span></span></span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.6em;vertical-align:-0.55em;"></span><span class="mop op-symbol large-op" style="position:relative;top:0em;">∑</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.1523em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9579em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal" style="margin-right:0.05278em;">β</span></span><span style="top:-3.2634em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.1667em;"><span class="mord">^</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.1944em;"><span></span></span></span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0528em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.2079em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9579em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal" style="margin-right:0.05278em;">β</span></span><span style="top:-3.2634em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.1667em;"><span class="mord">^</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.1944em;"><span></span></span></span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0528em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathnormal">x</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span></span></p><p>经过对(3)式展开，对Q求极小值点（对其求偏导数(<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>β</mi><mn>0</mn></msub><mtext>和</mtext><msub><mi>β</mi><mn>1</mn></msub></mrow><annotation encoding="application/x-tex">\beta_0和\beta_1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05278em;">β</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0528em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord cjk_fallback">和</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05278em;">β</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0528em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>)），最终求解得到<strong>参数的求解公式</strong>：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mover accent="true"><mi>β</mi><mo>^</mo></mover><mn>1</mn></msub><mo>=</mo><mfrac><mrow><mi>n</mi><mo>∑</mo><mi>x</mi><mi>y</mi><mo>−</mo><mo>∑</mo><mi>x</mi><mo>∑</mo><mi>y</mi></mrow><mrow><mi>n</mi><mo>∑</mo><msup><mi>x</mi><mn>2</mn></msup><mo>−</mo><mo stretchy="false">(</mo><mo>∑</mo><mi>x</mi><msup><mo stretchy="false">)</mo><mn>2</mn></msup></mrow></mfrac><mspace linebreak="newline"></mspace><msub><mover accent="true"><mi>β</mi><mo>^</mo></mover><mn>0</mn></msub><mo>=</mo><mover accent="true"><mi>y</mi><mo stretchy="true">‾</mo></mover><mo>−</mo><msub><mover accent="true"><mi>β</mi><mo>^</mo></mover><mn>1</mn></msub><mover accent="true"><mi>x</mi><mo stretchy="true">‾</mo></mover></mrow><annotation encoding="application/x-tex">\hat\beta_1=\frac{n\sum xy-\sum x\sum y}{n\sum x^2-(\sum x)^2}\\\hat\beta_0=\overline y-\hat\beta_1\overline x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.1523em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9579em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal" style="margin-right:0.05278em;">β</span></span><span style="top:-3.2634em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.1667em;"><span class="mord">^</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.1944em;"><span></span></span></span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0528em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.363em;vertical-align:-0.936em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.427em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop op-symbol small-op" style="position:relative;top:0em;">∑</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7401em;"><span style="top:-2.989em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mopen">(</span><span class="mop op-symbol small-op" style="position:relative;top:0em;">∑</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">x</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7401em;"><span style="top:-2.989em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop op-symbol small-op" style="position:relative;top:0em;">∑</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">x</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mop op-symbol small-op" style="position:relative;top:0em;">∑</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop op-symbol small-op" style="position:relative;top:0em;">∑</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.936em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:1.1523em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9579em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal" style="margin-right:0.05278em;">β</span></span><span style="top:-3.2634em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.1667em;"><span class="mord">^</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.1944em;"><span></span></span></span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0528em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.825em;vertical-align:-0.1944em;"></span><span class="mord overline"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.6306em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span></span></span><span style="top:-3.5506em;"><span class="pstrut" style="height:3em;"></span><span class="overline-line" style="border-bottom-width:0.04em;"></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.1944em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.1523em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9579em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal" style="margin-right:0.05278em;">β</span></span><span style="top:-3.2634em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.1667em;"><span class="mord">^</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.1944em;"><span></span></span></span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0528em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord overline"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6306em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">x</span></span></span><span style="top:-3.5506em;"><span class="pstrut" style="height:3em;"></span><span class="overline-line" style="border-bottom-width:0.04em;"></span></span></span></span></span></span></span></span></span></span></p><h4 id="利用回归直线进行估计和预测">利用回归直线进行估计和预测</h4><ul><li>点估计：利用估计的回归方程，对于x的某个特定值求出y的一个估计值</li><li>区间估计：利用估计得到回归方程，对于x的一个特定值，求出y的一个估计值的区间</li></ul><h4 id="估计标准误差的计算">估计标准误差的计算</h4><p>为了<strong>度量回归方程的可靠性</strong>，通常计算估计的标准误差。它度量观察值回绕着回归直线的变化程度或分散程度。估计平均误差：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi>S</mi><mi>y</mi></msub><mo>=</mo><msqrt><mfrac><mrow><mo>∑</mo><mo stretchy="false">(</mo><mi>y</mi><mo>−</mo><mover accent="true"><mi>y</mi><mo>^</mo></mover><msup><mo stretchy="false">)</mo><mn>2</mn></msup></mrow><mrow><mi>n</mi><mo>−</mo><mn>2</mn></mrow></mfrac></msqrt></mrow><annotation encoding="application/x-tex">S_y=\sqrt{\frac{\sum(y-\hat y)^2}{n-2}}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9694em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.44em;vertical-align:-0.7773em;"></span><span class="mord sqrt"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.6627em;"><span class="svg-align" style="top:-4.4em;"><span class="pstrut" style="height:4.4em;"></span><span class="mord" style="padding-left:1em;"><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.427em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord">2</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mop op-symbol small-op" style="position:relative;top:0em;">∑</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.6944em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.1944em;"><span class="mord">^</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.1944em;"><span></span></span></span></span></span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7401em;"><span style="top:-2.989em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.7693em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span><span style="top:-3.6227em;"><span class="pstrut" style="height:4.4em;"></span><span class="hide-tail" style="min-width:1.02em;height:2.48em;"><svg xmlns="http://www.w3.org/2000/svg" width='400em' height='2.48em' viewBox='0 0 400000 2592' preserveAspectRatio='xMinYMin slice'><path d='M424,2478c-1.3,-0.7,-38.5,-172,-111.5,-514c-73,-342,-109.8,-513.3,-110.5,-514c0,-2,-10.7,14.3,-32,49c-4.7,7.3,-9.8,15.7,-15.5,25c-5.7,9.3,-9.8,16,-12.5,20s-5,7,-5,7c-4,-3.3,-8.3,-7.7,-13,-13s-13,-13,-13,-13s76,-122,76,-122s77,-121,77,-121s209,968,209,968c0,-2,84.7,-361.7,254,-1079c169.3,-717.3,254.7,-1077.7,256,-1081l0 -0c4,-6.7,10,-10,18,-10 H400000v40H1014.6s-87.3,378.7,-272.6,1166c-185.3,787.3,-279.3,1182.3,-282,1185c-2,6,-10,9,-24,9c-8,0,-12,-0.7,-12,-2z M1001 80h400000v40h-400000z'/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.7773em;"><span></span></span></span></span></span></span></span></span></span></p><ul><li>自由度为：n-2    （有两个不能改变的参数，有两个参数是用于生成估计方程的，因此不能使用）</li><li>估计标准差越大，则数据点围绕回归直线的分散程度越大，回归方程的代表性越小。</li><li>估计标准误差越小，则数据点围绕回归直线的分散程度越小，回归方程的代表性越大，即可靠性高。</li></ul><h3 id="回归直线的拟合信度">回归直线的拟合信度</h3><h4 id="置信区间估计-※">置信区间估计(※)</h4><p>置信区间估计是针对<strong>真实总体参数可能落在其中的一定范围内</strong>进行估计的过程。<strong>比如“95%的置信区间”意味着我们有95%的置信水平认为真实参数值位于该区间内。</strong></p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mover accent="true"><mi>y</mi><mo>^</mo></mover><mn>0</mn></msub><mo>±</mo><msub><mi>t</mi><mfrac><mi>α</mi><mn>2</mn></mfrac></msub><msub><mi>s</mi><mi>e</mi></msub><msqrt><mrow><mfrac><mn>1</mn><mi>n</mi></mfrac><mo>+</mo><mfrac><mrow><mo stretchy="false">(</mo><msub><mi>x</mi><mn>0</mn></msub><mo>−</mo><mover accent="true"><mi>x</mi><mo stretchy="true">‾</mo></mover><msup><mo stretchy="false">)</mo><mn>2</mn></msup></mrow><mrow><mo>∑</mo><mo stretchy="false">(</mo><mi>x</mi><mo>−</mo><mover accent="true"><mi>x</mi><mo stretchy="true">‾</mo></mover><msup><mo stretchy="false">)</mo><mn>2</mn></msup></mrow></mfrac></mrow></msqrt></mrow><annotation encoding="application/x-tex">\hat y_0\pm t_{\frac{\alpha}{2}}s_e\sqrt{\frac{1}{n}+\frac{(x_0-\overline x)^2}{\sum(x-\overline x)^2}}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.6944em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.1944em;"><span class="mord">^</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.1944em;"><span></span></span></span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">±</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:3.04em;vertical-align:-1.1606em;"></span><span class="mord"><span class="mord mathnormal">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3341em;"><span style="top:-2.85em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mopen nulldelimiter sizing reset-size3 size6"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.6915em;"><span style="top:-2.656em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span><span style="top:-3.2255em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line mtight" style="border-bottom-width:0.049em;"></span></span><span style="top:-3.384em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.0037em;">α</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.344em;"><span></span></span></span></span></span><span class="mclose nulldelimiter sizing reset-size3 size6"></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3908em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">e</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord sqrt"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8794em;"><span class="svg-align" style="top:-5em;"><span class="pstrut" style="height:5em;"></span><span class="mord" style="padding-left:1em;"><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3214em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">n</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.427em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mop op-symbol small-op" style="position:relative;top:0em;">∑</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord overline"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6306em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">x</span></span></span><span style="top:-3.5506em;"><span class="pstrut" style="height:3em;"></span><span class="overline-line" style="border-bottom-width:0.04em;"></span></span></span></span></span></span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7401em;"><span style="top:-2.989em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord overline"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6306em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">x</span></span></span><span style="top:-3.5506em;"><span class="pstrut" style="height:3em;"></span><span class="overline-line" style="border-bottom-width:0.04em;"></span></span></span></span></span></span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7401em;"><span style="top:-2.989em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.936em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span><span style="top:-3.8394em;"><span class="pstrut" style="height:5em;"></span><span class="hide-tail" style="min-width:1.02em;height:3.08em;"><svg xmlns="http://www.w3.org/2000/svg" width='400em' height='3.08em' viewBox='0 0 400000 3240' preserveAspectRatio='xMinYMin slice'><path d='M473,2793c339.3,-1799.3,509.3,-2700,510,-2702 l0 -0c3.3,-7.3,9.3,-11,18,-11 H400000v40H1017.7s-90.5,478,-276.2,1466c-185.7,988,-279.5,1483,-281.5,1485c-2,6,-10,9,-24,9c-8,0,-12,-0.7,-12,-2c0,-1.3,-5.3,-32,-16,-92c-50.7,-293.3,-119.7,-693.3,-207,-1200c0,-1.3,-5.3,8.7,-16,30c-10.7,21.3,-21.3,42.7,-32,64s-16,33,-16,33s-26,-26,-26,-26s76,-153,76,-153s77,-151,77,-151c0.7,0.7,35.7,202,105,604c67.3,400.7,102,602.7,104,606zM1001 80h400000v40H1017.7z'/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.1606em;"><span></span></span></span></span></span></span></span></span></span></p><p><strong>在1—α置信水平下预测区间</strong></p><p>1-α置信水平下预测区间是指在回归分析中，对于给定的自变量值，预测因变量的取值范围的估计。具体来说，对于给定的自变量值，预测区间包含了我们对因变量取值的不确定性，并给出了一个区间，<strong>我们有1-α的置信水平认为真实值位于该区间内</strong>。</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mover accent="true"><mi>y</mi><mo>^</mo></mover><mn>0</mn></msub><mo>±</mo><msub><mi>t</mi><mfrac><mi>α</mi><mn>2</mn></mfrac></msub><msub><mi>s</mi><mi>e</mi></msub><msqrt><mrow><mn>1</mn><mo>+</mo><mfrac><mn>1</mn><mi>n</mi></mfrac><mo>+</mo><mfrac><mrow><mo stretchy="false">(</mo><msub><mi>x</mi><mn>0</mn></msub><mo>−</mo><mover accent="true"><mi>x</mi><mo stretchy="true">‾</mo></mover><msup><mo stretchy="false">)</mo><mn>2</mn></msup></mrow><mrow><mo>∑</mo><mo stretchy="false">(</mo><mi>x</mi><mo>−</mo><mover accent="true"><mi>x</mi><mo stretchy="true">‾</mo></mover><msup><mo stretchy="false">)</mo><mn>2</mn></msup></mrow></mfrac></mrow></msqrt></mrow><annotation encoding="application/x-tex">\hat y_0\pm t_{\frac{\alpha}{2}}s_e\sqrt{1+\frac{1}{n}+\frac{(x_0-\overline x)^2}{\sum(x-\overline x)^2}}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.6944em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.1944em;"><span class="mord">^</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.1944em;"><span></span></span></span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">±</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:3.04em;vertical-align:-1.1606em;"></span><span class="mord"><span class="mord mathnormal">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3341em;"><span style="top:-2.85em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mopen nulldelimiter sizing reset-size3 size6"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.6915em;"><span style="top:-2.656em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span><span style="top:-3.2255em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line mtight" style="border-bottom-width:0.049em;"></span></span><span style="top:-3.384em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.0037em;">α</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.344em;"><span></span></span></span></span></span><span class="mclose nulldelimiter sizing reset-size3 size6"></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3908em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">e</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord sqrt"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8794em;"><span class="svg-align" style="top:-5em;"><span class="pstrut" style="height:5em;"></span><span class="mord" style="padding-left:1em;"><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3214em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">n</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.427em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mop op-symbol small-op" style="position:relative;top:0em;">∑</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord overline"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6306em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">x</span></span></span><span style="top:-3.5506em;"><span class="pstrut" style="height:3em;"></span><span class="overline-line" style="border-bottom-width:0.04em;"></span></span></span></span></span></span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7401em;"><span style="top:-2.989em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord overline"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6306em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">x</span></span></span><span style="top:-3.5506em;"><span class="pstrut" style="height:3em;"></span><span class="overline-line" style="border-bottom-width:0.04em;"></span></span></span></span></span></span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7401em;"><span style="top:-2.989em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.936em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span><span style="top:-3.8394em;"><span class="pstrut" style="height:5em;"></span><span class="hide-tail" style="min-width:1.02em;height:3.08em;"><svg xmlns="http://www.w3.org/2000/svg" width='400em' height='3.08em' viewBox='0 0 400000 3240' preserveAspectRatio='xMinYMin slice'><path d='M473,2793c339.3,-1799.3,509.3,-2700,510,-2702 l0 -0c3.3,-7.3,9.3,-11,18,-11 H400000v40H1017.7s-90.5,478,-276.2,1466c-185.7,988,-279.5,1483,-281.5,1485c-2,6,-10,9,-24,9c-8,0,-12,-0.7,-12,-2c0,-1.3,-5.3,-32,-16,-92c-50.7,-293.3,-119.7,-693.3,-207,-1200c0,-1.3,-5.3,8.7,-16,30c-10.7,21.3,-21.3,42.7,-32,64s-16,33,-16,33s-26,-26,-26,-26s76,-153,76,-153s77,-151,77,-151c0.7,0.7,35.7,202,105,604c67.3,400.7,102,602.7,104,606zM1001 80h400000v40H1017.7z'/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.1606em;"><span></span></span></span></span></span></span></span></span></span></p><p><strong>影响区间宽度的因素</strong></p><ul><li><p>置信水平（1-α），区间宽度随着置信水平的增大而增大。</p></li><li><p>数据的离散程度Se，区间宽度随离散程度的增大而增大。</p></li><li><p>样本容量，区间宽度随样本容量的增大而减小。</p></li><li><p>X0与X均值之间的差异，随差异程度的增大而增大。</p></li></ul><h3 id="回归直线的拟合优度">回归直线的拟合优度</h3><h4 id="概念">概念</h4><ol><li>离差：每个观测值与平均值之间的差异</li><li>变差：每个观测值与回归直线的差异</li></ol><p>回归直线与各个观测点的接近程度称为回归直线对数据的拟合优度。</p><h4 id="相关指标">相关指标</h4><ul><li>总平方和（SST）：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>S</mi><mi>S</mi><mi>T</mi><mo>=</mo><mo>∑</mo><mo stretchy="false">(</mo><mi>y</mi><mo>−</mo><mover accent="true"><mi>y</mi><mo stretchy="true">‾</mo></mover><msup><mo stretchy="false">)</mo><mn>2</mn></msup></mrow><annotation encoding="application/x-tex">SST=\sum(y-\overline y)^2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">SST</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mop op-symbol small-op" style="position:relative;top:0em;">∑</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.0641em;vertical-align:-0.25em;"></span><span class="mord overline"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.6306em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span></span></span><span style="top:-3.5506em;"><span class="pstrut" style="height:3em;"></span><span class="overline-line" style="border-bottom-width:0.04em;"></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.1944em;"><span></span></span></span></span></span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span></li><li>回归平方和（SSR）：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>S</mi><mi>S</mi><mi>R</mi><mo>=</mo><mo>∑</mo><mo stretchy="false">(</mo><mover accent="true"><mi>y</mi><mo>^</mo></mover><mo>−</mo><mover accent="true"><mi>y</mi><mo stretchy="true">‾</mo></mover><msup><mo stretchy="false">)</mo><mn>2</mn></msup></mrow><annotation encoding="application/x-tex">SSR=\sum(\hat y-\overline y)^2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.00773em;">SSR</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mop op-symbol small-op" style="position:relative;top:0em;">∑</span><span class="mopen">(</span><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.6944em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.1944em;"><span class="mord">^</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.1944em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.0641em;vertical-align:-0.25em;"></span><span class="mord overline"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.6306em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span></span></span><span style="top:-3.5506em;"><span class="pstrut" style="height:3em;"></span><span class="overline-line" style="border-bottom-width:0.04em;"></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.1944em;"><span></span></span></span></span></span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span></li><li>残差平方和（SSE）：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>S</mi><mi>S</mi><mi>E</mi><mo>=</mo><mo>∑</mo><mo stretchy="false">(</mo><mi>y</mi><mo>−</mo><mover accent="true"><mi>y</mi><mo>^</mo></mover><msup><mo stretchy="false">)</mo><mn>2</mn></msup></mrow><annotation encoding="application/x-tex">SSE=\sum(y-\hat y)^2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">SSE</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mop op-symbol small-op" style="position:relative;top:0em;">∑</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.0641em;vertical-align:-0.25em;"></span><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.6944em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.1944em;"><span class="mord">^</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.1944em;"><span></span></span></span></span></span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span></li></ul><p>总平方和可以分解为残差平方和、回归平方和两部分：SST=SSE+SSR</p><ul><li>SST反映因变量的n个观察值与其均值的<strong>总离差</strong></li><li>SSR反映了y的总变差中，由于x与y的线性关系引起的y变化的部分</li><li>SSE反映了除了x对y的线性影响以外的其他因素对y变差的作用，<strong>是不能用回归直线解释的y的变差部分</strong></li></ul><h4 id="判定系数">判定系数</h4><p><strong>回归平方和占总平方的比例</strong>，用<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>R</mi><mn>2</mn></msup></mrow><annotation encoding="application/x-tex">R^2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8141em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span>表示，其值在0到1之间，被称为<strong>决定系数</strong>，用于判定回归直线的拟合优度。</p><ul><li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>R</mi><mn>2</mn></msup><mo>=</mo><mn>0</mn></mrow><annotation encoding="application/x-tex">R^2=0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8141em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">0</span></span></span></span>：说明y的变化与x无关，x完全无助于解释y的变差</li><li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>R</mi><mn>2</mn></msup><mo>=</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">R^2=1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8141em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span></span></span></span>：说明残差平方和为0（<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>y</mi><mtext>与</mtext><mover accent="true"><mi>y</mi><mo>^</mo></mover><mtext>相等</mtext></mrow><annotation encoding="application/x-tex">y与\hat y相等</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mord cjk_fallback">与</span><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.6944em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.1944em;"><span class="mord">^</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.1944em;"><span></span></span></span></span></span><span class="mord cjk_fallback">相等</span></span></span></span>），拟合是完全的，y的变化只与x有关</li></ul><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msup><mi>R</mi><mn>2</mn></msup><mo>=</mo><mfrac><mrow><mo>∑</mo><mo stretchy="false">(</mo><mover accent="true"><mi>y</mi><mo>^</mo></mover><mo>−</mo><mover accent="true"><mi>y</mi><mo stretchy="true">‾</mo></mover><msup><mo stretchy="false">)</mo><mn>2</mn></msup></mrow><mrow><mo>∑</mo><mo stretchy="false">(</mo><mi>y</mi><mo>−</mo><mover accent="true"><mi>y</mi><mo stretchy="true">‾</mo></mover><msup><mo stretchy="false">)</mo><mn>2</mn></msup></mrow></mfrac></mrow><annotation encoding="application/x-tex">R^2=\frac{\sum(\hat y-\overline y)^2}{\sum(y-\overline y)^2}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8641em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.4271em;vertical-align:-0.936em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.4911em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mop op-symbol small-op" style="position:relative;top:0em;">∑</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord overline"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.6306em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span></span></span><span style="top:-3.5506em;"><span class="pstrut" style="height:3em;"></span><span class="overline-line" style="border-bottom-width:0.04em;"></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.1944em;"><span></span></span></span></span></span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7401em;"><span style="top:-2.989em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mop op-symbol small-op" style="position:relative;top:0em;">∑</span><span class="mopen">(</span><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.6944em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.1944em;"><span class="mord">^</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.1944em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord overline"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.6306em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span></span></span><span style="top:-3.5506em;"><span class="pstrut" style="height:3em;"></span><span class="overline-line" style="border-bottom-width:0.04em;"></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.1944em;"><span></span></span></span></span></span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.936em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p><h4 id="显著性检验">显著性检验</h4><p>显著性检验的主要目的是检验估计方程是否真实或较好地反映x和y的关系。</p><p>根据样本数据拟合回归方程时，实际上就已经假定变量x与y之间存在着线性关系，并假定误差项是一个服从正态分布的随机变量，且具有相同的方差。但这些假设是否成立需要检验，显著性检验包括两方面：</p><ul><li>线性关系检验</li><li>回归系数检验</li></ul><p><strong>线性关系检验</strong></p><p>线性关系检验是<strong>检验自变量x和因变量y之间的线性关系是否显著</strong>，或者说，它们之间能否用一个线性模型来表示。将<strong>均方回归（MSR）同均方残差（MSE）加以比较</strong>，应用F检验来分析二者之间的差别是否显著。</p><ul><li>均方回归：回归平方和SSR除以相应的自由度（自变量个数k）</li><li>均方残差：残差平方和SSE除以相应的自由度（n-k-1）</li></ul><p>H0：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>β</mi><mn>1</mn><mo>=</mo><mn>0</mn></mrow><annotation encoding="application/x-tex">\beta1=0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.05278em;">β</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">0</span></span></span></span>所有回归系数与0无显著差异，y与全体x的线性关系不显著</p><p>计算检验统计量F：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>F</mi><mo>=</mo><mfrac><mrow><mi>S</mi><mi>S</mi><mi>R</mi><mi mathvariant="normal">/</mi><mn>1</mn></mrow><mrow><mi>S</mi><mi>S</mi><mi>E</mi><mi mathvariant="normal">/</mi><mi>n</mi><mo>−</mo><mn>2</mn></mrow></mfrac><mo>=</mo><mfrac><mrow><mi>M</mi><mi>S</mi><mi>R</mi></mrow><mrow><mi>M</mi><mi>S</mi><mi>E</mi></mrow></mfrac><mo>∼</mo><mi>F</mi><mo stretchy="false">(</mo><mn>1</mn><mo separator="true">,</mo><mi>n</mi><mo>−</mo><mn>1</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">F=\frac{SSR/1}{SSE/n-2}=\frac{MSR}{MSE}\sim F(1,n-1)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.363em;vertical-align:-0.936em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.427em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">SSE</span><span class="mord">/</span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord">2</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.00773em;">SSR</span><span class="mord">/1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.936em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.0463em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3603em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">MSE</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.00773em;">MSR</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">∼</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mopen">(</span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span></span></span></span></span></p><h4 id="回归系数检验">回归系数检验</h4><p>在回归分析中，我们估计了<strong>每个自变量的回归系数，表示自变量单位变化对因变量的影响</strong>。然而，这些估计值可能受到随机误差的影响，因此我们需要进行假设检验来确定这些估计值是否显著不等于零。</p><p>回归系数检验通常基于 t 检验或 F 检验。通过计算 t 统计量或 F 统计量，我们可以得出结论，<strong>判断回归系数是否显著不为零。如果回归系数显著不为零，我们可以认为自变量对因变量有显著影响；如果回归系数不显著，我们则无法得出自变量对因变量的显著影响结论。</strong></p><p>回归系数显著性检验的目的是通过检验回归系数β的值与0是否有显著性差异，来判断Y与X之间是否有显著性线性关系。若β=0，则总体回归方程中不含X项（即Y不随X变动而变动），因此变量Y与X之间不存在线性关系；若β≠0，说明变量Y与X之间存在显著的线性关系。</p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20230903081413397.png" alt="image-20230903081413397" style="zoom:67%;" /><p>计算检验的统计量：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>t</mi><mo>=</mo><mfrac><mrow><msub><mover accent="true"><mi>β</mi><mo>^</mo></mover><mn>1</mn></msub><mo>−</mo><msub><mi>β</mi><mn>1</mn></msub></mrow><msub><mi>s</mi><msub><mover accent="true"><mi>β</mi><mo>^</mo></mover><mn>1</mn></msub></msub></mfrac><mo>∼</mo><mi>t</mi><mo stretchy="false">(</mo><mi>n</mi><mo>−</mo><mn>2</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">t=\frac{\hat\beta_1-\beta_1}{s_{\hat\beta_1}}\sim t(n-2)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6151em;"></span><span class="mord mathnormal">t</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.7827em;vertical-align:-1.1478em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.6349em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3743em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord accent mtight"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9579em;"><span style="top:-2.7em;"><span class="pstrut" style="height:2.7em;"></span><span class="mord mathnormal mtight" style="margin-right:0.05278em;">β</span></span><span style="top:-2.9634em;"><span class="pstrut" style="height:2.7em;"></span><span class="accent-body" style="left:-0.1667em;"><span class="mord mtight">^</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.1944em;"><span></span></span></span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3173em;"><span style="top:-2.357em;margin-left:-0.0528em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.4618em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9579em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal" style="margin-right:0.05278em;">β</span></span><span style="top:-3.2634em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.1667em;"><span class="mord">^</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.1944em;"><span></span></span></span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0528em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05278em;">β</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0528em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.1478em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">∼</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">t</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">2</span><span class="mclose">)</span></span></span></span></span></p><h4 id="两个检验的区别">两个检验的区别</h4><p>线性关系的检验是检验自变量和因变量是否可以用线性来表达。</p><p>回归系数检验的作用是评估<strong>回归模型</strong>中的<strong>自变量对因变量的影响是否显著</strong>。它帮助我们确定哪些自变量对因变量有统计上显著的影响，以及它们的影响方向和大小。</p><ul><li>在一元线性回归中，自变量只有一个，线性关系检验与回归系数检验是等价的</li><li>多元回归分析中，这两种检验的意义是不同的。线性关系检验只能用来检验总体回归关系的显著性，而回归系数检验可以对各个回归系数分别进行检验</li></ul><h2 id="多元线性回归">多元线性回归</h2><p>经常遇到某一现象的发展变化取决于几个影响因素的情况，也就是一个因变量和几个自变量有依存关系的情况，这时需用多元线性回归分析。</p><ul><li>多元线性回归分析预测法：通过对两及其以上的自变量与一个因变量的相关性分析，建立预测模型进行预测和控制的方法</li></ul><p><strong>多元线性回归预测模型一般式：</strong></p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>y</mi><mo>=</mo><mi>A</mi><mo>+</mo><msub><mi>B</mi><mn>1</mn></msub><msub><mi>x</mi><mn>1</mn></msub><mo>+</mo><msub><mi>B</mi><mn>2</mn></msub><msub><mi>x</mi><mn>2</mn></msub><mo>+</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo>+</mo><msub><mi>B</mi><mi>n</mi></msub><msub><mi>x</mi><mi>n</mi></msub><mo>+</mo><mi>ϵ</mi></mrow><annotation encoding="application/x-tex">y=A+B_1x_1+B_2x_2+...+B_nx_n+\epsilon</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.7667em;vertical-align:-0.0833em;"></span><span class="mord mathnormal">A</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0502em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0502em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6667em;vertical-align:-0.0833em;"></span><span class="mord">...</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0502em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">ϵ</span></span></span></span></span></p><h4 id="调整的多重判定系数">调整的多重判定系数</h4><p>用样本容量n和自变量个数k去修正<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>R</mi><mn>2</mn></msup></mrow><annotation encoding="application/x-tex">R^2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8141em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span>得到：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msubsup><mi>R</mi><mi>α</mi><mn>2</mn></msubsup><mo>=</mo><mn>1</mn><mo>−</mo><mo stretchy="false">(</mo><mn>1</mn><mo>−</mo><msup><mi>R</mi><mn>2</mn></msup><mo stretchy="false">)</mo><mo>×</mo><mfrac><mrow><mi>n</mi><mo>−</mo><mn>1</mn></mrow><mrow><mi>n</mi><mo>−</mo><mi>k</mi><mo>−</mo><mn>1</mn></mrow></mfrac></mrow><annotation encoding="application/x-tex">R_{\alpha}^2=1-(1-R^2)\times\frac{n-1}{n-k-1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.1111em;vertical-align:-0.247em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8641em;"><span style="top:-2.453em;margin-left:-0.0077em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.0037em;">α</span></span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.7278em;vertical-align:-0.0833em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.1141em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:2.0908em;vertical-align:-0.7693em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3214em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord">1</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.7693em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p><p><strong>避免增加自变量而高估<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>R</mi><mn>2</mn></msup></mrow><annotation encoding="application/x-tex">R^2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8141em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span></strong></p><blockquote><p>多元线性回归的其他分析，比如置信度区间分析、回归系数检验、显著性检验等等，都与一元线性回归类似，这里不再赘述。</p></blockquote><h2 id="曲线线性回归分析">曲线线性回归分析</h2><p>直线关系是两变量间最简单的一种关系，曲线回归分析的基本任务是通过两个相关变量x与y的实际观测数据建立曲线回归方程，以揭示x与y间的曲线联系的形式。</p><p>曲线分析最困难和首要工作时确定自变量与因变量的曲线关系的类型，曲线回归分析的基本过程：</p><ol><li>将x或y进行变量转换</li><li>对新变量进行直线回归分析、建立直线回归方程并进行显著性检验和区间估计</li><li>将新变量还原为原变量，由新变量的直线回归方程</li></ol><p>由于曲线回归模型种类繁多，所以没有通用的回归方程可直接使用。但是对于某些特殊的回归模型，可以通过变量代换、取对数等方法对其线性化，然后使用标准方程求解参数，再将参数带回原方程就是所求。</p><h4 id="多重共线性">多重共线性</h4><p>回归模型中两个或两个以上自变量彼此相关的现象。</p><p>多重共线性带来的问题：</p><ul><li>回归系数估计值不稳定性增强</li><li>回归系数假设检验结果不显著等</li></ul><h4 id="多重共线性检验的主要方法">多重共线性检验的主要方法</h4><ul><li>容忍度</li><li>方差膨胀因子（VIF）</li></ul><p><strong>容忍度</strong></p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>T</mi><mi>o</mi><msub><mi>l</mi><mi>i</mi></msub><mo>=</mo><mn>1</mn><mo>−</mo><msubsup><mi>R</mi><mi>i</mi><mn>2</mn></msubsup></mrow><annotation encoding="application/x-tex">Tol_i=1-R_i^2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8444em;vertical-align:-0.15em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="mord mathnormal">o</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0197em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.7278em;vertical-align:-0.0833em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.1111em;vertical-align:-0.247em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8641em;"><span style="top:-2.453em;margin-left:-0.0077em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span></span></span></span></span></p><p>Ri是<strong>解释变量xi与方程中其他解释变量间的负相关系数</strong>。容忍度在0-1之间，越接近0，表示多重共线性越强。</p><p><strong>方差膨胀因子</strong></p><p>方差膨胀因子是容忍度的倒数：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>V</mi><mi>I</mi><msub><mi>F</mi><mi>i</mi></msub><mo>=</mo><mfrac><mn>1</mn><mrow><mn>1</mn><mo>−</mo><msubsup><mi>R</mi><mi>i</mi><mn>2</mn></msubsup></mrow></mfrac></mrow><annotation encoding="application/x-tex">VIF_i=\frac{1}{1-R_i^2}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord mathnormal" style="margin-right:0.22222em;">V</span><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.2843em;vertical-align:-0.9629em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3214em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.7959em;"><span style="top:-2.4231em;margin-left:-0.0077em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-3.0448em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2769em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9629em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p><p>VIF越大，**特别是&gt;=10，**说明解释变量xi与其他解释变量有严重的多重共线性；</p><p>而VIF越接近1，表明解释变量xi和其他变量的多重共线性越弱。</p><h2 id="Python工具包介绍">Python工具包介绍</h2><h3 id="Statsmodels">Statsmodels</h3><p>用于做统计分析，提供用于提供<strong>用于估计许多不同统计模型</strong>以及<strong>进行统计测试和统计数据探索</strong>的类和函数。 每个估算器都有一个广泛的结果统计列表。 对照现有的统计数据包对结果进行测试，以确保它们是正确的。</p><h4 id="一元线性回归">一元线性回归</h4><p>statsmodels.OLS 是 statsmodels.regression.linear_model 的函数，有 4个参数 (endog, exog, missing, hasconst)。</p><p>第一个参数 endog 是回归模型中的因变量 y(t), 是1-d array 数据类型。</p><p>第二个输入 exog 是自变量 x0(t),x1(t),…,xm(t)，是(m+1)-d array 数据类型。<br>　　需要注意的是，statsmodels.OLS 的回归模型没有常数项，其形式为：<br>　　y = B<em>X + e = β0</em>x0 + β1*x1 + e, x0 = [1,…1]<br>　　而之前导入的数据 (yTest，x1) 并不包含 x0，因此需要在 x1 左侧增加一列截距列 x0=[1,…1]，将自变量矩阵转换为 X = (x0, x1)。函数 sm.add_constant() 实现的就是这个功能。<br>　　参数 missing 用于数据检查, hasconst 用于检查常量，一般情况不需要。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">import</span> statsmodels.api <span class="keyword">as</span> sm</span><br><span class="line"><span class="keyword">from</span> statsmodels.sandbox.regression.predstd <span class="keyword">import</span> wls_prediction_std</span><br><span class="line"><span class="comment"># 一元线性回归</span></span><br><span class="line"><span class="comment"># 1.产生样本测试数据</span></span><br><span class="line">nsample = <span class="number">100</span>  <span class="comment"># 样本容量</span></span><br><span class="line">x1 = np.linspace(<span class="number">0</span>, <span class="number">10</span>, nsample)  <span class="comment"># 产生步长为10的，0到100的线性随机数</span></span><br><span class="line">yTrue = <span class="number">2.36</span> + <span class="number">1.58</span> * x1  <span class="comment"># 模拟真实的直线</span></span><br><span class="line">e = np.random.normal(size=nsample)  <span class="comment"># 产生正态分布的误差</span></span><br><span class="line">ySample = yTrue + e  <span class="comment"># 产生模型数据</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 2.进行线性回归拟合</span></span><br><span class="line">X = sm.add_constant(x1)  <span class="comment"># 添加截距列</span></span><br><span class="line">model = sm.OLS(ySample, X)  <span class="comment"># 建立最小二乘模型</span></span><br><span class="line">results = model.fit()  <span class="comment"># 返回拟合结果</span></span><br><span class="line">yFit = results.fittedvalues  <span class="comment"># 获取拟合y值</span></span><br><span class="line">prstd, ivLow, ivUp = wls_prediction_std(results)  <span class="comment"># 返回标准差和置信区间</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 3.数据展示</span></span><br><span class="line"><span class="built_in">print</span>(results.summary())</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;\nOLS model: Y = b0 + b1*x&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;Parameters: &quot;</span>, results.params)  <span class="comment"># 输出拟合的系数</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 4.画图：原始数据点、拟合曲线、置信区间</span></span><br><span class="line">fig, ax = plt.subplots(figsize=(<span class="number">10</span>, <span class="number">8</span>))</span><br><span class="line">ax.plot(x1, ySample, <span class="string">&#x27;o&#x27;</span>, label=<span class="string">&quot;data&quot;</span>)  <span class="comment"># 原始数据</span></span><br><span class="line">ax.plot(X, yFit, <span class="string">&#x27;r-&#x27;</span>, label=<span class="string">&quot;OLS&quot;</span>)  <span class="comment"># 拟合曲线</span></span><br><span class="line">ax.plot(x1, ivLow, <span class="string">&#x27;--&#x27;</span>, color=<span class="string">&#x27;orange&#x27;</span>, label=<span class="string">&#x27;lowConf&#x27;</span>)  <span class="comment"># 95%置信区间下限</span></span><br><span class="line">ax.plot(x1, ivUp, <span class="string">&#x27;--&#x27;</span>, color=<span class="string">&#x27;orange&#x27;</span>, label=<span class="string">&#x27;upConf&#x27;</span>)  <span class="comment"># 95%置信区间上限</span></span><br><span class="line">ax.legend(loc=<span class="string">&#x27;best&#x27;</span>)  <span class="comment"># 显示图例</span></span><br><span class="line">plt.title(<span class="string">&quot;OLS liner regression&quot;</span>)</span><br><span class="line">plt.show()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 高阶回归</span></span><br><span class="line"><span class="comment"># y = 5 + 2X + 3X^2</span></span><br><span class="line">nsample = <span class="number">50</span></span><br><span class="line">x = np.linspace(<span class="number">0</span>, <span class="number">10</span>, nsample)</span><br><span class="line">X = np.column_stack((x, x**<span class="number">2</span>))</span><br><span class="line">X = sm.add_constant(X)  <span class="comment"># 至此，X第一列为1，第二列为X，第三列为X^2</span></span><br><span class="line"><span class="comment"># 构造beta</span></span><br><span class="line">beta = np.array([<span class="number">5</span>, <span class="number">2</span>, <span class="number">3</span>])</span><br><span class="line"><span class="comment"># 误差，正态分布</span></span><br><span class="line">e = np.random.normal(size=nsample)</span><br><span class="line"><span class="comment"># 产生y的真实值</span></span><br><span class="line">y = np.dot(X, beta)+e</span><br><span class="line"><span class="comment"># 最小二乘法</span></span><br><span class="line">model = sm.OLS(y, X)</span><br><span class="line">results = model.fit()</span><br><span class="line">results.params</span><br><span class="line"><span class="built_in">print</span>(results.summary())</span><br><span class="line"><span class="comment"># 画图展示结果</span></span><br><span class="line">y_fitted = results.fittedvalues</span><br><span class="line">fig, ax = plt.subplots(figsize=(<span class="number">8</span>, <span class="number">6</span>))</span><br><span class="line">ax.plot(x, y, <span class="string">&#x27;o&#x27;</span>, label=<span class="string">&#x27;data&#x27;</span>)</span><br><span class="line">ax.plot(x, y_fitted, <span class="string">&#x27;r--&#x27;</span>, label=<span class="string">&#x27;OLS&#x27;</span>)</span><br><span class="line">ax.legend(loc=<span class="string">&#x27;best&#x27;</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><p>Statsmodels进行线性回归分析的输出结果非常丰富，results.summary()返回了回归分析的摘要。</p><p>摘要内容页非常丰富，这里着重讨论一些结果，在summary中间段落。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">==============================================================================</span><br><span class="line">                 coef    std err          t      P&gt;|t|      [<span class="number">0.025</span>      <span class="number">0.975</span>]</span><br><span class="line">------------------------------------------------------------------------------</span><br><span class="line">const          <span class="number">2.4669</span>      <span class="number">0.186</span>     <span class="number">13.230</span>      <span class="number">0.000</span>       <span class="number">2.097</span>       <span class="number">2.837</span></span><br><span class="line">x1             <span class="number">1.5883</span>      <span class="number">0.032</span>     <span class="number">49.304</span>      <span class="number">0.000</span>       <span class="number">1.524</span>       <span class="number">1.652</span></span><br><span class="line">==============================================================================</span><br></pre></td></tr></table></figure><ul><li>coef：回归系数，即模型参数<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>β</mi><mn>0</mn></msub><mo separator="true">,</mo><msub><mi>β</mi><mn>1</mn></msub></mrow><annotation encoding="application/x-tex">\beta_0,\beta_1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05278em;">β</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0528em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05278em;">β</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0528em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>…的估计值</li><li>std err：标准差，方差的算数平方和，反映样本数据值与回归模型估计值之间的平均差异程度</li><li>t：t统计量，等于回归系数除以标准差，<strong>用于对每个回归系数分别进行显著性检验</strong>，如果某个自变量x的影响不明显，意味着可以从模型中剔除这个变量</li><li>P>\abs{t}：t检验的P值(Prob(t-Stastic))，反映每个自变量与因变量的<strong>相关性假设的显著性</strong>，如果 p&lt;0.05，可以理解为在0.05的显著性水平下变量xi与y存在回归关系，具有显著性</li><li><strong>[0.025,0.975]</strong>：回归系数的置信区间（Confidence interval）的下限、上限，某个回归系数的置信区间以 95%的置信度包含该回归系数 。注意并不是指样本数据落在这一区间的概率为 95%</li><li><strong>R-squared</strong>：R方判定系数（Coefficient of determination），表示所有自变量对因变量的联合的影响程度，用于度量回归方程拟合度的好坏，越接近于 1说明拟合程度越好</li><li><strong>F-statistic</strong>：F 统计量（F-Statistic），用于对整体回归方程进行显著性检验，检验所有自变量在整体上对因变量的影响是否显著</li></ul><h4 id="高阶回归-一元高阶回归，2阶以上">高阶回归(一元高阶回归，2阶以上)</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 高阶回归</span></span><br><span class="line"><span class="comment"># y = 5 + 2X + 3X^2</span></span><br><span class="line">nsample = <span class="number">50</span></span><br><span class="line">x = np.linspace(<span class="number">0</span>, <span class="number">10</span>, nsample)</span><br><span class="line">X = np.column_stack((x, x**<span class="number">2</span>))</span><br><span class="line">X = sm.add_constant(X)  <span class="comment"># 至此，X第一列为1，第二列为X，第三列为X^2</span></span><br><span class="line"><span class="comment"># 构造beta</span></span><br><span class="line">beta = np.array([<span class="number">5</span>, <span class="number">2</span>, <span class="number">3</span>])</span><br><span class="line"><span class="comment"># 误差。正态分布</span></span><br><span class="line">e = np.random.normal(size=nsample)</span><br><span class="line"><span class="comment"># 产生y的真实值</span></span><br><span class="line">y = np.dot(X, beta)+e</span><br><span class="line"><span class="comment"># 最小二乘法</span></span><br><span class="line">model = sm.OLS(y, X)</span><br><span class="line">results = model.fit()</span><br><span class="line">results.params</span><br><span class="line">results.summary()</span><br><span class="line"><span class="comment"># 画图展示结果</span></span><br><span class="line">y_fitted = results.fittedvalues</span><br><span class="line">fig, ax = plt.subplots(figsize=(<span class="number">8</span>, <span class="number">6</span>))</span><br><span class="line">ax.plot(x, y, <span class="string">&#x27;o&#x27;</span>, label=<span class="string">&#x27;data&#x27;</span>)</span><br><span class="line">ax.plot(x, y_fitted, <span class="string">&#x27;r--&#x27;</span>, label=<span class="string">&#x27;OLS&#x27;</span>)</span><br><span class="line">ax.legend(loc=<span class="string">&#x27;best&#x27;</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><h4 id="附录：回归结果的详细说明">附录：回归结果的详细说明</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">Dep.Variable: y 因变量</span><br><span class="line">Model：OLS 最小二乘模型</span><br><span class="line">Method: Least Squares 最小二乘</span><br><span class="line">No. Observations: 样本数据的数量</span><br><span class="line">Df Residuals：残差自由度(degree of freedom of residuals)</span><br><span class="line">Df Model：模型自由度(degree of freedom of model)</span><br><span class="line">Covariance Type：nonrobust 协方差阵的稳健性</span><br><span class="line">R-squared：R 判定系数</span><br><span class="line">Adj. R-squared: 修正的判定系数</span><br><span class="line">F-statistic： 统计检验 F 统计量</span><br><span class="line">Prob (F-statistic): F检验的 P值</span><br><span class="line">Log likelihood: 对数似然</span><br><span class="line"></span><br><span class="line">coef：自变量和常数项的系数，b1,b2,...bm,b0</span><br><span class="line">std err：系数估计的标准误差</span><br><span class="line">t：统计检验 t 统计量</span><br><span class="line">P&gt;|t|：t 检验的 P值</span><br><span class="line">[0.025, 0.975]：估计参数的 95%置信区间的下限和上限</span><br><span class="line">Omnibus：基于峰度和偏度进行数据正态性的检验</span><br><span class="line">Prob(Omnibus)：基于峰度和偏度进行数据正态性的检验概率</span><br><span class="line">Durbin-Watson：检验残差中是否存在自相关</span><br><span class="line">Skewness：偏度，反映数据分布的非对称程度</span><br><span class="line">Kurtosis：峰度，反映数据分布陡峭或平滑程度</span><br><span class="line">Jarque-Bera(JB)：基于峰度和偏度对数据正态性的检验</span><br><span class="line">Prob(JB)：Jarque-Bera(JB)检验的 P值。</span><br><span class="line">Cond. No.：检验变量之间是否存在精确相关关系或高度相关关系。</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 数学建模 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
            <tag> 数学建模 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>数据降维</title>
      <link href="/2023/08/20/%E3%80%90%E6%95%B0%E5%AD%A6%E5%BB%BA%E6%A8%A1%E3%80%91%E9%80%9A%E7%94%A8%E6%8A%80%E8%83%BD-3-%E6%95%B0%E6%8D%AE%E9%99%8D%E7%BB%B4/"/>
      <url>/2023/08/20/%E3%80%90%E6%95%B0%E5%AD%A6%E5%BB%BA%E6%A8%A1%E3%80%91%E9%80%9A%E7%94%A8%E6%8A%80%E8%83%BD-3-%E6%95%B0%E6%8D%AE%E9%99%8D%E7%BB%B4/</url>
      
        <content type="html"><![CDATA[<h1>数据降维</h1><h2 id="简介">简介</h2><p>主成分分析（Principal Components Analysis, PCA）是一种数据降维技术，通过正交变换将一组高位变量转换为较少的彼此独立、互不相关的变量，从而减少数据的维数。</p><h2 id="数据的降维">数据的降维</h2><h3 id="为什么要进行数据的降维">为什么要进行数据的降维</h3><p>数据降维的好处是以略低的精度换取问题的优化。</p><p>由于各种变量都是对同一事物的反映，<strong>变量之间经常会存在一定的相关性</strong>，这就造成大量的信息重复、重叠，有时会淹没甚至扭曲事物的真正特征与内在规律。我们希望数据分析中涉及的变量较少，而得到的信息量又较多。这就需要<strong>通过降维方法，在减少需要分析的变量数量的同时，尽可能多的保留众多原始变量所包含的有效信息</strong>。</p><p>变量之间具有一定的相关关系，意味着相关变量所反映的信息有一定程度的重叠，就有可能用较少的综合指标聚合、反映众多原始变量所包含的全部信息或主要信息。</p><p>因此，需要<strong>研究特征变量之间的相关性、相似性</strong>，以减少特征变量的数量，便于分析影响系统的主要因素。</p><p>降维方法可以从事物之间错综复杂的关系中找出一些主要因素，从而能有效利用大量统计数据进行定量分析，解释变量之间的内在关系，得到对事物特征及其发展规律的一些深层次的启发。</p><h3 id="常用的降维思想和方法">常用的降维思想和方法</h3><p>降维的数学本质是将高维的特征空间映射到低纬的特征空间，有线性映射和非线性映射两类。</p><p>线性映射方法主要有：主成分分析（PCA）和线性判别函数（LDA）</p><ul><li>主成分分析：按照均方误差损失最小化原则，将高维原始空间变换到低维特征向量空间。</li><li>线性判别函数：向线性判别超平面的法向量上投影，使得区分度最大，高内聚、低耦合</li></ul><p>非线性映射方法主要有：</p><ul><li><p>基于核的非线性降维，将高纬向量的内积抓换位低纬的核函数表示</p><ol><li>核主成分分析（KPCA）</li><li>核线性判别函数（KLDA）</li></ol></li><li><p>二维化和张量化，将数据映射到二维空间上</p><ol><li>二维主成分分析（2DPCA）</li><li>二维线性判别分析（2DLDA）</li><li>二维典型相关分析（2DCCA）</li></ol></li><li><p>流形学习方法，从高维采样数据中恢复低纬流形结构并求出相应的嵌入映射</p><ol><li>等距映射（ISOMap）</li><li>拉普拉斯特征映射（LE）</li><li>局部线性嵌入（LDD）</li></ol></li></ul><p><strong>总之，非线性映射的思想和算法与神经网络是相通的</strong></p><h3 id="SKlearn中的降维分析方法">SKlearn中的降维分析方法</h3><ul><li>主成分分析：<ol><li>decomposition.PCA　　主成分分析</li><li>decomposition.IncrementalPCA　　增量主成分分析</li><li>decomposition.KernelPCA　　核主成分分析</li><li>decomposition.SparsePCA　　稀疏主成分分析</li><li>decomposition.MiniBatchSparsePCA　　小批量稀疏主成分分析</li><li>decomposition.TruncatedSVD　　截断奇异值分解</li></ol></li><li>字典学习<ol><li>decomposition.DictionaryLearning　　字典学习</li><li>decomposition.MiniBatchDictionaryLearning　　小批量字典学习</li><li>decomposition.dict_learning　　字典学习用于矩阵分解</li><li>decomposition.dict_learning_online　　在线字典学习用于矩阵分解</li></ol></li><li>因子分析<ol><li>decomposition.FactorAnalysis　　因子分析（FA）</li></ol></li><li>独立成分分析<ol><li>decomposition.FastICA　　快速独立成分分析</li></ol></li><li>非负矩阵分解<ol><li>decomposition.NMF　　非负矩阵分解</li></ol></li><li>隐式狄利克莱分布<ol><li>decomposition.LatentDirichletAllocation　　在线变分贝叶斯算法（隐式狄利克莱分布）</li></ol></li></ul><h2 id="主成分分析方法">主成分分析方法</h2><h3 id="基本原理">基本原理</h3><p>主成分分析是最基础数据降维方法，它只需要特征值分解，就可以对数据进行压缩、去噪，应用十分广泛。</p><p>主成分分析的目的是减少数据集变量数量，同时要保留尽可能多的特征信息；方法是<strong>通过正交变换将原始变量组转换为数量较少的彼此独立的特征变量</strong>，从而减少数据集的维数。</p><p>主成分分析方法的思想是，将高维特征（n维）映射到低维空间（k维）上，新的低维特征是在原有的高维特征基础上<strong>通过线性组合而重构</strong>的，并具有相互正交的特性，即为主成分。</p><p>通过正交变换构造彼此正交的新的特征向量，这些特征向量组成了新的特征空间。将特征向量按特征值排序后，<strong>样本数据集中所包含的全部方差，大部分就包含在前几个特征向量中，其后的特征向量所含的方差很小</strong>。<strong>因此，可以只保留前 k个特征向量，而忽略其它的特征向量，实现对数据特征的降维处理</strong>。</p><h3 id="特点">特点</h3><p>主成分分析方法得到的主成分变量具有几个特点：</p><ol><li>每个主成分变量都是原始变量的线性组合</li><li>主成分的数目大大少于原始变量的数目</li><li>主成分保留了原始变量的绝大多数信息</li><li>各主成分变量之间彼此相互独立</li></ol><h3 id="算法步骤">算法步骤</h3><p>主成分分析的基本步骤是：</p><p>对原始数据归一化处理后求<strong>协方差矩阵</strong>，再<strong>对协方差矩阵求特征向量和特征值</strong>；对特征向量按特征值大小排序后，依次选取特征向量，直到选择的特征向量的方差占比满足要求为止。</p><p>算法的基本流程：</p><ul><li>（1）归一化处理，数据减去平均值；</li><li>（2）通过特征值分解，计算协方差矩阵；</li><li>（3）计算协方差矩阵的特征值和特征向量；</li><li>（4）将特征值从大到小排序；</li><li>（5）依次选取特征值最大的<em>k</em>个特征向量作为主成分，直到其累计方差贡献率达到要求；</li><li>（6）将原始数据映射到选取的主成分空间，得到降维后的数据。</li></ul><p>在算法实现的过程中，SKlearn 工具包针对实际问题的特殊性，又发展了各种改进算法，例如：</p><ul><li>增量主成分分析：针对大型数据集，为了解决内存限制问题，将数据分成多批，通过增量方式逐步调用主成分分析算法，最终完成整个数据集的降维。</li><li>核主成分分析：针对线性不可分的数据集，使用非线性的核函数把样本空间映射到线性可分的高维空间，然后在这个高维空间进行主成分分析。</li><li>稀疏主成分分析：针对主成分分析结果解释性弱的问题，通过提取最能重建数据的稀疏分量， 凸显主成分中的主要组成部分，容易解释哪些原始变量导致了样本之间的差异。</li></ul><h4 id="优点和缺点">优点和缺点</h4><p>主成分分析法的优点：</p><ol><li>仅以方差衡量信息量，不受数据集以外的因素影响；</li><li>各主成分之间正交，可消除原始数据各变量之间的相互影响；</li><li>方法简单，易于实现；</li></ol><p>缺点：</p><ol><li>各个主成分的含义具有模糊，解释性弱，通常只有信息量而无实际含义；</li><li><strong>在样本非正态分布时得到的主成分不是最优的</strong>，因此特殊情况下方差小的成分也可能含有重要信息；</li></ol><h2 id="SKlearn中的主成分分析（PCA）方法">SKlearn中的主成分分析（PCA）方法</h2><h3 id="PCA算法decomposition-PCA">PCA算法decomposition.PCA</h3><p>sklearn.decomposition.PCA类是PCA算法的具体实现。</p><p>官网介绍详见：</p><p><a href="https://scikit-learn.org/stable/modules/decomposition.html#principal-component-analysis-pca">https://scikit-learn.org/stable/modules/decomposition.html#principal-component-analysis-pca</a></p><p><em>sklearn.decomposition.PCA(n_components=None, copy=True, whiten=False)</em></p><blockquote><p>class sklearn.decomposition.PCA(n_components=None, *, copy=True, whiten=False, svd_solver=‘auto’, tol=0.0, iterated_power=‘auto’, random_state=None)</p></blockquote><h4 id="主要参数">主要参数</h4><ul><li><strong>n_components: int,float</strong>　　<strong>n 为正整数，指保留主成分的维数；n 为 (0,1] 范围的实数时，表示主成分的方差和所占的最小阈值。</strong></li><li><strong>whiten：bool, default=False</strong>　　是否对降维后的主成分变量进行归一化。默认值 False。</li><li>svd_solver：{‘auto’, ‘full’, ‘arpack’, ‘randomized’}　　指定奇异值分解SVD的算法。‘full’ 调用 scipy库的 SVD；'arpack’调用scipy库的 sparse SVD；‘randomized’ SKlearn的SVD，<strong>适用于数据量大、变量维度多、主成分维数低的场景。默认值 ‘auto’</strong>。</li></ul><h4 id="主要属性">主要属性</h4><ul><li><strong>components_：</strong> 　　方差最大的 n-components 个主成分</li><li><strong>explained_variance_：</strong>　　各个主成分的方差值</li><li><strong>explained_variance_ratio_：</strong>　　各个主成分的方差值占主成分方差和的比例</li></ul><h4 id="主要方法-函数">主要方法/函数</h4><ul><li><strong>fit(X,y=None)</strong>　　表示用数据 X 训练PCA模型<br>fit() 是scikit-learn中的通用方法，实现训练、拟合的步骤。PCA是无监督学习，y=None。</li><li><strong>fit_transform(X)</strong>　　表示用数据 X 训练PCA模型，并返回降维后的数据</li><li><strong>transform(X)</strong>　　将数据 X 转换成降维后的数据，用训练好的 PCA模型对新的数据集进行降维。</li><li><strong>inverse_transform()</strong>　　将降维后的数据转换成原始数据</li></ul><h4 id="decomposition-PCA使用例程">decomposition.PCA使用例程</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> sklearn.decomposition <span class="keyword">import</span> PCA  <span class="comment"># 导入 sklearn.decomposition.PCA 类</span></span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np  <span class="comment"># Youcans， XUPT</span></span><br><span class="line"></span><br><span class="line">X = np.array([[-<span class="number">1</span>, -<span class="number">1</span>], [-<span class="number">2</span>, -<span class="number">1</span>], [-<span class="number">3</span>, -<span class="number">2</span>], [<span class="number">1</span>, <span class="number">1</span>], [<span class="number">2</span>, <span class="number">1</span>], [<span class="number">3</span>, <span class="number">2</span>]])</span><br><span class="line">modelPCA = PCA(n_components=<span class="number">2</span>)  <span class="comment"># 建立模型，设定保留主成分数 K=2</span></span><br><span class="line">modelPCA.fit(X)  <span class="comment"># 用数据集 X 训练 模型 modelPCA</span></span><br><span class="line"><span class="built_in">print</span>(modelPCA.n_components_)  <span class="comment"># 返回 PCA 模型保留的主成份个数</span></span><br><span class="line"><span class="comment"># 2</span></span><br><span class="line"><span class="built_in">print</span>(modelPCA.explained_variance_ratio_)  <span class="comment"># 返回 PCA 模型各主成份占比</span></span><br><span class="line"><span class="comment"># [0.9924 0.0075]  # print 显示结果</span></span><br><span class="line"><span class="built_in">print</span>(modelPCA.singular_values_) <span class="comment"># 返回 PCA 模型各主成份的奇异值</span></span><br><span class="line"><span class="comment"># [6.3006 0.5498]  # print 显示分类结果</span></span><br><span class="line"></span><br><span class="line">X = np.array([[-<span class="number">1</span>, -<span class="number">1</span>], [-<span class="number">2</span>, -<span class="number">1</span>], [-<span class="number">3</span>, -<span class="number">2</span>], [<span class="number">1</span>, <span class="number">1</span>], [<span class="number">2</span>, <span class="number">1</span>], [<span class="number">3</span>, <span class="number">2</span>]])</span><br><span class="line">modelPCA2 = PCA(n_components=<span class="number">0.9</span>) <span class="comment"># 建立模型，设定主成份方差占比 0.9</span></span><br><span class="line"><span class="comment"># 用数据集 X 训练 模型 modelPCA2，并返回降维后的数据</span></span><br><span class="line">Xtrans = modelPCA2.fit_transform(X)</span><br><span class="line"><span class="built_in">print</span>(modelPCA2.n_components_)  <span class="comment"># 返回 PCA 模型保留的主成份个数</span></span><br><span class="line"><span class="comment"># 1</span></span><br><span class="line"><span class="built_in">print</span>(modelPCA2.explained_variance_ratio_)  <span class="comment"># 返回 PCA 模型各主成份占比</span></span><br><span class="line"><span class="comment"># [0.9924]  # print 显示结果</span></span><br><span class="line"><span class="built_in">print</span>(modelPCA2.singular_values_)  <span class="comment"># 返回 PCA 模型各主成份占比</span></span><br><span class="line"><span class="comment"># [6.3006]  # print 显示结果</span></span><br><span class="line"><span class="built_in">print</span>(Xtrans)  <span class="comment"># 返回降维后的数据 Xtrans</span></span><br><span class="line"><span class="comment"># [[1.3834], [2.2219], [3.6053], [-1.3834], [-2.2219], [-3.6053]]</span></span><br><span class="line"><span class="comment"># = 关注 Youcans，分享原创系列 https://blog.csdn.net/youcans =</span></span><br></pre></td></tr></table></figure><p>注意：建立模型时，PCA(n_components=2) 中的 n_components为正整数，表示设定保留的主成份维数为 2；PCA(n_components=0.9) 中的 n_components 为 (0,1] 的小数，表示并不直接设定保留的主成份维数，而是设定保留的主成份应满足其方差和占比 &gt;0.9。</p><h3 id="改进算法：增量主成分分析（decomposition-IncrementalPCA）">改进算法：增量主成分分析（decomposition.IncrementalPCA）</h3><p>详细见CSDN博客：<a href="https://blog.csdn.net/youcans/article/details/116662562">https://blog.csdn.net/youcans/article/details/116662562</a></p><h3 id="改进算法：核主成分分析（decomposition-KernelPCA）">改进算法：核主成分分析（decomposition.KernelPCA）</h3><p>对于线性不可分的数据集，使用非线性的核函数可以把样本空间映射到线性可分的高维空间，然后在这个高维空间进行主成分分析。</p><p>本例程使用了SKlearn内置的数据集.datasets.oad_iris，并给出了PCA算法与三种核函数的KernelPCA算法的对比。不同算法的降维后映射到二维平面的结果有差异，进一步的讨论已经超出本文的内容。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Demo of sklearn.decomposition.KernelPCA</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> sklearn.datasets <span class="keyword">import</span> load_iris  <span class="comment"># Youcans， XUPT</span></span><br><span class="line"><span class="keyword">from</span> sklearn.decomposition <span class="keyword">import</span> KernelPCA, PCA</span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"></span><br><span class="line">X, y = load_iris(return_X_y=<span class="literal">True</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">type</span>(X))  <span class="comment"># &lt;class &#x27;numpy.ndarray&#x27;&gt;</span></span><br><span class="line"></span><br><span class="line">modelPCA = PCA(n_components=<span class="number">2</span>)  <span class="comment"># 建立模型，设定保留主成分数 K=2</span></span><br><span class="line">Xpca = modelPCA.fit_transform(X)  <span class="comment"># 用数据集 X 训练 模型 modelKPCA</span></span><br><span class="line"></span><br><span class="line">modelKpcaP = KernelPCA(n_components=<span class="number">2</span>, kernel=<span class="string">&#x27;poly&#x27;</span>) <span class="comment"># 建立模型，核函数：多项式</span></span><br><span class="line">XkpcaP = modelKpcaP.fit_transform(X)  <span class="comment"># 用数据集 X 训练 模型 modelKPCA</span></span><br><span class="line"></span><br><span class="line">modelKpcaR = KernelPCA(n_components=<span class="number">2</span>, kernel=<span class="string">&#x27;rbf&#x27;</span>) <span class="comment"># 建立模型，核函数：径向基函数</span></span><br><span class="line">XkpcaR = modelKpcaR.fit_transform(X)  <span class="comment"># 用数据集 X 训练 模型 modelKPCA</span></span><br><span class="line"></span><br><span class="line">modelKpcaS = KernelPCA(n_components=<span class="number">2</span>, kernel=<span class="string">&#x27;cosine&#x27;</span>) <span class="comment"># 建立模型，核函数：余弦函数</span></span><br><span class="line">XkpcaS = modelKpcaS.fit_transform(X)  <span class="comment"># 用数据集 X 训练 模型 modelKPCA</span></span><br><span class="line"></span><br><span class="line">fig = plt.figure(figsize=(<span class="number">8</span>,<span class="number">6</span>))</span><br><span class="line">ax1 = fig.add_subplot(<span class="number">2</span>,<span class="number">2</span>,<span class="number">1</span>)</span><br><span class="line">ax2 = fig.add_subplot(<span class="number">2</span>,<span class="number">2</span>,<span class="number">2</span>)</span><br><span class="line">ax3 = fig.add_subplot(<span class="number">2</span>,<span class="number">2</span>,<span class="number">3</span>)</span><br><span class="line">ax4 = fig.add_subplot(<span class="number">2</span>,<span class="number">2</span>,<span class="number">4</span>)</span><br><span class="line"><span class="keyword">for</span> label <span class="keyword">in</span> np.unique(y):</span><br><span class="line">    position = y == label</span><br><span class="line">    ax1.scatter(Xpca[position, <span class="number">0</span>], Xpca[position, <span class="number">1</span>], label=<span class="string">&#x27;target=%d&#x27;</span> % label)</span><br><span class="line">    ax1.set_title(<span class="string">&#x27;PCA&#x27;</span>)</span><br><span class="line">    ax2.scatter(XkpcaP[position, <span class="number">0</span>], XkpcaP[position, <span class="number">1</span>], label=<span class="string">&#x27;target=%d&#x27;</span> % label)</span><br><span class="line">    ax2.set_title(<span class="string">&#x27;kernel= Poly&#x27;</span>)</span><br><span class="line">    ax3.scatter(XkpcaR[position, <span class="number">0</span>], XkpcaR[position, <span class="number">1</span>], label=<span class="string">&#x27;target=%d&#x27;</span> % label)</span><br><span class="line">    ax3.set_title(<span class="string">&#x27;kernel= Rbf&#x27;</span>)</span><br><span class="line">    ax4.scatter(XkpcaS[position, <span class="number">0</span>], XkpcaS[position, <span class="number">1</span>], label=<span class="string">&#x27;target=%d&#x27;</span> % label)</span><br><span class="line">    ax4.set_title(<span class="string">&#x27;kernel= Cosine&#x27;</span>)</span><br><span class="line">plt.suptitle(<span class="string">&quot;KernalPCA (Youcans,XUPT)&quot;</span>)</span><br><span class="line">plt.show()</span><br><span class="line"><span class="comment"># = 关注 Youcans，分享原创系列 https://blog.csdn.net/youcans =</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 数学建模 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
            <tag> 数学建模 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>数据可视化</title>
      <link href="/2023/08/19/%E3%80%90%E6%95%B0%E5%AD%A6%E5%BB%BA%E6%A8%A1%E3%80%91%E9%80%9A%E7%94%A8%E6%8A%80%E8%83%BD-2-%E6%95%B0%E6%8D%AE%E5%8F%AF%E8%A7%86%E5%8C%96/"/>
      <url>/2023/08/19/%E3%80%90%E6%95%B0%E5%AD%A6%E5%BB%BA%E6%A8%A1%E3%80%91%E9%80%9A%E7%94%A8%E6%8A%80%E8%83%BD-2-%E6%95%B0%E6%8D%AE%E5%8F%AF%E8%A7%86%E5%8C%96/</url>
      
        <content type="html"><![CDATA[<h1>数据可视化</h1><h2 id="前言">前言</h2><p>Python中数据可视化的包很多，最简单易学的就是matplotlib，而且很多库也是基于matplotlib进行二次开发的。本文会不断更新学到的可视化工具包以及相关的使用技巧。</p><h2 id="Seaborn绘图工具包">Seaborn绘图工具包</h2><p>Seaborn是在matplotlib上构建的，<strong>支持Scipy和Statamodels的统计模型</strong>可视化，可以实现：</p><ul><li>赏心悦目的内置主题以及颜色主题</li><li>展示和比较一维变量、二维变量以及各个变量的分布情况</li><li>可视化   线性回归模型中的独立变量和关联变量</li><li>可视化   时间序列，展示不确定性</li><li>复杂的可视化，如在分割区域制图</li></ul><p><strong>Seaborn 绘图工具包以数据可视化为中心来挖掘与理解数据，本身就带有一定的统计回归功能，而且简单好用，特别适合进行定性分析、初步评价。</strong></p><p>常用的Seaborn图形：</p><ul><li>带拟合直线的直方图(displot)</li><li>箱线图(boxplot)</li><li>散点图(scatterplot)</li><li>回归图(regplot)</li></ul><p>实际上，这些图形用 StatsModels Graphics、Matplotlib 也可以绘制，估计任何绘图包都可以实现。那么，为什么还要推荐 Seaborn 工具包，把这些图归入 Seaborn 的实例呢？我们来看看实现的例程就明白了：简单，便捷，舒服。不需要数据准备和变换处理，直接调用变量数据，自带回归功能；不需要复杂的参数设置，直接给出舒服的图形，自带图形风格设计。</p><h4 id="多元回归案例分析">多元回归案例分析</h4><p><strong>问题描述</strong></p><p>数据文件中收集了 30个月本公司牙膏销售量、价格、广告费用及同期的市场均价。<br>　　（1）分析牙膏销售量与价格、广告投入之间的关系，建立数学模型；<br>　　（2）估计所建立数学模型的参数，进行统计分析；<br>　　（3）利用拟合模型，预测在不同价格和广告费用下的牙膏销售量。</p><ul><li>本问题及数据来自：姜启源、谢金星，数学模型（第 3版），高等教育出版社。</li></ul><p><strong>问题的分析过程</strong></p><ol><li>找特征变量，由于本题直接给出了特征变量——销售价格、市场均价、广告费…</li><li>分析特征变量对目标变量的影响，选择能够影响目标变量的特征变量，或者对特征变量进行变换（取对数、平方等等）</li><li>根据(2)选择的特征变量进行线性回归</li></ol><p><strong>数据分析处理</strong></p><ol><li><p>观察数据分布特征</p><p>本案例的数据量比较小，数据完整规范，实际上并不需要进行数据探索和数据清洗，不过可以看一下数据的分布特征。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> seaborn <span class="keyword">as</span> sns</span><br><span class="line"><span class="comment">#数据探索：分布特征</span></span><br><span class="line">sns.histplot(df[<span class="string">&quot;price&quot;</span>].tolist(),</span><br><span class="line">             ax=axes[<span class="number">0</span>, <span class="number">0</span>], kde=<span class="literal">True</span>)</span><br><span class="line">sns.histplot(df[<span class="string">&quot;average&quot;</span>].tolist(),</span><br><span class="line">             ax=axes[<span class="number">0</span>, <span class="number">1</span>], kde=<span class="literal">True</span>)</span><br><span class="line">sns.histplot(df[<span class="string">&quot;advertise&quot;</span>].tolist(),</span><br><span class="line">             ax=axes[<span class="number">1</span>, <span class="number">0</span>], kde=<span class="literal">True</span>)</span><br><span class="line">sns.histplot(df[<span class="string">&quot;difference&quot;</span>].tolist(),</span><br><span class="line">             ax=axes[<span class="number">1</span>, <span class="number">1</span>], kde=<span class="literal">True</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure></li><li><p>观察数据间的相关性</p><p>既然将所有特征变量都作为自变量直接进行线性回归不科学，就要先对每个自变量和因变量的关系进行考察。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">fig2, axes = plt.subplots(<span class="number">2</span>, <span class="number">2</span>, figsize=(<span class="number">10</span>, <span class="number">8</span>))</span><br><span class="line">sns.regplot(x=df[<span class="string">&#x27;price&#x27;</span>], y=df[<span class="string">&#x27;sales&#x27;</span>], ax=axes[<span class="number">0</span>, <span class="number">0</span>])</span><br><span class="line">sns.regplot(x=df[<span class="string">&#x27;average&#x27;</span>], y=df[<span class="string">&#x27;sales&#x27;</span>], ax=axes[<span class="number">0</span>, <span class="number">1</span>])</span><br><span class="line">sns.regplot(x=df[<span class="string">&#x27;advertise&#x27;</span>], y=df[<span class="string">&#x27;sales&#x27;</span>], ax=axes[<span class="number">1</span>, <span class="number">0</span>])</span><br><span class="line">sns.regplot(x=df[<span class="string">&#x27;difference&#x27;</span>], y=df[<span class="string">&#x27;sales&#x27;</span>], ax=axes[<span class="number">1</span>, <span class="number">1</span>])</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure></li><li><p>通过相关性图发现sales-price和average的数据点很分散，与回归直线差距太大，相关性很小。</p><p>sales-advertise，sales-difference的线性度较高，因此可以把advertise和difference作为自变量进行建模。</p></li><li><p>模拟与拟合</p><ul><li>模型1：选择价格差，广告费作为自变量进行线性回归</li><li>模型2：选择价格差，广告费以及广告费的平方作为自变量进行高阶回归</li></ul></li><li><p>代码实现：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Seaborn工具包绘图，它是在Matplotlib上构建的，支持Scipy和Statamodels的统计建模可视化</span></span><br><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> seaborn <span class="keyword">as</span> sns</span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">import</span> statsmodels.api <span class="keyword">as</span> sm</span><br><span class="line"><span class="keyword">from</span> statsmodels.sandbox.regression.predstd <span class="keyword">import</span> wls_prediction_std</span><br><span class="line">filePath = <span class="string">&#x27;./data.txt&#x27;</span></span><br><span class="line">df = pd.read_table(filePath, sep=<span class="string">&quot; &quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(df)</span><br><span class="line"><span class="comment"># 先看一下数据的分布特点，看起来都和正态分布有点差距，没看出什么特色</span></span><br><span class="line">fig1, axes = plt.subplots(<span class="number">2</span>, <span class="number">2</span>, figsize=(<span class="number">10</span>, <span class="number">8</span>))</span><br><span class="line">sns.histplot(df[<span class="string">&quot;price&quot;</span>].tolist(),</span><br><span class="line">             ax=axes[<span class="number">0</span>, <span class="number">0</span>], kde=<span class="literal">True</span>)</span><br><span class="line">sns.histplot(df[<span class="string">&quot;average&quot;</span>].tolist(),</span><br><span class="line">             ax=axes[<span class="number">0</span>, <span class="number">1</span>], kde=<span class="literal">True</span>)</span><br><span class="line">sns.histplot(df[<span class="string">&quot;advertise&quot;</span>].tolist(),</span><br><span class="line">             ax=axes[<span class="number">1</span>, <span class="number">0</span>], kde=<span class="literal">True</span>)</span><br><span class="line">sns.histplot(df[<span class="string">&quot;difference&quot;</span>].tolist(),</span><br><span class="line">             ax=axes[<span class="number">1</span>, <span class="number">1</span>], kde=<span class="literal">True</span>)</span><br><span class="line">plt.show()</span><br><span class="line"><span class="comment"># 分析各个变量与Y的相关性</span></span><br><span class="line">fig2, axes = plt.subplots(<span class="number">2</span>, <span class="number">2</span>, figsize=(<span class="number">10</span>, <span class="number">8</span>))</span><br><span class="line">sns.regplot(x=df[<span class="string">&#x27;price&#x27;</span>], y=df[<span class="string">&#x27;sales&#x27;</span>], ax=axes[<span class="number">0</span>, <span class="number">0</span>])</span><br><span class="line">sns.regplot(x=df[<span class="string">&#x27;average&#x27;</span>], y=df[<span class="string">&#x27;sales&#x27;</span>], ax=axes[<span class="number">0</span>, <span class="number">1</span>])</span><br><span class="line">sns.regplot(x=df[<span class="string">&#x27;advertise&#x27;</span>], y=df[<span class="string">&#x27;sales&#x27;</span>], ax=axes[<span class="number">1</span>, <span class="number">0</span>])</span><br><span class="line">sns.regplot(x=df[<span class="string">&#x27;difference&#x27;</span>], y=df[<span class="string">&#x27;sales&#x27;</span>], ax=axes[<span class="number">1</span>, <span class="number">1</span>])</span><br><span class="line">plt.show()</span><br><span class="line"><span class="comment"># 进行回归</span></span><br><span class="line">y = df[<span class="string">&#x27;sales&#x27;</span>]</span><br><span class="line">x0 = np.ones(df.shape[<span class="number">0</span>])</span><br><span class="line">x1 = df[<span class="string">&#x27;price&#x27;</span>]</span><br><span class="line">x2 = df[<span class="string">&#x27;average&#x27;</span>]</span><br><span class="line">x3 = df[<span class="string">&#x27;advertise&#x27;</span>]</span><br><span class="line">x4 = df[<span class="string">&#x27;difference&#x27;</span>]</span><br><span class="line">x5 = x3**<span class="number">2</span></span><br><span class="line">x6 = x1*x2  <span class="comment"># 考察两个变量的相互作用</span></span><br><span class="line"><span class="comment"># model1: Y = b0 + b1*x1 + b2*x2 + ... + e</span></span><br><span class="line">X1 = np.column_stack((x0, x1, x2, x3, x4))</span><br><span class="line">Model1 = sm.OLS(y, X1)</span><br><span class="line">result1 = Model1.fit()</span><br><span class="line">yFit1 = result1.fittedvalues</span><br><span class="line">prstd, ivlow, ivup = wls_prediction_std(result1)  <span class="comment"># 置信度区间</span></span><br><span class="line"><span class="built_in">print</span>(result1.summary())</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;\nModel1: Y = b0 + b1*x1 + b2*x2 + ... + e&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;\nParameters: &quot;</span>, result1.params)</span><br><span class="line"></span><br><span class="line"><span class="comment"># model2: Y = b0 + b1*x1 + b2*x2 + b3*x2**2 + e</span></span><br><span class="line">X2 = np.column_stack((x0, x3, x4, x5))</span><br><span class="line">Model2 = sm.OLS(X2, y)</span><br><span class="line">result2 = Model1.fit()</span><br><span class="line">yFit2 = result2.fittedvalues</span><br><span class="line">prestd2, ivlow2, ivup2 = wls_prediction_std(result2)</span><br><span class="line"><span class="built_in">print</span>(result2.summary())</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;\nModel2: Y = b0 + b1*x1 + b2*x2 + b3*x2**2 + e&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;\nParameters: &quot;</span>, result2.params)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 绘图</span></span><br><span class="line">fig, ax = plt.subplots(figsize=(<span class="number">10</span>, <span class="number">8</span>))</span><br><span class="line">ax.plot(<span class="built_in">range</span>(<span class="built_in">len</span>(y)), y, <span class="string">&#x27;b-&#x27;</span>, label=<span class="string">&quot;sample&quot;</span>)  <span class="comment"># 样本数据</span></span><br><span class="line">ax.plot(<span class="built_in">range</span>(<span class="built_in">len</span>(y)), yFit1, <span class="string">&#x27;r-&#x27;</span>, label=<span class="string">&quot;Fitting&quot;</span>)</span><br><span class="line">ax.plot(<span class="built_in">range</span>(<span class="built_in">len</span>(y)), ivup2, <span class="string">&#x27;--&#x27;</span>, color=<span class="string">&#x27;orange&#x27;</span>, label=<span class="string">&#x27;ConfR&#x27;</span>)</span><br><span class="line">ax.plot(<span class="built_in">range</span>(<span class="built_in">len</span>(y)), ivlow2, <span class="string">&#x27;--&#x27;</span>, color=<span class="string">&#x27;pink&#x27;</span>)</span><br><span class="line">ax.legend(loc=<span class="string">&quot;best&quot;</span>)</span><br><span class="line">plt.title(<span class="string">&quot;Regression analysis with sales of toothpaste&quot;</span>)</span><br><span class="line">plt.xlabel(<span class="string">&#x27;period&#x27;</span>)</span><br><span class="line">plt.ylabel(<span class="string">&#x27;sales&#x27;</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure></li></ol>]]></content>
      
      
      <categories>
          
          <category> 数学建模 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
            <tag> 数学建模 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>模型数据的准备</title>
      <link href="/2023/08/18/%E3%80%90%E6%95%B0%E5%AD%A6%E5%BB%BA%E6%A8%A1%E3%80%91%E9%80%9A%E7%94%A8%E6%8A%80%E8%83%BD-1-%E6%A8%A1%E5%9E%8B%E6%95%B0%E6%8D%AE%E7%9A%84%E5%87%86%E5%A4%87/"/>
      <url>/2023/08/18/%E3%80%90%E6%95%B0%E5%AD%A6%E5%BB%BA%E6%A8%A1%E3%80%91%E9%80%9A%E7%94%A8%E6%8A%80%E8%83%BD-1-%E6%A8%A1%E5%9E%8B%E6%95%B0%E6%8D%AE%E7%9A%84%E5%87%86%E5%A4%87/</url>
      
        <content type="html"><![CDATA[<h1>模型数据的准备</h1><h2 id="前言">前言</h2><p>数学建模中我们会遇到很多问题，会采用很多不同的模型，但是无论是回归分析问题还是优化类问题，我们得到的数据都是保存在文件中的，为了获取数据，我们首先就要从文件中读取数据，然后再对数据进行拆分、合并、转化等操作。</p><p>数据文件的格式很多，最常用的是.csv、.xls、.xlsx以及.txt，甚至sql数据库文件的读取。</p><h2 id="读取数据">读取数据</h2><h4 id="pandas工具包读取文件">pandas工具包读取文件</h4><ol><li><p>读取.csv文件</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">df = pd.read_csv(<span class="string">&quot;./example.csv&quot;</span>,engine=<span class="string">&quot;python&quot;</span>,encoding=<span class="string">&quot;utf_8_sig&quot;</span>)</span><br><span class="line"><span class="comment">#engine=&quot;python&quot;允许处理中文路径，encoding=&quot;utf_8_sig&quot;允许读取中文数据</span></span><br></pre></td></tr></table></figure></li><li><p>读取.xls文件</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">df = pd.read_excel(<span class="string">&quot;./example.xls&quot;</span>,sheetname=<span class="string">&quot;Sheet1&quot;</span>,header=<span class="number">0</span>,encoding=<span class="string">&quot;utf_8_sig&quot;</span>)</span><br><span class="line"><span class="comment">#header=None 表示首行为标题行，第一行是数据</span></span><br></pre></td></tr></table></figure></li><li><p>读取.txt文件</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">df = pd.read_table(<span class="string">&quot;./example.txt&quot;</span>,sep=<span class="string">&quot;\t&quot;</span>,header=<span class="literal">None</span>)</span><br><span class="line"><span class="comment">#sep表示分隔符，header=None表示无标题行，第一行是数据</span></span><br></pre></td></tr></table></figure></li></ol><h2 id="数据的拆分与合并">数据的拆分与合并</h2><p>有些模型的数据量比较大，比如统计回归、神经网络等等，必要时需要对文件进行拆分或者合并。用pandas处理也比较方便。</p><ol><li><p>将Excel文件分割为多个文件</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#将Excel文件分割为多个文件</span></span><br><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line">dfData = pd.read_excel(<span class="string">&quot;./example.xls&quot;</span>,sheetname=<span class="string">&#x27;Sheet1&#x27;</span>)</span><br><span class="line">nRow,nCol = dfData.shape<span class="comment">#获取数据的行列</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>,<span class="built_in">int</span>(nRow/<span class="number">10000</span>)+<span class="number">1</span>):</span><br><span class="line">    saveData = dfData.iloc[i*<span class="number">10000</span>+<span class="number">1</span>:(i+<span class="number">1</span>)*<span class="number">10000</span>+<span class="number">1</span>,:]<span class="comment">#每隔10000行分割一次</span></span><br><span class="line">    fileName = <span class="string">&#x27;./example_&#123;&#125;.xls&#x27;</span>.<span class="built_in">format</span>(<span class="built_in">str</span>(i))</span><br><span class="line">    saveData.to_excel(fileName,sheet_name=<span class="string">&#x27;Sheet1&#x27;</span>,index=<span class="literal">False</span>)</span><br></pre></td></tr></table></figure></li><li><p>将多个Exel合并成一个文件</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#将多个Excel文件合并成一个文件</span></span><br><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"><span class="comment">#多个Excel进行合并</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>,<span class="number">20</span>):</span><br><span class="line">    fileName=<span class="string">&#x27;./example_&#123;&#125;.xls&#x27;</span>.<span class="built_in">format</span>(<span class="built_in">str</span>(i))</span><br><span class="line">    dfNew = pd.read_excel(fileName)</span><br><span class="line">    dfData = pd.concat([dfData,dfNew])</span><br><span class="line">dfData.to_excel(<span class="string">&#x27;./example&#x27;</span>,index = <span class="literal">False</span>)</span><br></pre></td></tr></table></figure></li></ol><h2 id="数据预处理">数据预处理</h2><p>在实际工作中，在开始建立模型和拟合分析之前，还要对原始数据进行数据预处理（data preprocessing）。</p><p>主要包括：缺失值处理、重复数据处理、异常值处理、变量格式转换、训练集划分、数据的规范化、归一化等。</p><ol><li><p>缺失值处理</p><p>导入数据存在缺失值是经常发生的，最简单的处理方式是删除缺失数据行。使用pandas中的**.dropna()**删除含有缺失值的行或者列，也可对特定的列进行缺失值删除处理。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dfNew = dfData.dropna(axis = <span class="number">0</span>)<span class="comment">#删除含有缺失值的行</span></span><br></pre></td></tr></table></figure><p><strong>有时也会对缺失值进行插值填充，或者替换缺失值，详细见另外的章节：插值处理</strong></p></li><li><p>重复数据处理</p><p>对于重复数据，通常会删除重复行。使用pandas中的**.duplicated()<strong>可以查询重复数据的内容，使用</strong>.drop_duplicated()**可以删除重复数据，页可以对指定的数据列进行去重</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dfNew = dfData.drop_duplicates(inplace=<span class="literal">True</span>)<span class="comment">#删除重复的数据行</span></span><br></pre></td></tr></table></figure></li><li><p>异常值处理</p><p>数据中可能包括异常值，是指一个样本中的数值明显偏离样本集中其他样本的观测值，也称为离群点。</p><p><strong>异常值可以通过箱线图、正态分布图进行识别，也可以通过回归、聚类建模进行识别。</strong></p><p>箱线图技术是利用数据的分位数识别其中的异常点。箱线图分析具体详情见其他章节。笼统地说，就是通过观察箱型图，查看整体的异常情况，进而发现异常值。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dfData.boxplot()</span><br></pre></td></tr></table></figure><p>对于异常值通常不易直接删除，需要结合具体情况进行考虑和处理。使用pandas中的**.drop()**可以直接删除异常值数据行，或者使用判断条件来判定并且删除异常值数据行。</p></li></ol><h2 id="Python例程">Python例程</h2><h3 id="问题描述">问题描述</h3><p>数据文件中收集了 30个月本公司牙膏销售量、价格、广告费用及同期的市场均价。<br>　　（1）分析牙膏销售量与价格、广告投入之间的关系，建立数学模型；<br>　　（2）估计所建立数学模型的参数，进行统计分析；<br>　　（3）利用拟合模型，预测在不同价格和广告费用下的牙膏销售量。</p><p>需要说明的是，本文例程并不是问题最佳的求解方法和结果，只是使用该问题及数据示范读取数据文件和数据处理的方法。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> statsmodels.api <span class="keyword">as</span> sm</span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="comment"># 数据读取</span></span><br><span class="line">readPath = <span class="string">&#x27;./data.txt&#x27;</span></span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    <span class="keyword">if</span> readPath[-<span class="number">4</span>:] == <span class="string">&quot;.csv&quot;</span>:</span><br><span class="line">        dfOpenFile = pd.read_csv(readPath, header=<span class="number">0</span>, sep=<span class="string">&quot;,&quot;</span>)</span><br><span class="line">    <span class="keyword">elif</span> readPath[-<span class="number">4</span>:] == <span class="string">&quot;.xls&quot;</span> <span class="keyword">or</span> readPath[-<span class="number">5</span>:] == <span class="string">&quot;.xlsx&quot;</span>:</span><br><span class="line">        dfOpenFile = pd.read_excel(readPath, header=<span class="number">0</span>)</span><br><span class="line">    <span class="keyword">elif</span> readPath[-<span class="number">4</span>:] == <span class="string">&quot;.txt&quot;</span>:</span><br><span class="line">        dfOpenFile = pd.read_table(readPath, sep=<span class="string">&quot; &quot;</span>, header=<span class="number">0</span>)</span><br><span class="line"><span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;\n数据读取失败！\n&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 数据预处理</span></span><br><span class="line">dfData = dfOpenFile.dropna()  <span class="comment"># 删除缺失值</span></span><br><span class="line"><span class="built_in">print</span>(dfData.dtypes)</span><br><span class="line"><span class="built_in">print</span>(dfData.shape)  <span class="comment"># 查看行数和列数</span></span><br><span class="line"><span class="built_in">print</span>(dfData.columns)</span><br><span class="line"><span class="comment"># 准备建模</span></span><br><span class="line">y = dfData[<span class="string">&#x27;sales&#x27;</span>]  <span class="comment"># 根据因变量列名建立因变量数据集</span></span><br><span class="line">x0 = np.ones(dfData.shape[<span class="number">0</span>])</span><br><span class="line">x1 = dfData[<span class="string">&#x27;price&#x27;</span>]</span><br><span class="line">x2 = dfData[<span class="string">&#x27;average&#x27;</span>]</span><br><span class="line">x3 = dfData[<span class="string">&#x27;advertise&#x27;</span>]</span><br><span class="line">x4 = dfData[<span class="string">&#x27;difference&#x27;</span>]</span><br><span class="line">X = np.column_stack((x0, x1, x2, x3, x4))</span><br><span class="line"></span><br><span class="line"><span class="comment"># 建立模型与参数估计</span></span><br><span class="line">model = sm.OLS(y, X)  <span class="comment"># 建立最小二乘模型</span></span><br><span class="line">results = model.fit()  <span class="comment"># 获取拟合模型</span></span><br><span class="line">yFit = results.fittedvalues  <span class="comment"># 返回拟合值</span></span><br><span class="line"><span class="built_in">print</span>(results.summary)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;\nOLS model : Y = b0x0 + b1x1 + ... + bmxm&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;Parameters : &quot;</span>, results.params)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 画图</span></span><br><span class="line">fig, ax = plt.subplots(figsize=(<span class="number">10</span>, <span class="number">8</span>))</span><br><span class="line">ax.plot(<span class="built_in">range</span>(<span class="built_in">len</span>(y)), y, <span class="string">&#x27;bo&#x27;</span>, label=<span class="string">&quot;sample&quot;</span>)</span><br><span class="line">ax.plot(<span class="built_in">range</span>(<span class="built_in">len</span>(yFit)), yFit, <span class="string">&#x27;r--&#x27;</span>, label=<span class="string">&quot;predict&quot;</span>)</span><br><span class="line">ax.legend(loc=<span class="string">&quot;best&quot;</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 数学建模 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
            <tag> 数学建模 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>神经网络评价(未更新)</title>
      <link href="/2023/08/17/%E3%80%90%E6%95%B0%E5%AD%A6%E5%BB%BA%E6%A8%A1%E3%80%91%E8%AF%84%E4%BB%B7%E6%A8%A1%E5%9E%8B-7-%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C%E8%AF%84%E4%BB%B7%E6%A8%A1%E5%9E%8B/"/>
      <url>/2023/08/17/%E3%80%90%E6%95%B0%E5%AD%A6%E5%BB%BA%E6%A8%A1%E3%80%91%E8%AF%84%E4%BB%B7%E6%A8%A1%E5%9E%8B-7-%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C%E8%AF%84%E4%BB%B7%E6%A8%A1%E5%9E%8B/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      <categories>
          
          <category> 数学建模 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
            <tag> 数学建模 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>数据包络分析模型</title>
      <link href="/2023/08/16/%E3%80%90%E6%95%B0%E5%AD%A6%E5%BB%BA%E6%A8%A1%E3%80%91%E8%AF%84%E4%BB%B7%E6%A8%A1%E5%9E%8B-6-%E6%95%B0%E6%8D%AE%E5%8C%85%E7%BB%9C%E5%88%86%E6%9E%90%E6%A8%A1%E5%9E%8B/"/>
      <url>/2023/08/16/%E3%80%90%E6%95%B0%E5%AD%A6%E5%BB%BA%E6%A8%A1%E3%80%91%E8%AF%84%E4%BB%B7%E6%A8%A1%E5%9E%8B-6-%E6%95%B0%E6%8D%AE%E5%8C%85%E7%BB%9C%E5%88%86%E6%9E%90%E6%A8%A1%E5%9E%8B/</url>
      
        <content type="html"><![CDATA[<h1>数据包络分析模型</h1><h2 id="前言">前言</h2><p>数据包络分析（DEA）是运筹学和研究经济学生产边界的一种方法。一般用于测量一些决策部门的生产效率。在特定的产入产出问题的优化上有着很强的实用性，广泛用于实际生活中，在硕士、博士论文中比较常见。</p><h2 id="数据包络分析介绍">数据包络分析介绍</h2><h3 id="原理">原理</h3><p>数据包络分析有多种模型，包括CCR、BBC、交叉模型等等。其中最常用的是CCR、BBC模型。</p><p>基本概念</p><ol><li>决策单元（DMU）：决策单元是指可以将一定的输入转化为相应的产出的运营实体。即投入到产出的过程。</li><li>有效前沿：投入相对固定时对应的该生产要素所有组合下的最大产出</li><li>综合技术效益（overall efficiency, OE）：反映决策单元在一定（最优规模时）投入要素的生产效率，是对决策单元的资源配置能力、资源使用效率等多方面能力的综合衡量与评价</li><li>技术效益（technical efficiency, TE）：企业由于技术、管理等因素影响而产生的生产效益</li><li>规模效益(SE)：企业规模带来的生产效率的影响</li></ol><p><strong>CCR模式求得的是综合技术效益OE，BBC得到的是技术效益TE，通过OE=TE*SE求得规模效益。</strong></p><p>数据包络分析本质：通过综合分析决策单元的输入输出数据，得到每个决策单元效率的相对指标，然后将所有决策单元效率指标排序，确定相对有效的DMU，为管理者提供管理决策信息</p><h3 id="CCR模型（最常用）">CCR模型（最常用）</h3><p>CCR模型是最早也是最经典的DEA模型，通过“投入一定数量的生产要素，并产出一定数量的经济产品”的经济系统衡量各个单元的合理性和有效性。（投入导向模式——投入是固定的，产出尽可能多）</p><p>绩效评估是评估组织或个人如何以较少的资源获得较多的产出结果的多属性评估，也称之为成本效益分析。</p><h4 id="模型模板">模型模板</h4><p>假设数据可以分为n个DMU，m个输入（投入）变量，s个输出（产出）变量，向量<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>X</mi><mi>i</mi></msub><mo>=</mo><mo stretchy="false">(</mo><msub><mi>x</mi><mrow><mn>1</mn><mi>i</mi></mrow></msub><mo separator="true">,</mo><msub><mi>x</mi><mrow><mn>2</mn><mi>i</mi></mrow></msub><mo separator="true">,</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">X_i=(x_{1i},x_{2i},...)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0785em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">...</span><span class="mclose">)</span></span></span></span>表示第i个决策单元（样本）的输入变量，向量<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>Y</mi><mi>i</mi></msub><mo>=</mo><mo stretchy="false">(</mo><msub><mi>y</mi><mrow><mn>1</mn><mi>i</mi></mrow></msub><mo separator="true">,</mo><msub><mi>y</mi><mrow><mn>2</mn><mi>i</mi></mrow></msub><mo separator="true">,</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">Y_i=(y_{1i},y_{2i},...)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.2222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">...</span><span class="mclose">)</span></span></span></span>表示第i个决策单元的输出变量。</p><p><strong>定义决策单元效率j的效率评价指数：</strong></p><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>H</mi><mi>i</mi></msub><mo>=</mo><mfrac><mrow><msup><mi>U</mi><mi>T</mi></msup><msub><mi>Y</mi><mi>j</mi></msub></mrow><mrow><msup><mi>v</mi><mi>T</mi></msup><msub><mi>X</mi><mi>j</mi></msub></mrow></mfrac></mrow><annotation encoding="application/x-tex">H_i=\frac {U^TY_j}{v^TX_j}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.08125em;">H</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0813em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.6999em;vertical-align:-0.5492em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.1507em;"><span style="top:-2.6481em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7741em;"><span style="top:-2.786em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3281em;"><span style="top:-2.357em;margin-left:-0.0785em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2819em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.5073em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">U</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9191em;"><span style="top:-2.931em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.22222em;">Y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3281em;"><span style="top:-2.357em;margin-left:-0.2222em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2819em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.5492em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span>  其中i=1,2,3,…,n</p><p>其中<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>U</mi><mi>T</mi></msup><mo>=</mo><mo stretchy="false">(</mo><msub><mi>U</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>U</mi><mn>2</mn></msub><mo separator="true">,</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo separator="true">,</mo><msub><mi>U</mi><mi>m</mi></msub><mo stretchy="false">)</mo><mo separator="true">,</mo><msup><mi>V</mi><mi>T</mi></msup><mo>=</mo><mo stretchy="false">(</mo><msub><mi>v</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>v</mi><mn>2</mn></msub><mo separator="true">,</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo separator="true">,</mo><msub><mi>v</mi><mi>m</mi></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">U^T=(U_1,U_2,...,U_m), V^T=(v_1,v_2,...,v_m)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8413em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">U</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.0913em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">U</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.109em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">U</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.109em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">...</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">U</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.109em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">m</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">...</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">m</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>  分别是投入的权重向量和产出的权重向量</p><p><strong>评价决策单元j的效率数学模型（线性规划）：</strong></p><p>目标函数：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>m</mi><mi>a</mi><mi>x</mi><mfrac><mrow><msup><mi>u</mi><mi>T</mi></msup><msub><mi>Y</mi><mi>j</mi></msub></mrow><mrow><msup><mi>v</mi><mi>T</mi></msup><msub><mi>X</mi><mi>j</mi></msub></mrow></mfrac></mrow><annotation encoding="application/x-tex">max \frac {u^TY_j}{v^TX_j} </annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:2.4904em;vertical-align:-0.9721em;"></span><span class="mord mathnormal">ma</span><span class="mord mathnormal">x</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.5183em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7673em;"><span style="top:-2.989em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0785em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">u</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.2222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9721em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p><p>约束条件：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>s</mi><mi mathvariant="normal">.</mi><mi>t</mi><mi mathvariant="normal">.</mi><mrow><mo fence="true">{</mo><mtable rowspacing="0.36em" columnalign="left left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mfrac><mrow><msup><mi>u</mi><mi>t</mi></msup><msub><mi>Y</mi><mi>j</mi></msub></mrow><mrow><msup><mi>v</mi><mi>T</mi></msup><msub><mi>X</mi><mi>j</mi></msub></mrow></mfrac><mo>&lt;</mo><mo>=</mo><mn>1</mn></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><msup><mi>u</mi><mi>T</mi></msup><msub><mi>Y</mi><mi>j</mi></msub><mo>=</mo><mn>1</mn></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>u</mi><mo>&gt;</mo><mo>=</mo><mn>0</mn><mo separator="true">,</mo><mi>v</mi><mo>&gt;</mo><mo>=</mo><mn>0</mn></mrow></mstyle></mtd></mtr></mtable></mrow></mrow><annotation encoding="application/x-tex">s.t. \begin{cases}\frac{u^tY_j}{v^TX_j}&lt;=1 \\u^TY_j=1 \\u&gt;=0,v&gt;=0 \end{cases} </annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:4.5457em;vertical-align:-2.0229em;"></span><span class="mord mathnormal">s</span><span class="mord">.</span><span class="mord mathnormal">t</span><span class="mord">.</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.35em;"><span style="top:-2.2em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎩</span></span></span><span style="top:-2.192em;"><span class="pstrut" style="height:3.15em;"></span><span style="height:0.316em;width:0.8889em;"><svg xmlns="http://www.w3.org/2000/svg" width='0.8889em' height='0.316em' style='width:0.8889em' viewBox='0 0 888.89 316' preserveAspectRatio='xMinYMin'><path d='M384 0 H504 V316 H384z M384 0 H504 V316 H384z'/></svg></span></span><span style="top:-3.15em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎨</span></span></span><span style="top:-4.292em;"><span class="pstrut" style="height:3.15em;"></span><span style="height:0.316em;width:0.8889em;"><svg xmlns="http://www.w3.org/2000/svg" width='0.8889em' height='0.316em' style='width:0.8889em' viewBox='0 0 888.89 316' preserveAspectRatio='xMinYMin'><path d='M384 0 H504 V316 H384z M384 0 H504 V316 H384z'/></svg></span></span><span style="top:-4.6em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎧</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.85em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.5229em;"><span style="top:-4.5229em;"><span class="pstrut" style="height:3.1166em;"></span><span class="mord"><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.1166em;"><span style="top:-2.6481em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7741em;"><span style="top:-2.786em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3281em;"><span style="top:-2.357em;margin-left:-0.0785em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2819em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.5073em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight">u</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8703em;"><span style="top:-2.931em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight">t</span></span></span></span></span></span></span></span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.22222em;">Y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3281em;"><span style="top:-2.357em;margin-left:-0.2222em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2819em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.5492em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&lt;=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord">1</span></span></span><span style="top:-2.9657em;"><span class="pstrut" style="height:3.1166em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">u</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.2222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord">1</span></span></span><span style="top:-1.5257em;"><span class="pstrut" style="height:3.1166em;"></span><span class="mord"><span class="mord mathnormal">u</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&gt;=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&gt;=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.0229em;"><span></span></span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p><p>CCR模型就是一个简单的线性规划或者非线性规划模型，目标函数是产出乘以权重比上投入乘以权重，效率评价指数越大说明投入产出比越高，约束条件是<strong>将投入约定为1</strong>，评价效率小于1（评价效率无法超过1，因为产出不可能超过投入），权重大于0。</p><h4 id="模型改进">模型改进</h4><p>由于上面的模型不是传统的线性规划模型，难以求得最优解，我们在此对其做线性化处理，取对偶模型。</p><p>评价决策单元k效益的CCR模式线性规划模型：</p><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>m</mi><mi>i</mi><mi>n</mi><mi>O</mi><msub><mi>E</mi><mi>k</mi></msub></mrow><annotation encoding="application/x-tex">min OE_k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord mathnormal">min</span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></p><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>s</mi><mi mathvariant="normal">.</mi><mi>t</mi><mi mathvariant="normal">.</mi><mrow><mo fence="true">{</mo><mtable rowspacing="0.36em" columnalign="left left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><msubsup><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></msubsup><msub><mi>λ</mi><mi>i</mi></msub><msub><mi>x</mi><mrow><mi>i</mi><mi>j</mi></mrow></msub><mo>&lt;</mo><mo>=</mo><mi>O</mi><msub><mi>E</mi><mi>k</mi></msub><mo>∗</mo><msub><mi>x</mi><mrow><mi>k</mi><mi>j</mi></mrow></msub></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>j</mi><mo>=</mo><mn>1</mn><mo separator="true">,</mo><mn>2</mn><mo separator="true">,</mo><mn>3</mn><mo separator="true">,</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo separator="true">,</mo><mi>n</mi></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><msubsup><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></msubsup><msub><mi>λ</mi><mi>i</mi></msub><msub><mi>y</mi><mrow><mi>i</mi><mi>j</mi></mrow></msub><mo>&gt;</mo><mo>=</mo><msub><mi>y</mi><mrow><mi>k</mi><mi>j</mi></mrow></msub></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>j</mi><mo>=</mo><mn>1</mn><mo separator="true">,</mo><mn>2</mn><mo separator="true">,</mo><mn>3</mn><mo separator="true">,</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo separator="true">,</mo><mi>n</mi></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><msub><mi>λ</mi><mi>i</mi></msub><mo>&gt;</mo><mo>=</mo><mn>0</mn></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>i</mi><mo>=</mo><mn>1</mn><mo separator="true">,</mo><mn>2</mn><mo separator="true">,</mo><mn>3</mn><mo separator="true">,</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo separator="true">,</mo><mi>n</mi></mrow></mstyle></mtd></mtr></mtable></mrow></mrow><annotation encoding="application/x-tex">s.t.\begin{cases}\sum_{i=1}^n\lambda_ix_{ij}&lt;=OE_k*x_{kj} &amp;j=1,2,3,...,n \\\sum_{i=1}^n\lambda_iy_{ij}&gt;=y_{kj} &amp;j=1,2,3,...,n \\\lambda_i&gt;=0 &amp;i=1,2,3,...,n\end{cases}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:4.32em;vertical-align:-1.91em;"></span><span class="mord mathnormal">s</span><span class="mord">.</span><span class="mord mathnormal">t</span><span class="mord">.</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.35em;"><span style="top:-2.2em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎩</span></span></span><span style="top:-2.192em;"><span class="pstrut" style="height:3.15em;"></span><span style="height:0.316em;width:0.8889em;"><svg xmlns="http://www.w3.org/2000/svg" width='0.8889em' height='0.316em' style='width:0.8889em' viewBox='0 0 888.89 316' preserveAspectRatio='xMinYMin'><path d='M384 0 H504 V316 H384z M384 0 H504 V316 H384z'/></svg></span></span><span style="top:-3.15em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎨</span></span></span><span style="top:-4.292em;"><span class="pstrut" style="height:3.15em;"></span><span style="height:0.316em;width:0.8889em;"><svg xmlns="http://www.w3.org/2000/svg" width='0.8889em' height='0.316em' style='width:0.8889em' viewBox='0 0 888.89 316' preserveAspectRatio='xMinYMin'><path d='M384 0 H504 V316 H384z M384 0 H504 V316 H384z'/></svg></span></span><span style="top:-4.6em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎧</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.85em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.41em;"><span style="top:-4.41em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:0em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8043em;"><span style="top:-2.4003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2997em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">λ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">ij</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&lt;=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">kj</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span></span></span><span style="top:-2.97em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:0em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8043em;"><span style="top:-2.4003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2997em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">λ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">ij</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&gt;=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">kj</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span></span></span><span style="top:-1.53em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">λ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&gt;=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.91em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:1em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.41em;"><span style="top:-4.41em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">2</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">3</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">...</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">n</span></span></span><span style="top:-2.97em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">2</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">3</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">...</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">n</span></span></span><span style="top:-1.53em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">2</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">3</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">...</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.91em;"><span></span></span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></p><blockquote><p>说明：</p><p>这个模型可以直观地理解为将决策单元k的投入、产出表示为其他决策单元的线性组合。</p><p><strong>如果有某个 (或某些) 决策单元的产出量达到决策单元k的水平 (达到, 不一定要超过. 第二个约束的含义), 而投入量尽可能小 (第一个约束的含义), 那么会出现<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><msub><mi>E</mi><mi>k</mi></msub><mo>&lt;</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">OE_k&lt;1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span></span></span></span>的情况, 此时说明该决策单元存在资源浪费。</strong></p><p>反之, 如果该决策单元的效率已经是最高的了, 那么任何的决策单元都不能使用比它还要少的投入获得同样 (甚至更多) 的产出. 这时候 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><msub><mi>E</mi><mi>k</mi></msub><mo>=</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">OE_k=1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span></span></span></span></p></blockquote><p>为加速模型求解及分析产能效应，为上述方程引入松弛变量<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msubsup><mi>s</mi><mi>i</mi><mo>+</mo></msubsup><mo separator="true">,</mo><msubsup><mi>s</mi><mi>j</mi><mo>−</mo></msubsup></mrow><annotation encoding="application/x-tex">s_i^+,s_j^-</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.2244em;vertical-align:-0.413em;"></span><span class="mord"><span class="mord mathnormal">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8115em;"><span style="top:-2.4231em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-3.1031em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mbin mtight">+</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2769em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8115em;"><span style="top:-2.4231em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span><span style="top:-3.1031em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mbin mtight">−</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.413em;"><span></span></span></span></span></span></span></span></span></span>。其中**<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msubsup><mi>s</mi><mi>i</mi><mo>−</mo></msubsup></mrow><annotation encoding="application/x-tex">s_i^-</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0883em;vertical-align:-0.2769em;"></span><span class="mord"><span class="mord mathnormal">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8115em;"><span style="top:-2.4231em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-3.1031em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mbin mtight">−</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2769em;"><span></span></span></span></span></span></span></span></span></span>称为差额变数，表示该决策单元为达到 “DEA 有效” 应减少的投入量**，<strong><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msubsup><mi>s</mi><mi>i</mi><mo>+</mo></msubsup></mrow><annotation encoding="application/x-tex">s_i^+</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0883em;vertical-align:-0.2769em;"></span><span class="mord"><span class="mord mathnormal">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8115em;"><span style="top:-2.4231em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-3.1031em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mbin mtight">+</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2769em;"><span></span></span></span></span></span></span></span></span></span>称为超额变数，代表为达到 “DEA 有效” 应增加的产出量</strong>。引入非阿基米德数 ε (non-Archimedean constant，通常设为1e-6)，CCR 模式线性规划模型化为：</p><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>m</mi><mi>i</mi><mi>n</mi><mtext> </mtext><mi>O</mi><msub><mi>E</mi><mi>k</mi></msub><mo>−</mo><mi>ϵ</mi><mo stretchy="false">(</mo><msubsup><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><msub><mi>m</mi><mn>1</mn></msub></msubsup><msubsup><mi>s</mi><mi>i</mi><mo>−</mo></msubsup><mo>+</mo><msubsup><mo>∑</mo><mrow><mi>j</mi><mo>=</mo><mn>1</mn></mrow><msub><mi>m</mi><mn>2</mn></msub></msubsup><msubsup><mi>s</mi><mi>j</mi><mo>+</mo></msubsup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">min\ OE_k-\epsilon(\sum_{i=1}^{m_1}s_i^-+\sum_{j=1}^{m_2}s_j^+)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord mathnormal">min</span><span class="mspace"> </span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.1112em;vertical-align:-0.2997em;"></span><span class="mord mathnormal">ϵ</span><span class="mopen">(</span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:0em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8043em;"><span style="top:-2.4003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight">m</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3173em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2997em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8115em;"><span style="top:-2.4231em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-3.1031em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mbin mtight">−</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2769em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.2473em;vertical-align:-0.4358em;"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:0em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8043em;"><span style="top:-2.4003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight">m</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3173em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.4358em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8115em;"><span style="top:-2.4231em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span><span style="top:-3.1031em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mbin mtight">+</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.413em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></p><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>s</mi><mi mathvariant="normal">.</mi><mi>t</mi><mi mathvariant="normal">.</mi><mrow><mo fence="true">{</mo><mtable rowspacing="0.36em" columnalign="left left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><msubsup><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></msubsup><msub><mi>λ</mi><mi>i</mi></msub><msub><mi>x</mi><mrow><mi>i</mi><mi>j</mi></mrow></msub><mo>+</mo><msubsup><mi>s</mi><mi>j</mi><mo>−</mo></msubsup><mo>=</mo><mi>O</mi><msub><mi>E</mi><mi>k</mi></msub><mo>∗</mo><msub><mi>x</mi><mrow><mi>k</mi><mi>j</mi></mrow></msub></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>j</mi><mo>=</mo><mn>1</mn><mo separator="true">,</mo><mn>2</mn><mo separator="true">,</mo><mn>3</mn><mo separator="true">,</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo separator="true">,</mo><mi>n</mi></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><msubsup><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></msubsup><msub><mi>λ</mi><mi>i</mi></msub><msub><mi>y</mi><mrow><mi>i</mi><mi>j</mi></mrow></msub><mo>−</mo><msubsup><mi>s</mi><mi>j</mi><mo>+</mo></msubsup><mo>=</mo><msub><mi>y</mi><mrow><mi>k</mi><mi>j</mi></mrow></msub></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>j</mi><mo>=</mo><mn>1</mn><mo separator="true">,</mo><mn>2</mn><mo separator="true">,</mo><mn>3</mn><mo separator="true">,</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo separator="true">,</mo><mi>n</mi></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><msub><mi>λ</mi><mi>i</mi></msub><mo>&gt;</mo><mo>=</mo><mn>0</mn></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>i</mi><mo>=</mo><mn>1</mn><mo separator="true">,</mo><mn>2</mn><mo separator="true">,</mo><mn>3</mn><mo separator="true">,</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo separator="true">,</mo><mi>n</mi></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><msubsup><mi>s</mi><mi>i</mi><mo>+</mo></msubsup><mo separator="true">,</mo><msubsup><mi>s</mi><mi>j</mi><mo>−</mo></msubsup><mo>&gt;</mo><mo>=</mo><mn>0</mn></mrow></mstyle></mtd></mtr></mtable></mrow></mrow><annotation encoding="application/x-tex">s.t.\begin{cases}\sum_{i=1}^n\lambda_ix_{ij}+s_j^-=OE_k*x_{kj} &amp;j=1,2,3,...,n \\\sum_{i=1}^n\lambda_iy_{ij}-s_j^+=y_{kj} &amp;j=1,2,3,...,n \\\lambda_i&gt;=0 &amp;i=1,2,3,...,n \\s_i^+,s_j^-&gt;=0\end{cases}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:5.76em;vertical-align:-2.63em;"></span><span class="mord mathnormal">s</span><span class="mord">.</span><span class="mord mathnormal">t</span><span class="mord">.</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.95em;"><span style="top:-1.6em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎩</span></span></span><span style="top:-1.592em;"><span class="pstrut" style="height:3.15em;"></span><span style="height:0.916em;width:0.8889em;"><svg xmlns="http://www.w3.org/2000/svg" width='0.8889em' height='0.916em' style='width:0.8889em' viewBox='0 0 888.89 916' preserveAspectRatio='xMinYMin'><path d='M384 0 H504 V916 H384z M384 0 H504 V916 H384z'/></svg></span></span><span style="top:-3.15em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎨</span></span></span><span style="top:-4.292em;"><span class="pstrut" style="height:3.15em;"></span><span style="height:0.916em;width:0.8889em;"><svg xmlns="http://www.w3.org/2000/svg" width='0.8889em' height='0.916em' style='width:0.8889em' viewBox='0 0 888.89 916' preserveAspectRatio='xMinYMin'><path d='M384 0 H504 V916 H384z M384 0 H504 V916 H384z'/></svg></span></span><span style="top:-5.2em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎧</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.45em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.13em;"><span style="top:-5.13em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:0em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8043em;"><span style="top:-2.4003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2997em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">λ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">ij</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mord mathnormal">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8115em;"><span style="top:-2.4231em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span><span style="top:-3.1031em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mbin mtight">−</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.413em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">kj</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.69em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:0em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8043em;"><span style="top:-2.4003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2997em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">λ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">ij</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mord mathnormal">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8115em;"><span style="top:-2.4231em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span><span style="top:-3.1031em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mbin mtight">+</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.413em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">kj</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span></span></span><span style="top:-2.25em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">λ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&gt;=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord">0</span></span></span><span style="top:-0.81em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8115em;"><span style="top:-2.4231em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-3.1031em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mbin mtight">+</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2769em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8115em;"><span style="top:-2.4231em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span><span style="top:-3.1031em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mbin mtight">−</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.413em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&gt;=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.63em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:1em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.13em;"><span style="top:-5.13em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">2</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">3</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">...</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">n</span></span></span><span style="top:-3.69em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">2</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">3</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">...</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">n</span></span></span><span style="top:-2.25em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">2</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">3</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">...</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.19em;"><span></span></span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></p><p><strong>尽管 ε 很小，但我们无法得知各<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msubsup><mi>s</mi><mi>i</mi><mo>+</mo></msubsup><mo separator="true">,</mo><msubsup><mi>s</mi><mi>j</mi><mo>−</mo></msubsup></mrow><annotation encoding="application/x-tex">s_i^+,s_j^-</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.2244em;vertical-align:-0.413em;"></span><span class="mord"><span class="mord mathnormal">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8115em;"><span style="top:-2.4231em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-3.1031em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mbin mtight">+</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2769em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8115em;"><span style="top:-2.4231em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span><span style="top:-3.1031em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mbin mtight">−</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.413em;"><span></span></span></span></span></span></span></span></span></span>的大小数量级，直接进行计算可能会产生误差，因此求解该问题使用分层序列法。第一阶段求解<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><msub><mi>E</mi><mi>k</mi></msub></mrow><annotation encoding="application/x-tex">OE_k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>的最小值，第二阶段在<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><msub><mi>E</mi><mi>k</mi></msub></mrow><annotation encoding="application/x-tex">OE_k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>已知下求<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><msubsup><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><msub><mi>m</mi><mn>1</mn></msub></msubsup><msubsup><mi>s</mi><mi>i</mi><mo>−</mo></msubsup><mo>+</mo><msubsup><mo>∑</mo><mrow><mi>j</mi><mo>=</mo><mn>1</mn></mrow><msub><mi>m</mi><mn>2</mn></msub></msubsup><msubsup><mi>s</mi><mi>j</mi><mo>+</mo></msubsup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(\sum_{i=1}^{m_1}s_i^-+\sum_{j=1}^{m_2}s_j^+)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.1112em;vertical-align:-0.2997em;"></span><span class="mopen">(</span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:0em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8043em;"><span style="top:-2.4003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight">m</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3173em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2997em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8115em;"><span style="top:-2.4231em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-3.1031em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mbin mtight">−</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2769em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.2473em;vertical-align:-0.4358em;"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:0em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8043em;"><span style="top:-2.4003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight">m</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3173em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.4358em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8115em;"><span style="top:-2.4231em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span><span style="top:-3.1031em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mbin mtight">+</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.413em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>的最大值。</strong></p><h4 id="有效性分析">有效性分析</h4><p>CCR 模式下 DEA 效率评估模型所得到的最优解<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><msub><mi>E</mi><mi>k</mi></msub></mrow><annotation encoding="application/x-tex">OE_k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>是决策单元k的“综合技术效益”。根据<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><msub><mi>E</mi><mi>k</mi></msub></mrow><annotation encoding="application/x-tex">OE_k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>取值不同，将综合效益评估分为以下三种情况：</p><ol><li>若<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><msub><mi>E</mi><mi>k</mi></msub><mo>=</mo><mn>1</mn><mtext>，</mtext><msubsup><mi>s</mi><mi>i</mi><mo>+</mo></msubsup><mo separator="true">,</mo><msubsup><mi>s</mi><mi>j</mi><mo>−</mo></msubsup></mrow><annotation encoding="application/x-tex">OE_k=1，s_i^+,s_j^-</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.2244em;vertical-align:-0.413em;"></span><span class="mord">1</span><span class="mord cjk_fallback">，</span><span class="mord"><span class="mord mathnormal">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8115em;"><span style="top:-2.4231em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-3.1031em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mbin mtight">+</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2769em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8115em;"><span style="top:-2.4231em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span><span style="top:-3.1031em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mbin mtight">−</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.413em;"><span></span></span></span></span></span></span></span></span></span>均为0，明决策单元是 “DEA 强有效” 的，即任何一项投入的数量都无法减少，除非减少产出或增加另外一种投入的数量；任何一种产出的数量都无法增加，除非增加投入的数量或减少另外一种产出的数量。即：同时达到技术有效和规模有效</li><li>若<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><msub><mi>E</mi><mi>k</mi></msub><mo>=</mo><mn>1</mn><mtext>，</mtext><msubsup><mi>s</mi><mi>i</mi><mo>+</mo></msubsup><mo separator="true">,</mo><msubsup><mi>s</mi><mi>j</mi><mo>−</mo></msubsup></mrow><annotation encoding="application/x-tex">OE_k=1，s_i^+,s_j^-</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.2244em;vertical-align:-0.413em;"></span><span class="mord">1</span><span class="mord cjk_fallback">，</span><span class="mord"><span class="mord mathnormal">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8115em;"><span style="top:-2.4231em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-3.1031em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mbin mtight">+</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2769em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8115em;"><span style="top:-2.4231em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span><span style="top:-3.1031em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mbin mtight">−</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.413em;"><span></span></span></span></span></span></span></span></span></span>某一个为0 ，说明决策单元是 “DEA 弱有效” 的，无法等比例减少各项投入的数量，除非减少产出的数量；无法等比例增加各项产出的数量，除非增加投入的数量。即：技术有效和规模有效只满足一个</li><li>若<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><msub><mi>E</mi><mi>k</mi></msub><mo>&lt;</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">OE_k&lt;1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span></span></span></span>，说明决策单元是 “非 DEA 有效” 的，存在资源浪费现象（没有合理利用资源），既不是效率最佳也不是规模最佳</li></ol><p><strong>对 “DEA 弱有效” 的决策按照<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msubsup><mi>s</mi><mi>i</mi><mo>+</mo></msubsup><mo separator="true">,</mo><msubsup><mi>s</mi><mi>j</mi><mo>−</mo></msubsup></mrow><annotation encoding="application/x-tex">s_i^+,s_j^-</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.2244em;vertical-align:-0.413em;"></span><span class="mord"><span class="mord mathnormal">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8115em;"><span style="top:-2.4231em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-3.1031em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mbin mtight">+</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2769em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8115em;"><span style="top:-2.4231em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span><span style="top:-3.1031em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mbin mtight">−</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.413em;"><span></span></span></span></span></span></span></span></span></span>的冗余情况进行调整，使之变得 “DEA 强有效”。</strong></p><h4 id="规模报酬分析">规模报酬分析</h4><p>在不同的生产规模下，规模报酬将会随之改变。生产规模小时，投入产出比会随着规模增加而迅速提升，称为规模报酬递增(Increasing  Returns to Scale,  IRS)；当生产达到高峰期时，产出与规模成正比而达到最适生产规模，称为规模报酬固定；当生产规模过于庞大时，产出减缓，则称为规模报酬递减(Decreasing Returns to Scale, DRS)，也就是投入增加时，产出增加的比例会少于投入增加的比例。</p><p><strong>规模报酬固定：</strong> 如果 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msubsup><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></msubsup><msub><mi>λ</mi><mi>i</mi></msub><mo>=</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">\sum_{i=1}^n\lambda_i=1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.104em;vertical-align:-0.2997em;"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:0em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8043em;"><span style="top:-2.4003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2997em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">λ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span></span></span></span>，则该决策单元为“规模报酬固定”</p><p><strong>规模报酬递增：</strong> 如果 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msubsup><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></msubsup><msub><mi>λ</mi><mi>i</mi></msub><mo>&lt;</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">\sum_{i=1}^n\lambda_i&lt;1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.104em;vertical-align:-0.2997em;"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:0em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8043em;"><span style="top:-2.4003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2997em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">λ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span></span></span></span>， 则该决策单元为 “规模报酬递增”</p><p><strong>规模报酬递减：</strong> 如果 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msubsup><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></msubsup><msub><mi>λ</mi><mi>i</mi></msub><mo>&gt;</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">\sum_{i=1}^n\lambda_i&gt;1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.104em;vertical-align:-0.2997em;"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:0em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8043em;"><span style="top:-2.4003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2997em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">λ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&gt;</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span></span></span></span>，则该决策单元为 “规模报酬递减”</p><h4 id="差额变数分析">差额变数分析</h4><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20230901142709058.png" alt="image-20230901142709058"></p><h3 id="BCC模型（少用）">BCC模型（少用）</h3><p>BCC模型是经典的DEA模型，BBC模型考虑在可变规模收益（VRS）情况，即当决策单元不是以最佳的规模运行时，技术效益（TE）的测度会受到规模效率（SE）的影响。这种模式称为“产出导向模式”。</p><p>即：投入可以持续增加，研究这种情况下的投入和产出关系</p><p>因此，在构建BCC模型时，我们需要假设规模报酬可变，对CCR模型的约束条件进行简单改进，增加凸性假设条件：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>∑</mo><msub><mi>λ</mi><mi>i</mi></msub><mo>=</mo><mn>1</mn><mo separator="true">,</mo><mi>j</mi><mo>=</mo><mn>1</mn><mo separator="true">,</mo><mn>2</mn><mo separator="true">,</mo><mn>3...</mn><mo separator="true">,</mo><mi>n</mi></mrow><annotation encoding="application/x-tex">\sum\lambda_i=1,j=1,2,3...,n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mop op-symbol small-op" style="position:relative;top:0em;">∑</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">λ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.854em;vertical-align:-0.1944em;"></span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8389em;vertical-align:-0.1944em;"></span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">2</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">3...</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">n</span></span></span></span></p><p><strong>数学模型：</strong></p><p>目标函数：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>m</mi><mi>i</mi><mi>n</mi><mtext>  </mtext><mi>θ</mi></mrow><annotation encoding="application/x-tex">min\ \ \theta</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal">min</span><span class="mspace"> </span><span class="mspace"> </span><span class="mord mathnormal" style="margin-right:0.02778em;">θ</span></span></span></span></span></p><p>约束条件：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>s</mi><mi mathvariant="normal">.</mi><mi>t</mi><mi mathvariant="normal">.</mi><mrow><mo fence="true">{</mo><mtable rowspacing="0.36em" columnalign="left left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><msubsup><mo>∑</mo><mrow><mi>j</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></msubsup><msub><mi>λ</mi><mi>j</mi></msub><msub><mi>y</mi><mi>j</mi></msub><mo>+</mo><msup><mi>s</mi><mo>+</mo></msup></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mo>=</mo><mi>θ</mi><msub><mi>x</mi><mn>0</mn></msub></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><msubsup><mo>∑</mo><mrow><mi>j</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></msubsup><msub><mi>λ</mi><mi>i</mi></msub><msub><mi>y</mi><mi>j</mi></msub><mo>−</mo><msup><mi>s</mi><mo>−</mo></msup></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mo>=</mo><mi>θ</mi><msub><mi>y</mi><mn>0</mn></msub></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mo>∑</mo><msub><mi>λ</mi><mi>j</mi></msub></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mo>=</mo><mn>1</mn><mo separator="true">,</mo><mi>j</mi><mo>=</mo><mn>1</mn><mo separator="true">,</mo><mn>2</mn><mo separator="true">,</mo><mn>3...</mn><mo separator="true">,</mo><mi>n</mi></mrow></mstyle></mtd></mtr></mtable></mrow></mrow><annotation encoding="application/x-tex">s.t.\begin{cases}\sum_{j=1}^n\lambda_jy_j+s^+&amp;=\theta x_0 \\\sum_{j=1}^n \lambda_iy_j-s^-&amp;=\theta y_0 \\\sum\lambda_j&amp;=1,j=1,2,3...,n \end{cases}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:4.3276em;vertical-align:-1.9138em;"></span><span class="mord mathnormal">s</span><span class="mord">.</span><span class="mord mathnormal">t</span><span class="mord">.</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.35em;"><span style="top:-2.2em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎩</span></span></span><span style="top:-2.192em;"><span class="pstrut" style="height:3.15em;"></span><span style="height:0.316em;width:0.8889em;"><svg xmlns="http://www.w3.org/2000/svg" width='0.8889em' height='0.316em' style='width:0.8889em' viewBox='0 0 888.89 316' preserveAspectRatio='xMinYMin'><path d='M384 0 H504 V316 H384z M384 0 H504 V316 H384z'/></svg></span></span><span style="top:-3.15em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎨</span></span></span><span style="top:-4.292em;"><span class="pstrut" style="height:3.15em;"></span><span style="height:0.316em;width:0.8889em;"><svg xmlns="http://www.w3.org/2000/svg" width='0.8889em' height='0.316em' style='width:0.8889em' viewBox='0 0 888.89 316' preserveAspectRatio='xMinYMin'><path d='M384 0 H504 V316 H384z M384 0 H504 V316 H384z'/></svg></span></span><span style="top:-4.6em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎧</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.85em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.4138em;"><span style="top:-4.4138em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:0em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8043em;"><span style="top:-2.4003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.4358em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">λ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mord mathnormal">s</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7713em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mbin mtight">+</span></span></span></span></span></span></span></span></span></span><span style="top:-2.97em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:0em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8043em;"><span style="top:-2.4003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.4358em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">λ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mord mathnormal">s</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7713em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mbin mtight">−</span></span></span></span></span></span></span></span></span></span><span style="top:-1.5262em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mop op-symbol small-op" style="position:relative;top:0em;">∑</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">λ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.9138em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:1em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.4138em;"><span style="top:-4.4138em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">θ</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-2.97em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">θ</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-1.5262em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">2</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">3...</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.9138em;"><span></span></span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p><p>针对的是规模效率所带来的情况，投入增加的同时，产出是否跟得上，最为理想的情况是<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>θ</mi><mo>=</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">\theta=1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">θ</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span></span></span></span>时，产出跟得上投入。</p><h2 id="Python代码模板">Python代码模板</h2><p>在code文件夹下的DEA.py文件中。</p><hr><p>参考原文：</p><p><a href="https://zhuanlan.zhihu.com/p/60853027">https://zhuanlan.zhihu.com/p/60853027</a></p>]]></content>
      
      
      <categories>
          
          <category> 数学建模 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
            <tag> 数学建模 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>TOPSIS优劣解距离法</title>
      <link href="/2023/08/15/%E3%80%90%E6%95%B0%E5%AD%A6%E5%BB%BA%E6%A8%A1%E3%80%91%E8%AF%84%E4%BB%B7%E6%A8%A1%E5%9E%8B-5-TOPSIS/"/>
      <url>/2023/08/15/%E3%80%90%E6%95%B0%E5%AD%A6%E5%BB%BA%E6%A8%A1%E3%80%91%E8%AF%84%E4%BB%B7%E6%A8%A1%E5%9E%8B-5-TOPSIS/</url>
      
        <content type="html"><![CDATA[<h1>TOPSIS优劣解距离法</h1><h2 id="引例">引例</h2><p>对大学评分，经费越多，评分排名越高。</p><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20230802192308907.png" alt="image-20230802192308907"></p><p>现象：经费越高的，评分结果越小了。</p><p><strong>为了让最后结果的大小正向直观反映原数据的相对大小，可以用距离作为参考来进行评分。</strong></p><p><strong>用距离打分：</strong></p><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20230802192541972.png" alt="image-20230802192541972"></p><p>思想原理：用距离打分</p><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20230802192632702.png" alt="image-20230802192632702"></p><h2 id="TOPSIS优劣解距离法步骤">TOPSIS优劣解距离法步骤</h2><h3 id="数据预处理">数据预处理</h3><h4 id="数据正向化处理">数据正向化处理</h4><ol><li><p>对于极大型数据，无需处理</p></li><li><p>极小型数据：max-x</p></li><li><p>中间型数据：（把距离中间值的距离的比较归化到[0,1]区间）</p><p>M=max{|<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>x</mi><mi>i</mi></msub><mo>−</mo><msub><mi>x</mi><mrow><mi>b</mi><mi>e</mi><mi>s</mi><mi>t</mi></mrow></msub></mrow><annotation encoding="application/x-tex">x_i-x_{best}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">b</span><span class="mord mathnormal mtight">es</span><span class="mord mathnormal mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>|}   先用每一项减去最好的一项，再取最大值</p><p>然后再令各个元素  <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mover accent="true"><mi>x</mi><mo stretchy="true">~</mo></mover><mo>=</mo><mn>1</mn><mo>−</mo><mfrac><mrow><mi mathvariant="normal">∣</mi><msub><mi>x</mi><mi>i</mi></msub><mo>−</mo><msub><mi>x</mi><mrow><mi>b</mi><mi>e</mi><mi>s</mi><mi>t</mi></mrow></msub><mi mathvariant="normal">∣</mi></mrow><mi>M</mi></mfrac></mrow><annotation encoding="application/x-tex">\widetilde{x}=1-\frac{|x_i-x_{best}|}{M}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6906em;"></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6906em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal">x</span></span><span class="svg-align" style="width:calc(100% - 0.0556em);margin-left:0.0556em;top:-3.4306em;"><span class="pstrut" style="height:3em;"></span><span style="height:0.26em;"><svg xmlns="http://www.w3.org/2000/svg" width='100%' height='0.26em' viewBox='0 0 600 260' preserveAspectRatio='none'><path d='M200 55.538c-77 0-168 73.953-177 73.953-3 0-7-2.175-9-5.437L2 97c-1-2-2-4-2-6 0-4 2-7 5-9l20-12C116 12 171 0 207 0c86 0 114 68 191 68 78 0 168-68 177-68 4 0 7 2 9 5l12 19c1 2.175 2 4.35 2 6.525 0 4.35-2 7.613-5 9.788l-19 13.05c-92 63.077-116.937 75.308-183 76.128-68.267.847-113-73.952-191-73.952z'/></svg></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.7278em;vertical-align:-0.0833em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.355em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.01em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">M</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.485em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">∣</span><span class="mord mtight"><span class="mord mathnormal mtight">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3281em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="mbin mtight">−</span><span class="mord mtight"><span class="mord mathnormal mtight">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3488em;margin-left:0em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">b</span><span class="mord mathnormal mtight">es</span><span class="mord mathnormal mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.1512em;"><span></span></span></span></span></span></span><span class="mord mtight">∣</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></p></li><li><p>区间型数据：</p><p>先计算最值到边界的最大距离 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>M</mi><mo>=</mo><mi>m</mi><mi>a</mi><mi>x</mi><mo stretchy="false">{</mo><mi>a</mi><mo>−</mo><mi>m</mi><mi>i</mi><mi>n</mi><mo stretchy="false">{</mo><msub><mi>x</mi><mi>i</mi></msub><mo stretchy="false">}</mo><mo separator="true">,</mo><mi>m</mi><mi>a</mi><mi>x</mi><mo stretchy="false">{</mo><msub><mi>x</mi><mi>i</mi></msub><mo stretchy="false">}</mo><mo>−</mo><mi>b</mi><mo stretchy="false">}</mo></mrow><annotation encoding="application/x-tex">M=max\{a-min\{x_i\},max\{x_i\}-b\}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">ma</span><span class="mord mathnormal">x</span><span class="mopen">{</span><span class="mord mathnormal">a</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">min</span><span class="mopen">{</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">}</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">ma</span><span class="mord mathnormal">x</span><span class="mopen">{</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">}</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">b</span><span class="mclose">}</span></span></span></span></p><p>再令各个元素<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mover accent="true"><msub><mi>x</mi><mi>i</mi></msub><mo stretchy="true">~</mo></mover><mo>=</mo><mrow><mo fence="true">{</mo><mtable rowspacing="0.36em" columnalign="left left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mn>1</mn><mo>−</mo><mfrac><mrow><mi>a</mi><mo>−</mo><msub><mi>x</mi><mi>i</mi></msub></mrow><mi>M</mi></mfrac><mo separator="true">,</mo><msub><mi>x</mi><mi>i</mi></msub><mo>≤</mo><mi>a</mi></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mn>1</mn><mo separator="true">,</mo><mi>a</mi><mo>≤</mo><msub><mi>x</mi><mi>i</mi></msub><mo>≤</mo><mi>b</mi></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mn>1</mn><mo>−</mo><mfrac><mrow><msub><mi>x</mi><mi>i</mi></msub><mo>−</mo><mi>b</mi></mrow><mi>M</mi></mfrac><mo separator="true">,</mo><msub><mi>x</mi><mi>i</mi></msub><mo>≥</mo><mi>b</mi></mrow></mstyle></mtd></mtr></mtable></mrow></mrow><annotation encoding="application/x-tex">\widetilde{x_i}=\begin{cases}1-\frac{a-x_i}{M}, x_i\le a\\ 1 ,a\le x_i \le b\\ 1-\frac{x_i-b}{M},x_i \ge b \end{cases}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8406em;vertical-align:-0.15em;"></span><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.6906em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span><span class="svg-align" style="top:-3.4306em;"><span class="pstrut" style="height:3em;"></span><span style="height:0.26em;"><svg xmlns="http://www.w3.org/2000/svg" width='100%' height='0.26em' viewBox='0 0 600 260' preserveAspectRatio='none'><path d='M200 55.538c-77 0-168 73.953-177 73.953-3 0-7-2.175-9-5.437L2 97c-1-2-2-4-2-6 0-4 2-7 5-9l20-12C116 12 171 0 207 0c86 0 114 68 191 68 78 0 168-68 177-68 4 0 7 2 9 5l12 19c1 2.175 2 4.35 2 6.525 0 4.35-2 7.613-5 9.788l-19 13.05c-92 63.077-116.937 75.308-183 76.128-68.267.847-113-73.952-191-73.952z'/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:4.32em;vertical-align:-1.91em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.35em;"><span style="top:-2.2em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎩</span></span></span><span style="top:-2.192em;"><span class="pstrut" style="height:3.15em;"></span><span style="height:0.316em;width:0.8889em;"><svg xmlns="http://www.w3.org/2000/svg" width='0.8889em' height='0.316em' style='width:0.8889em' viewBox='0 0 888.89 316' preserveAspectRatio='xMinYMin'><path d='M384 0 H504 V316 H384z M384 0 H504 V316 H384z'/></svg></span></span><span style="top:-3.15em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎨</span></span></span><span style="top:-4.292em;"><span class="pstrut" style="height:3.15em;"></span><span style="height:0.316em;width:0.8889em;"><svg xmlns="http://www.w3.org/2000/svg" width='0.8889em' height='0.316em' style='width:0.8889em' viewBox='0 0 888.89 316' preserveAspectRatio='xMinYMin'><path d='M384 0 H504 V316 H384z M384 0 H504 V316 H384z'/></svg></span></span><span style="top:-4.6em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎧</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.85em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.41em;"><span style="top:-4.41em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8184em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">M</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.4101em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">a</span><span class="mbin mtight">−</span><span class="mord mtight"><span class="mord mathnormal mtight">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3281em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord mathnormal">a</span></span></span><span style="top:-2.97em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">a</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord mathnormal">b</span></span></span><span style="top:-1.53em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8962em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">M</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.4101em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3281em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="mbin mtight">−</span><span class="mord mathnormal mtight">b</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≥</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord mathnormal">b</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.91em;"><span></span></span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></p></li></ol><h4 id="数据标准化处理">数据标准化处理</h4><p>数据标准化处理的原因：消除<strong>量纲的影响</strong>。</p><p>下面这张表的数据经过正向化处理，失业率可以反映学校层次、经费也可以反映学校层次，但横向比较后，经费和失业率根本不在一个量级，虽然都能正向反映学校排名情况。</p><p>为了方便数据的观察，我们可以将数据进行标准化处理。</p><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20230802193515274.png" alt="image-20230802193515274"></p><p><strong>标准化处理的方法：</strong></p><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20230802193752951.png" alt="image-20230802193752951"></p><h3 id="数据处理——法一：距离法打分">数据处理——法一：距离法打分</h3><p>经过前面的数据预处理，得到标准化数据矩阵，这时我们可以对标准化后的结果进行距离法打分。</p><p>即在每一列对每一个数据都用这个公式进行评分：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>s</mi><mi>c</mi><mi>o</mi><mi>r</mi><mi>e</mi><mo>=</mo><mfrac><mrow><mi>x</mi><mo>−</mo><mi>m</mi><mi>i</mi><mi>n</mi></mrow><mrow><mi>m</mi><mi>a</mi><mi>x</mi><mo>−</mo><mi>m</mi><mi>i</mi><mi>n</mi></mrow></mfrac></mrow><annotation encoding="application/x-tex">score=\frac{x-min}{max-min}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">score</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.259em;vertical-align:-0.4033em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8557em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">ma</span><span class="mord mathnormal mtight">x</span><span class="mbin mtight">−</span><span class="mord mathnormal mtight">min</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">x</span><span class="mbin mtight">−</span><span class="mord mathnormal mtight">min</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.4033em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></p><h3 id="数据处理——法二：用TOPSIS优劣解打分">数据处理——法二：用TOPSIS优劣解打分</h3><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20230802194308003.png" alt="image-20230802194308003"></p><h3 id="将打分结果进行归一化处理">将打分结果进行归一化处理</h3><p>对所得到的<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>s</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">s_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>列进行归一化，得到最终结果。</p><blockquote><p><strong>归一化、标准化和标准化的区别和联系：</strong></p><ul><li>距离法和标准化都能使结果落到[0,1]区间，但是不能让和为1</li><li>用距离法要确定最大值和最小值，可是有很多数据指标不存在理论上的最大值和最小值，比如GDP增速，所以选取给定数据中的最值即可</li><li>标准化是为了消除量纲的影响</li><li>距离法的集合意义是每个值所占的线段比例</li><li>归一化不仅能将结果化到[0,1]区间，还能使和为1</li></ul></blockquote><h2 id="TOPSIS的作用">TOPSIS的作用</h2><p>TOPSIS充分利用原始数据信息，对各个评价方案进行评估，具有客观性。</p><h2 id="TOPSIS的思想原理">TOPSIS的思想原理</h2><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20230802195137789.png" alt="image-20230802195137789"></p><h2 id="基于熵权法的TOPSIS优劣解距离法">基于熵权法的TOPSIS优劣解距离法</h2><p>如果对多个指标进行打分，并且多个指标有不同的权重，那么如何打分呢？</p><h3 id="1-确定权重">1.确定权重</h3><p>客观确定权重，我们可以采用熵权法。</p><h3 id="2-TOPSIS优劣解距离法-权重">2.TOPSIS优劣解距离法*权重</h3><p>在计算最大最小距离时，分别乘上对应的权重即可。</p><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20230802195630409.png" alt="image-20230802195630409"></p>]]></content>
      
      
      <categories>
          
          <category> 数学建模 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
            <tag> 数学建模 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>灰色关联分析</title>
      <link href="/2023/08/14/%E3%80%90%E6%95%B0%E5%AD%A6%E5%BB%BA%E6%A8%A1%E3%80%91%E8%AF%84%E4%BB%B7%E6%A8%A1%E5%9E%8B-4-%E7%81%B0%E8%89%B2%E5%85%B3%E8%81%94%E5%88%86%E6%9E%90/"/>
      <url>/2023/08/14/%E3%80%90%E6%95%B0%E5%AD%A6%E5%BB%BA%E6%A8%A1%E3%80%91%E8%AF%84%E4%BB%B7%E6%A8%A1%E5%9E%8B-4-%E7%81%B0%E8%89%B2%E5%85%B3%E8%81%94%E5%88%86%E6%9E%90/</url>
      
        <content type="html"><![CDATA[<h1>灰色关联分析</h1><h2 id="概述">概述</h2><p>灰色关联分析用于确定一个系统中，哪些因素是主要因素，那些因素是次要因素，哪些因素对系统发展影响大，哪些因素对系统发展影响小，从而进行系统分析，强化推动因素，抑制阻碍因素的一种分析方法。</p><p>它的原理可以通俗地理解为，根据序列曲线集合形状的相似程度来判断联系是否紧密。曲线越接近，相应序列之间的关联度越大，反之越小。</p><h4 id="应用场景">应用场景</h4><ol><li>确定主次因素，对数据进行降维处理</li><li>解决多重共线性问题，通过对多个因素的降维选出对结果有显著影响的因素</li><li>进行综合评价（基本不用灰色相关分析做综合评价，因为不同的数据预处理方法会影响最终结果）</li></ol><h2 id="问题引入">问题引入</h2><p>找出对结果影响最大的因素。</p><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20230801102359050.png" alt="image-20230801102359050"></p><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20230801102413905.png" alt="image-20230801102413905"></p><h2 id="灰色关联分析—步骤">灰色关联分析—步骤</h2><h3 id="数据预处理">数据预处理</h3><p>通过数据预处理，可以<strong>消除量纲的影响，并将数据控制在较小的范围</strong>内。</p><p>常用方法：</p><ol><li>每个指标中的元素除以指标的均值</li><li>进行标准化处理（正向化+标准化）</li></ol><h3 id="确定分析数列">确定分析数列</h3><p>参考数列（母序列，类似于y）：能反映系统行为特征的数据序列，记为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>x</mi><mi>o</mi></msub></mrow><annotation encoding="application/x-tex">x_o</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">o</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></p><p>比较序列（子序列，类似于x）：影响系统行为的因素组成的数据序列，记作<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>x</mi><mi>i</mi></msub><mo stretchy="false">(</mo><mi>i</mi><mo>=</mo><mn>1</mn><mo separator="true">,</mo><mn>2</mn><mo separator="true">,</mo><mn>3...</mn><mo separator="true">,</mo><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">x_i(i=1,2,3...,n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">2</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">3...</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">n</span><span class="mclose">)</span></span></span></span></p><p>例如：结婚率就是参考序列</p><p>​房价、人均收入、女性失业数都是比较序列</p><h3 id="确定灰色关联系数">确定灰色关联系数</h3><p>定义两级最小差<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>a</mi><mo>=</mo><mi>m</mi><mi>i</mi><msub><mi>n</mi><mi>s</mi></msub><mi>m</mi><mi>i</mi><msub><mi>n</mi><mi>t</mi></msub><mi mathvariant="normal">∣</mi><msub><mi>x</mi><mn>0</mn></msub><mo stretchy="false">(</mo><mi>t</mi><mo stretchy="false">)</mo><mo>−</mo><msub><mi>x</mi><mi>s</mi></msub><mo stretchy="false">(</mo><mi>t</mi><mo stretchy="false">)</mo><mi mathvariant="normal">∣</mi></mrow><annotation encoding="application/x-tex">a=min_smin_t|x_0(t)-x_s(t)|</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">a</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">mi</span><span class="mord"><span class="mord mathnormal">n</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">s</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathnormal">mi</span><span class="mord"><span class="mord mathnormal">n</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2806em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">∣</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">t</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">s</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">t</span><span class="mclose">)</span><span class="mord">∣</span></span></span></span>，两极最大差<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>a</mi><mo>=</mo><mi>m</mi><mi>a</mi><msub><mi>x</mi><mi>s</mi></msub><mi>m</mi><mi>a</mi><msub><mi>x</mi><mi>t</mi></msub><mi mathvariant="normal">∣</mi><msub><mi>x</mi><mn>0</mn></msub><mo stretchy="false">(</mo><mi>t</mi><mo stretchy="false">)</mo><mo>−</mo><msub><mi>x</mi><mi>s</mi></msub><mo stretchy="false">(</mo><mi>t</mi><mo stretchy="false">)</mo><mi mathvariant="normal">∣</mi></mrow><annotation encoding="application/x-tex">a=max_smax_t|x_0(t)-x_s(t)|</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">a</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">ma</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">s</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathnormal">ma</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2806em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">∣</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">t</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">s</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">t</span><span class="mclose">)</span><span class="mord">∣</span></span></span></span>。</p><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20230801110004849.png" alt="image-20230801110004849"></p><h3 id="确定灰色关联系数-2">确定灰色关联系数</h3><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20230801110201536.png" alt="image-20230801110201536"></p><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20230801110349961.png" alt="image-20230801110349961"></p><p>最后通过灰色关联度的大小来判断母序列与子序列的相关性。由表可知，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>x</mi><mn>0</mn></msub></mrow><annotation encoding="application/x-tex">x_0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>与<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>x</mi><mn>3</mn></msub></mrow><annotation encoding="application/x-tex">x_3</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>的关联度最大。所以<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>x</mi><mn>3</mn></msub></mrow><annotation encoding="application/x-tex">x_{3}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">3</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>对<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>x</mi><mn>0</mn></msub></mrow><annotation encoding="application/x-tex">x_{0}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">0</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>的影响最大，其次是<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>x</mi><mn>1</mn></msub></mrow><annotation encoding="application/x-tex">x_1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>。</p><h2 id="总结">总结</h2><h3 id="解题步骤">解题步骤</h3><ol><li>进行数据预处理，正向化、标准化</li><li>确定母序列和子序列，如果有多个母序列，需要分别进行灰色关联分析</li><li>将母序列与子序列两两相减，计算出两级最小差和两级最大差</li><li>对每个元素计算灰色相关系数<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>γ</mi></mrow><annotation encoding="application/x-tex">\gamma</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.05556em;">γ</span></span></span></span>，注意这里<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>ρ</mi></mrow><annotation encoding="application/x-tex">\rho</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">ρ</span></span></span></span>一般取值的0.5</li><li>将各个指标的灰色相关系数求平均值作为灰色关联度</li><li>根据灰色关联度大小下结论</li></ol>]]></content>
      
      
      <categories>
          
          <category> 数学建模 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
            <tag> 数学建模 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>模糊综合评价(未更新)</title>
      <link href="/2023/08/13/%E3%80%90%E6%95%B0%E5%AD%A6%E5%BB%BA%E6%A8%A1%E3%80%91%E8%AF%84%E4%BB%B7%E6%A8%A1%E5%9E%8B-3-%E6%A8%A1%E7%B3%8A%E7%BB%BC%E5%90%88%E8%AF%84%E4%BB%B7/"/>
      <url>/2023/08/13/%E3%80%90%E6%95%B0%E5%AD%A6%E5%BB%BA%E6%A8%A1%E3%80%91%E8%AF%84%E4%BB%B7%E6%A8%A1%E5%9E%8B-3-%E6%A8%A1%E7%B3%8A%E7%BB%BC%E5%90%88%E8%AF%84%E4%BB%B7/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      <categories>
          
          <category> 数学建模 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
            <tag> 数学建模 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>熵权法</title>
      <link href="/2023/08/12/%E3%80%90%E6%95%B0%E5%AD%A6%E5%BB%BA%E6%A8%A1%E3%80%91%E8%AF%84%E4%BB%B7%E6%A8%A1%E5%9E%8B-2-%E7%86%B5%E6%9D%83%E6%B3%95/"/>
      <url>/2023/08/12/%E3%80%90%E6%95%B0%E5%AD%A6%E5%BB%BA%E6%A8%A1%E3%80%91%E8%AF%84%E4%BB%B7%E6%A8%A1%E5%9E%8B-2-%E7%86%B5%E6%9D%83%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<h1>熵权法</h1><h2 id="简述">简述</h2><p>熵权法用于<strong>客观地</strong>给评价指标赋权。</p><h2 id="问题引入">问题引入</h2><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20230801084000062.png" alt="image-20230801084000062"></p><p>分配权重：层次分析法</p><p>缺点：主观性强</p><p>需求：标准都很重要，想尽量避免主观赋权</p><p>解决方案：熵权法（客观赋权）</p><h2 id="熵权法—介绍">熵权法—介绍</h2><ol><li><p>概览与信息量的关系</p><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20230801084324769.png" alt="image-20230801084324769"></p></li><li><p>信息熵与信息量的关系</p><p>熵：描述混乱程度的量纲</p><p>信息熵：平均而言发生一个事件我们得到的信息量的大小（得到的信息越多，已知的信息越少）</p><p>熵权法：是一种可以多对象、多指标进行综合评价的方法，其评价数据来源于数据本身，基本不受主观因素干扰</p><p>基本思想：信息熵小—&gt;得到的信息少，掌握的信息多—&gt;这组信息越靠谱—&gt;权重大</p></li></ol><h2 id="熵权法—定义">熵权法—定义</h2><h3 id="信息熵的定义">信息熵的定义</h3><h3 id="image-20230801085250308"><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20230801085250308.png" alt="image-20230801085250308"></h3><h3 id="信息熵的定性分析">信息熵的定性分析</h3><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20230801085829275.png" alt="image-20230801085829275"></p><h2 id="熵权法—步骤">熵权法—步骤</h2><h3 id="正向化处理">正向化处理</h3><blockquote><p><strong>（正向化处理算法并不是唯一的，可以根据实际情况得到更优的算法）</strong></p></blockquote><p>把各种评价指标进行正向化处理，一般是都正向化为极大型指标。</p><h4 id="指标的类型">指标的类型</h4><ol><li>极大型指标</li><li>极小型指标</li><li>中间型指标</li><li>区间型指标</li></ol><h4 id="对于不同类型指标的正向化处理">对于不同类型指标的正向化处理</h4><ol><li><p>极小型指标正向化</p><p>max-x</p><p>最大的值-每一项</p></li><li><p>中间型指标</p><p>M=max{|<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>x</mi><mi>i</mi></msub><mo>−</mo><msub><mi>x</mi><mrow><mi>b</mi><mi>e</mi><mi>s</mi><mi>t</mi></mrow></msub></mrow><annotation encoding="application/x-tex">x_i-x_{best}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">b</span><span class="mord mathnormal mtight">es</span><span class="mord mathnormal mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>|}   先用每一项减去最好的一项，再取最大值</p><p>然后再令各个元素  <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mover accent="true"><mi>x</mi><mo stretchy="true">~</mo></mover><mo>=</mo><mn>1</mn><mo>−</mo><mfrac><mrow><mi mathvariant="normal">∣</mi><msub><mi>x</mi><mi>i</mi></msub><mo>−</mo><msub><mi>x</mi><mrow><mi>b</mi><mi>e</mi><mi>s</mi><mi>t</mi></mrow></msub><mi mathvariant="normal">∣</mi></mrow><mi>M</mi></mfrac></mrow><annotation encoding="application/x-tex">\widetilde{x}=1-\frac{|x_i-x_{best}|}{M}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6906em;"></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6906em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal">x</span></span><span class="svg-align" style="width:calc(100% - 0.0556em);margin-left:0.0556em;top:-3.4306em;"><span class="pstrut" style="height:3em;"></span><span style="height:0.26em;"><svg xmlns="http://www.w3.org/2000/svg" width='100%' height='0.26em' viewBox='0 0 600 260' preserveAspectRatio='none'><path d='M200 55.538c-77 0-168 73.953-177 73.953-3 0-7-2.175-9-5.437L2 97c-1-2-2-4-2-6 0-4 2-7 5-9l20-12C116 12 171 0 207 0c86 0 114 68 191 68 78 0 168-68 177-68 4 0 7 2 9 5l12 19c1 2.175 2 4.35 2 6.525 0 4.35-2 7.613-5 9.788l-19 13.05c-92 63.077-116.937 75.308-183 76.128-68.267.847-113-73.952-191-73.952z'/></svg></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.7278em;vertical-align:-0.0833em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.355em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.01em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">M</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.485em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">∣</span><span class="mord mtight"><span class="mord mathnormal mtight">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3281em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="mbin mtight">−</span><span class="mord mtight"><span class="mord mathnormal mtight">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3488em;margin-left:0em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">b</span><span class="mord mathnormal mtight">es</span><span class="mord mathnormal mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.1512em;"><span></span></span></span></span></span></span><span class="mord mtight">∣</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></p></li><li><p>区间型指标</p><p>先计算最值到边界的最大距离 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>M</mi><mo>=</mo><mi>m</mi><mi>a</mi><mi>x</mi><mo stretchy="false">{</mo><mi>a</mi><mo>−</mo><mi>m</mi><mi>i</mi><mi>n</mi><mo stretchy="false">{</mo><msub><mi>x</mi><mi>i</mi></msub><mo stretchy="false">}</mo><mo separator="true">,</mo><mi>m</mi><mi>a</mi><mi>x</mi><mo stretchy="false">{</mo><msub><mi>x</mi><mi>i</mi></msub><mo stretchy="false">}</mo><mo>−</mo><mi>b</mi><mo stretchy="false">}</mo></mrow><annotation encoding="application/x-tex">M=max\{a-min\{x_i\},max\{x_i\}-b\}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">ma</span><span class="mord mathnormal">x</span><span class="mopen">{</span><span class="mord mathnormal">a</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">min</span><span class="mopen">{</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">}</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">ma</span><span class="mord mathnormal">x</span><span class="mopen">{</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">}</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">b</span><span class="mclose">}</span></span></span></span></p><p>再令各个元素<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mover accent="true"><msub><mi>x</mi><mi>i</mi></msub><mo stretchy="true">~</mo></mover><mo>=</mo><mrow><mo fence="true">{</mo><mtable rowspacing="0.36em" columnalign="left left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mn>1</mn><mo>−</mo><mfrac><mrow><mi>a</mi><mo>−</mo><msub><mi>x</mi><mi>i</mi></msub></mrow><mi>M</mi></mfrac><mo separator="true">,</mo><msub><mi>x</mi><mi>i</mi></msub><mo>≤</mo><mi>a</mi></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mn>1</mn><mo separator="true">,</mo><mi>a</mi><mo>≤</mo><msub><mi>x</mi><mi>i</mi></msub><mo>≤</mo><mi>b</mi></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mn>1</mn><mo>−</mo><mfrac><mrow><msub><mi>x</mi><mi>i</mi></msub><mo>−</mo><mi>b</mi></mrow><mi>M</mi></mfrac><mo separator="true">,</mo><msub><mi>x</mi><mi>i</mi></msub><mo>≥</mo><mi>b</mi></mrow></mstyle></mtd></mtr></mtable></mrow></mrow><annotation encoding="application/x-tex">\widetilde{x_i}=\begin{cases}1-\frac{a-x_i}{M}, x_i\le a\\ 1 ,a\le x_i \le b\\ 1-\frac{x_i-b}{M},x_i \ge b \end{cases}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8406em;vertical-align:-0.15em;"></span><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.6906em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span><span class="svg-align" style="top:-3.4306em;"><span class="pstrut" style="height:3em;"></span><span style="height:0.26em;"><svg xmlns="http://www.w3.org/2000/svg" width='100%' height='0.26em' viewBox='0 0 600 260' preserveAspectRatio='none'><path d='M200 55.538c-77 0-168 73.953-177 73.953-3 0-7-2.175-9-5.437L2 97c-1-2-2-4-2-6 0-4 2-7 5-9l20-12C116 12 171 0 207 0c86 0 114 68 191 68 78 0 168-68 177-68 4 0 7 2 9 5l12 19c1 2.175 2 4.35 2 6.525 0 4.35-2 7.613-5 9.788l-19 13.05c-92 63.077-116.937 75.308-183 76.128-68.267.847-113-73.952-191-73.952z'/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:4.32em;vertical-align:-1.91em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.35em;"><span style="top:-2.2em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎩</span></span></span><span style="top:-2.192em;"><span class="pstrut" style="height:3.15em;"></span><span style="height:0.316em;width:0.8889em;"><svg xmlns="http://www.w3.org/2000/svg" width='0.8889em' height='0.316em' style='width:0.8889em' viewBox='0 0 888.89 316' preserveAspectRatio='xMinYMin'><path d='M384 0 H504 V316 H384z M384 0 H504 V316 H384z'/></svg></span></span><span style="top:-3.15em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎨</span></span></span><span style="top:-4.292em;"><span class="pstrut" style="height:3.15em;"></span><span style="height:0.316em;width:0.8889em;"><svg xmlns="http://www.w3.org/2000/svg" width='0.8889em' height='0.316em' style='width:0.8889em' viewBox='0 0 888.89 316' preserveAspectRatio='xMinYMin'><path d='M384 0 H504 V316 H384z M384 0 H504 V316 H384z'/></svg></span></span><span style="top:-4.6em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎧</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.85em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.41em;"><span style="top:-4.41em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8184em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">M</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.4101em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">a</span><span class="mbin mtight">−</span><span class="mord mtight"><span class="mord mathnormal mtight">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3281em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord mathnormal">a</span></span></span><span style="top:-2.97em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">a</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord mathnormal">b</span></span></span><span style="top:-1.53em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8962em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">M</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.4101em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3281em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="mbin mtight">−</span><span class="mord mathnormal mtight">b</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≥</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord mathnormal">b</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.91em;"><span></span></span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></p></li></ol><h3 id="标准化处理">标准化处理</h3><p>对正向化指标进行标准化处理，得到<strong>标准化矩阵X</strong></p><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20230801094534031.png" alt="image-20230801094534031"></p><h3 id="计算各个指标下每个样本的比重">计算各个指标下每个样本的比重</h3><p>为了将不同标准放在同一个指标值范围内。</p><p>将标准化处理后得到的标准化矩阵进行处理，得到<strong>权重矩阵</strong></p><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20230801094901069.png" alt="image-20230801094901069"></p><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20230801094928634.png" alt="image-20230801094928634"></p><h3 id="计算信息熵和熵权">计算信息熵和熵权</h3><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20230801095421565.png" alt="image-20230801095421565"></p><p><strong>至此，权值确定完成</strong></p><h3 id="原理">原理</h3><p>信息熵越大，提供的信息量也越大，已经掌握的信息量就越少，信息可靠性越低，那么其对应的权值也低。</p><p>在权值确定的过程中，完全是分析已有的数据，没有引入主观敢于，具有较好的客观性。</p>]]></content>
      
      
      <categories>
          
          <category> 数学建模 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
            <tag> 数学建模 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>层次分析法</title>
      <link href="/2023/08/11/%E3%80%90%E6%95%B0%E5%AD%A6%E5%BB%BA%E6%A8%A1%E3%80%91%E8%AF%84%E4%BB%B7%E6%A8%A1%E5%9E%8B-1-%E5%B1%82%E6%AC%A1%E5%88%86%E6%9E%90%E6%B3%95/"/>
      <url>/2023/08/11/%E3%80%90%E6%95%B0%E5%AD%A6%E5%BB%BA%E6%A8%A1%E3%80%91%E8%AF%84%E4%BB%B7%E6%A8%A1%E5%9E%8B-1-%E5%B1%82%E6%AC%A1%E5%88%86%E6%9E%90%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<h1>层次分析法</h1><p>层次分析法是一种主观评价方法。通过相互比较确定各个准则相对于目标的权重，以及各个方案对于每一准则的权重，这些权重在人的思维过程中通常是定性的，而在层次分析法中要给出得到权重的定量方法。</p><p>如果要使用层次分析法，类似于下面的结构图要出现在论文里。</p><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20230718211648471.png" alt="image-20230718211648471"></p><h2 id="引例">引例</h2><p><strong>评价类问题</strong></p><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20230718203834717.png" alt="image-20230718203834717"></p><h2 id="层次分析法的基本框架">层次分析法的基本框架</h2><h3 id="层次分析法的基本三要素">层次分析法的基本三要素</h3><ol><li>评价目标是什么？</li><li>评价标准是什么？</li><li>可选方案有哪些？</li></ol><h2 id="层次分析法步骤">层次分析法步骤</h2><h3 id="确定指标的重要性">确定指标的重要性</h3><p>在确定指标权重时，有时有多个指标，同时考虑可能会导致考虑不周，可以先采用两两比较，在上一组比较的基础上进而推断当前两组的权重。</p><p><strong>这里采用两两比较法确定权重</strong></p><p>奇数用于表示确切的尺度，偶数用于表示介于两个确切评价之间的评价</p><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20230718203013275.png" alt="image-20230718203013275"></p><center><a id="table1" >评价尺度表</a></center><p>通过两两比较的评价得到<strong>4*4的评价矩阵</strong></p><p>将该矩阵的第i行第j列元素记为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>a</mi><mrow><mi>i</mi><mi>j</mi></mrow></msub></mrow><annotation encoding="application/x-tex">a_{ij}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7167em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">ij</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span></span></span></span></p><ul><li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>a</mi><mrow><mi>i</mi><mi>j</mi></mrow></msub></mrow><annotation encoding="application/x-tex">a_{ij}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7167em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">ij</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span></span></span></span>表示i相较于j的重要程度</li><li>当i=j时，规定<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>a</mi><mrow><mi>i</mi><mi>j</mi></mrow></msub><mo>=</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">a_{ij}=1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7167em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">ij</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span></span></span></span></li><li>当且仅当<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>a</mi><mrow><mi>i</mi><mi>j</mi></mrow></msub><mo>&gt;</mo><mn>0</mn><mo separator="true">,</mo><msub><mi>a</mi><mrow><mi>i</mi><mi>j</mi></mrow></msub><mo>×</mo><msub><mi>a</mi><mrow><mi>j</mi><mi>i</mi></mrow></msub><mo>=</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">a_{ij}&gt;0,a_{ij}\times a_{ji}=1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8252em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">ij</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&gt;</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.9305em;vertical-align:-0.2861em;"></span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">ij</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.7167em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">ji</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span></span></span></span>，该矩阵称为正互反矩阵</li></ul><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20230718203705840.png" alt="image-20230718203705840"></p><h3 id="确定待选方案在某一指标下的得分">确定待选方案在某一指标下的得分</h3><p>这一环节就是对各个备选方案进行打分，打分尺度按照上面的评价指标表。</p><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20230718235609596.png" alt="image-20230718235609596"></p><h3 id="层次分析法矩阵的一致性（用于检验评价矩阵是否矛盾）">层次分析法矩阵的一致性（用于检验评价矩阵是否矛盾）</h3><p>观察下面矩阵的问题</p><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20230719000711423.png" alt="image-20230719000711423"></p><h4 id="一致矩阵的性质">一致矩阵的性质</h4><ul><li>矩阵的秩为1，具有唯一的非0特征根</li><li>矩阵的任意一列向量都是对于特征根n的特征向量</li></ul><p>所以只要两两行/列满足倍数关系，就是一致矩阵（主元列只有一个）</p><p><strong>如果矩阵不满足上面的两个性质，则该矩阵是非一致性矩阵，在求权重时，非一致性矩阵和一致性矩阵有着不同的求解方法</strong></p><h4 id="一致矩阵的作用">一致矩阵的作用</h4><p>用于检查各个因素之间的比是否存在矛盾，所以在使用<strong>评价矩阵</strong>之前一定要检验其一致性</p><p>一致矩阵的判断方法：</p><ol><li>一致矩阵的性质</li><li>当评价矩阵不是一致矩阵时，算出其最大特征根x，x与n(矩阵的维数)的差越大，证明越不一致，越小则越一致。</li></ol><h4 id="一致性检验方法">一致性检验方法</h4><p>下面的<strong>随机一致性指标表</strong>可以放入论文。</p><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20230718213316162.png" alt="image-20230718213316162"></p><p>这里CR&lt;0.1可以理解为<strong>比随机产生的评价矩阵好10倍</strong></p><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20230718225739963.png" alt="image-20230718225739963"></p><h3 id="权重的计算">权重的计算</h3><h4 id="一致性矩阵求权重">一致性矩阵求权重</h4><p>直接对某一列进行归一化处理得到各个指标的权值，因为一致矩阵只有一个主元列，只需要求一列即可。</p><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20230719001020407.png" alt="image-20230719001020407"></p><h4 id="非一致性矩阵求权重">非一致性矩阵求权重</h4><ol><li><p>算术平均法求权重</p><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20230719001339169.png" alt="image-20230719001339169"></p><p>算数平均法求权重的论文表述：</p><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20230719001423779.png" alt="image-20230719001423779"></p></li><li><p><strong>特征值法求权重（更加常用，也更简单）</strong></p><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20230719001550804.png" alt="image-20230719001550804"></p></li><li><p>两种求权值方法的区别和联系</p><p>在非一致性不大的情况下，两种方法差别不大。实际生活中的数据，一致性并非很强，一般建议用特征值法求权重，特征值法方便且常用。</p><p>如果论文字数不够，也可以用这个来凑字数，两种方法都用，然后求平均值得到最终权重。</p></li></ol><h4 id="确定最终各个方案的权重得分">确定最终各个方案的权重得分</h4><ol><li><p>根据所得的各个指标下的评价矩阵求其权重，得到各个指标下各个目的地的权重得分；</p></li><li><p>根据各个指标的评价矩阵求其权重，得到各个指标的权重得分；</p></li><li><p>各个目的地的最终得分：</p><p>比如目的地1的得分=指标1下目的地1的权重*指标1的权重+指标2下目的地1的权重*指标2的权重…</p><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20230719002648044.png" alt="image-20230719002648044"></p><p><strong>上面这个表格我们也要写在论文里，最后两列CI和CR也要列出来。其中CR是常量，去找对应矩阵维数的表就行，CI是计算出来的矩阵一致性指标</strong></p></li></ol><h4 id="层次总排序的一致性检验">层次总排序的一致性检验</h4><p>得到最终的得分表后，也要对最后的得分表进行一致性检验。</p><p>方法：CR=每一行指标的权重*CI(一致性评价指标系数)求和/每一行的指标权重*RI(随机性评价指标系数)求和</p><p>​如果得到的CR&lt;0.1，则通过一致性检验。</p><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20230719003206657.png" alt="image-20230719003206657"></p><h2 id="层次分析法总结">层次分析法总结</h2><ol><li><p>层次分析法解决的是评价类问题</p></li><li><p>画出层级结构图（目标层、准则层、方案层）  （<strong>层级结构图需要放在论文里</strong>）</p></li><li><p><strong>确定评价指标</strong>，构造评价矩阵（<strong>评价尺度表需要放在论文里</strong>）</p><p>确定评价指标可以去做问卷、访问专家、学术论文上面找已经成熟的指标体系…</p></li><li><p>依照评价指标对各个方案进行打分（<strong>一致性指标系数CI求解的公式过程、随机性指标系数RI常量表、一致性比例CR求解的公式过程都需要放在论文里</strong>）</p></li><li><p>求出权重、填表、求出最后得分（<strong>最终的得分表需要放在论文里</strong>）</p></li><li><p>层次总排序一致性检验（<strong>最后的一致性检验公式也要放在论文里</strong>）</p></li><li><p>可以搜一搜相关层次分析的高引论文，看别人如何组织、如何写。</p></li></ol><h2 id="相关画图工具">相关画图工具</h2><ul><li>processon网站</li><li>亿图</li><li>wps也可以画那个结构图</li></ul>]]></content>
      
      
      <categories>
          
          <category> 数学建模 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
            <tag> 数学建模 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>神经网络分类</title>
      <link href="/2023/08/10/%E3%80%90%E6%95%B0%E5%AD%A6%E5%BB%BA%E6%A8%A1%E3%80%91%E5%88%86%E7%B1%BB%E6%A8%A1%E5%9E%8B-4-%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C%E5%88%86%E7%B1%BB/"/>
      <url>/2023/08/10/%E3%80%90%E6%95%B0%E5%AD%A6%E5%BB%BA%E6%A8%A1%E3%80%91%E5%88%86%E7%B1%BB%E6%A8%A1%E5%9E%8B-4-%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C%E5%88%86%E7%B1%BB/</url>
      
        <content type="html"><![CDATA[<h1>神经网络分类</h1><h2 id="背景">背景</h2><p>分类也有不同的种类，在机器学习中，有监督学习的分类和无监督学习的分类就是不同的两类分类方法。</p><ul><li><p>有监督学习：样本数据已经给出了正确的分类，通过对正确分类的样本数据进行学习，从中总结规律、获取知识、付诸应用。</p><p>监督学习的样本数据提供了特征值和目标值，通过回归、<strong>分类</strong>学习特征值和目标值之间的关系。</p></li><li><p>无监督学习：样本数据没有提供确定的分类属性，样本数据中只有特征值没有目标值，只能通过样本数据本身的特性进行摸索和学习，通过<strong>聚类</strong>方法来寻找和认识对象的相似性。</p></li></ul><p>所以分类和聚类是有差别的。</p><h2 id="聚类分析">聚类分析</h2><h3 id="聚类的分类">聚类的分类</h3><p>聚类是从数据分析的角度，对大量的、多维度的、无标记的样本数据集，按照样本数据自身的相似性对数据集进行分类。</p><ul><li>大量：数据数量大</li><li>多维：样本特征值多</li><li>无标记：样本数据对于每个样本没有指定的类别属性</li></ul><p>对于聚类的分类，是针对研究对象的不同来说的。把样本的行作为对象，考察样本的相似度，将样本集分成若干类，称为Q型聚类分析，属于样本分类。</p><p>把样本集的列作为对象，考察各个特征变量之间的关联程度，按照变量的相关性聚合为若干类，称为R型聚类分析，属于因子分析。</p>]]></content>
      
      
      <categories>
          
          <category> 数学建模 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
            <tag> 数学建模 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>模糊聚类(Fuzzy C-Means)</title>
      <link href="/2023/08/09/%E3%80%90%E6%95%B0%E5%AD%A6%E5%BB%BA%E6%A8%A1%E3%80%91%E5%88%86%E7%B1%BB%E6%A8%A1%E5%9E%8B-3-%E6%A8%A1%E7%B3%8A%E8%81%9A%E7%B1%BB/"/>
      <url>/2023/08/09/%E3%80%90%E6%95%B0%E5%AD%A6%E5%BB%BA%E6%A8%A1%E3%80%91%E5%88%86%E7%B1%BB%E6%A8%A1%E5%9E%8B-3-%E6%A8%A1%E7%B3%8A%E8%81%9A%E7%B1%BB/</url>
      
        <content type="html"><![CDATA[<h1>模糊聚类(Fuzzy C-Means)</h1><h2 id="学术性原理">学术性原理</h2><p>模糊聚类是将模糊理论与聚类理论结合的一种聚类方法，对于分类边界不清晰的情况较为灵活和适用。</p><p>这里介绍模糊C均值聚类(Fuzzy C-Means)方法，通过<strong>隶属度</strong>表示样本属于某一类的概率，很多情况下多个类别之间的界限并不是绝对的明确。</p><p>显然相比于K-Means的硬聚类，模糊C均值聚类得到的聚类结果更加灵活。</p><p>模糊C均值聚类通过最小化目标函数得到聚类中心：</p><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20230902144549420.png" alt="image-20230902144549420"></p><p>其中，m&gt;1为模糊系数(fuzzy coefficient)，N为样本数，C为聚类中心数，Cj表示第j个聚类中心，和样本特征维数相同，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>x</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">x_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>表示第i个样本，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>u</mi><mrow><mi>i</mi><mi>j</mi></mrow></msub></mrow><annotation encoding="application/x-tex">u_{ij}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7167em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord mathnormal">u</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">ij</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span></span></span></span>表示样本<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>x</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">x_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>对聚类中心<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>c</mi><mi>j</mi></msub></mrow><annotation encoding="application/x-tex">c_j</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7167em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord mathnormal">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span></span></span></span>的隶属度(通俗地说就是<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>x</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">x_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>属于<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>c</mi><mi>j</mi></msub></mrow><annotation encoding="application/x-tex">c_j</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7167em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord mathnormal">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span></span></span></span>的概率)，显然满足：</p><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20230902145513160.png" alt="image-20230902145513160"></p><p>||∗|| 可以是任意度量数据相似性(距离)的范数，最常见的就是欧几里得范数（又称欧氏范数，L2范数，欧氏距离）：</p><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20230902145606179.png" alt="image-20230902145606179"></p><p>模糊c均值聚类通过更新<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>U</mi><mrow><mi>i</mi><mi>j</mi></mrow></msub></mrow><annotation encoding="application/x-tex">U_{ij}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9694em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">U</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.109em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">ij</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span></span></span></span>和<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>C</mi><mi>j</mi></msub></mrow><annotation encoding="application/x-tex">C_{j}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9694em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0715em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span></span></span></span>来迭代地优化目标函数Eq.(1):</p><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20230902145807631.png" alt="image-20230902145807631"></p><p>迭代的终止条件为 $max_{ij}\lbrace\abs{u_{ij}^{(t+1)}-u_{ij}^{(t)}}\rbrace&lt;\epsilon <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mtext>，其中</mtext><mo>∗</mo><mi>t</mi><mo>∗</mo><mtext>是迭代步数，</mtext><mo>∗</mo><mi>ε</mi><mo>∗</mo><mtext>是一个很小的常数表示误差阈值。也就是说迭代地更新</mtext></mrow><annotation encoding="application/x-tex">，其中 *t* 是迭代步数，*ε* 是一个很小的常数表示误差阈值。也就是说迭代地更新</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord cjk_fallback">，其中</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6151em;"></span><span class="mord mathnormal">t</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord cjk_fallback">是迭代步数，</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.4653em;"></span><span class="mord mathnormal">ε</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord cjk_fallback">是一个很小的常数表示误差阈值。也就是说迭代地更新</span></span></span></span>U_{ij}<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mtext>和</mtext></mrow><annotation encoding="application/x-tex">和</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord cjk_fallback">和</span></span></span></span>C_j<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mtext>直到前后两次隶属度最大变化值不超过误差阈值。这个过程</mtext><mo>∗</mo><mo>∗</mo><mtext>最终收敛于</mtext></mrow><annotation encoding="application/x-tex">直到前后两次隶属度最大变化值不超过误差阈值。这个过程**最终收敛于</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord cjk_fallback">直到前后两次隶属度最大变化值不超过误差阈值。这个过程</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord">∗</span><span class="mord cjk_fallback">最终收敛于</span></span></span></span>J_m$的局部极小值点或鞍点**。</p><h2 id="原理简介">原理简介</h2><p>FCM算法是一种基于划分的聚类算法，核心思想是使得被划分到同一簇的对象之间相似度最大，而不同簇之间相似度最小。模糊C均值算法是普通C均值算法的改进，相比于普通算法对数据的硬划分，FCM是一种模糊的柔性划分。</p><h3 id="基本概念">基本概念</h3><h4 id="迭代">迭代</h4><p>迭代是数值分析中通过从一个初始估计出发寻找一系列近似解来解决问题的过程，其目的通常是为了逼近所需目标或结果。每一次对过程的重复称为一次”迭代”，而每一次迭代得到的结果会作为下一次迭代的初始值。在FCM聚类算法中，迭代的目的就是不断优化，使结果无限接近目标函数。</p><p><strong>注意：迭代时需要有一个条件来对迭代过程进行控制，保证迭代过程不会无休止的进行。</strong></p><h4 id="隶属度函数">隶属度函数</h4><p>隶属度函数表示一个对象x隶属于集合A的程度，通常记作<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>μ</mi><mi>A</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\mu A(x)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">μ</span><span class="mord mathnormal">A</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span></span></span></span>，其自变量范围是所有可能属于集合A的对象，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>μ</mi><mi>A</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\mu A(x)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">μ</span><span class="mord mathnormal">A</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span></span></span></span>的取值范围为[0,1]。越接近1隶属度越高。</p><h4 id="模糊集合">模糊集合</h4><p>一个定义在X={x}的隶属度函数就定义了一个模糊集合A，即这个模糊集合里的元素对某一标准的隶属度是基本相近的。聚类问题中可以把聚类生成的簇看成一个个模糊集合，因此每个样本对簇的隶属度就在[0，1]内。</p><h4 id="聚类中心">聚类中心</h4><p>就是簇的分类标准。一般有两种选取聚类中心的方法。</p><ol><li>经典做法：从所有数据点中任取c个点作为聚类中心，前提是要使得价值函数(目标函数)达到最小。</li><li>每次选簇的均值作为新的中心，迭代直到簇中的对象的分布不再发生变化。（缺点：对离群点敏感）</li></ol><h4 id="相似度算法——欧几里德距离">相似度算法——欧几里德距离</h4><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>d</mi><mo>=</mo><msqrt><mrow><mo stretchy="false">(</mo><msub><mi>x</mi><mn>1</mn></msub><mo>−</mo><msub><mi>y</mi><mn>1</mn></msub><msup><mo stretchy="false">)</mo><mn>2</mn></msup><mo>+</mo><mo stretchy="false">(</mo><msub><mi>x</mi><mn>2</mn></msub><mo>−</mo><msub><mi>y</mi><mn>2</mn></msub><msup><mo stretchy="false">)</mo><mn>2</mn></msup><mo>+</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo>+</mo><mo stretchy="false">(</mo><msub><mi>x</mi><mi>n</mi></msub><mo>−</mo><msub><mi>y</mi><mi>n</mi></msub><msup><mo stretchy="false">)</mo><mn>2</mn></msup></mrow></msqrt><mo>=</mo><msqrt><mrow><msubsup><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></msubsup><mo stretchy="false">(</mo><msub><mi>x</mi><mi>i</mi></msub><mo>−</mo><msub><mi>y</mi><mi>i</mi></msub><msup><mo stretchy="false">)</mo><mn>2</mn></msup></mrow></msqrt></mrow><annotation encoding="application/x-tex">d=\sqrt{(x_1-y_1)^2+(x_2-y_2)^2+...+(x_n-y_n)^2}=\sqrt{\sum_{i=1}^{n}(x_i-y_i)^2}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal">d</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.24em;vertical-align:-0.305em;"></span><span class="mord sqrt"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.935em;"><span class="svg-align" style="top:-3.2em;"><span class="pstrut" style="height:3.2em;"></span><span class="mord" style="padding-left:1em;"><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7401em;"><span style="top:-2.989em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7401em;"><span style="top:-2.989em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord">...</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7401em;"><span style="top:-2.989em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span><span style="top:-2.895em;"><span class="pstrut" style="height:3.2em;"></span><span class="hide-tail" style="min-width:1.02em;height:1.28em;"><svg xmlns="http://www.w3.org/2000/svg" width='400em' height='1.28em' viewBox='0 0 400000 1296' preserveAspectRatio='xMinYMin slice'><path d='M263,681c0.7,0,18,39.7,52,119c34,79.3,68.167,158.7,102.5,238c34.3,79.3,51.8,119.3,52.5,120c340,-704.7,510.7,-1060.3,512,-1067l0 -0c4.7,-7.3,11,-11,19,-11H40000v40H1012.3s-271.3,567,-271.3,567c-38.7,80.7,-84,175,-136,283c-52,108,-89.167,185.3,-111.5,232c-22.3,46.7,-33.8,70.3,-34.5,71c-4.7,4.7,-12.3,7,-23,7s-12,-1,-12,-1s-109,-253,-109,-253c-72.7,-168,-109.3,-252,-110,-252c-10.7,8,-22,16.7,-34,26c-22,17.3,-33.3,26,-34,26s-26,-26,-26,-26s76,-59,76,-59s76,-60,76,-60zM1001 80h400000v40h-400000z'/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.305em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.24em;vertical-align:-0.3027em;"></span><span class="mord sqrt"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9373em;"><span class="svg-align" style="top:-3.2em;"><span class="pstrut" style="height:3.2em;"></span><span class="mord" style="padding-left:1em;"><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:0em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8043em;"><span style="top:-2.4003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2997em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7401em;"><span style="top:-2.989em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span><span style="top:-2.8973em;"><span class="pstrut" style="height:3.2em;"></span><span class="hide-tail" style="min-width:1.02em;height:1.28em;"><svg xmlns="http://www.w3.org/2000/svg" width='400em' height='1.28em' viewBox='0 0 400000 1296' preserveAspectRatio='xMinYMin slice'><path d='M263,681c0.7,0,18,39.7,52,119c34,79.3,68.167,158.7,102.5,238c34.3,79.3,51.8,119.3,52.5,120c340,-704.7,510.7,-1060.3,512,-1067l0 -0c4.7,-7.3,11,-11,19,-11H40000v40H1012.3s-271.3,567,-271.3,567c-38.7,80.7,-84,175,-136,283c-52,108,-89.167,185.3,-111.5,232c-22.3,46.7,-33.8,70.3,-34.5,71c-4.7,4.7,-12.3,7,-23,7s-12,-1,-12,-1s-109,-253,-109,-253c-72.7,-168,-109.3,-252,-110,-252c-10.7,8,-22,16.7,-34,26c-22,17.3,-33.3,26,-34,26s-26,-26,-26,-26s76,-59,76,-59s76,-60,76,-60zM1001 80h400000v40h-400000z'/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3027em;"><span></span></span></span></span></span></span></span></span></p><p>欧几里德距离越小相似度越大。</p><h4 id="价值函数-目标函数">价值函数/目标函数</h4><p>目标函数的本质是各个点到个各类的欧式距离的和。</p><p>目标函数可以通过<strong>隶属度</strong>以及<strong>样本x到聚类中心的距离</strong>这两个量来直观衡量。（<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>u</mi><mrow><mi>i</mi><mi>j</mi></mrow></msub></mrow><annotation encoding="application/x-tex">u_{ij}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7167em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord mathnormal">u</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">ij</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span></span></span></span>是隶属度，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>d</mi><mrow><mi>i</mi><mi>j</mi></mrow></msub></mrow><annotation encoding="application/x-tex">d_{ij}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9805em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord mathnormal">d</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">ij</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span></span></span></span>是样本到聚类中心的距离）：</p><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>J</mi><mo>=</mo><msubsup><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>c</mi></msubsup><msubsup><mo>∑</mo><mrow><mi>j</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></msubsup><msubsup><mi>u</mi><mrow><mi>i</mi><mi>j</mi></mrow><mi>m</mi></msubsup><msubsup><mi>d</mi><mrow><mi>i</mi><mi>j</mi></mrow><mn>2</mn></msubsup></mrow><annotation encoding="application/x-tex">J=\sum_{i=1}^{c}\sum_{j=1}^{n}u_{ij}^md_{ij}^2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.09618em;">J</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.2499em;vertical-align:-0.4358em;"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:0em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8043em;"><span style="top:-2.4003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">c</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2997em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:0em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8043em;"><span style="top:-2.4003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.4358em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">u</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.6644em;"><span style="top:-2.4413em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">ij</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">m</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3948em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">d</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-2.4413em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">ij</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3948em;"><span></span></span></span></span></span></span></span></span></span></p><p>该算法中C表示聚类数目，假设有n个样本数据<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>x</mi><mi>j</mi></msub><mo stretchy="false">(</mo><mn>1</mn><mo separator="true">,</mo><mn>2</mn><mo separator="true">,</mo><mn>3</mn><mo separator="true">,</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo separator="true">,</mo><mi>j</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">x_j(1,2,3,...,j)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0361em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">2</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">3</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">...</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mclose">)</span></span></span></span>，每个数据有s个特征，将这n个数据划分为c组，算法输出一个C*N的矩阵U。</p><p>求每组的聚类中心ci，使得目标函数最小（因为目标函数与欧几里德距离有关，目标函数达到最小时，欧式距离最短，相似度最高），这保证了组内相似度最高，组间相似度最低的聚类原则。</p><p>于是我们得到最优解的表达式：</p><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>J</mi><mrow><mi>m</mi><mi>i</mi><mi>n</mi></mrow></msub><mo>=</mo><mo fence="false" stretchy="true" minsize="2.4em" maxsize="2.4em">(</mo><msubsup><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>c</mi></msubsup><msubsup><mo>∑</mo><mrow><mi>j</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></msubsup><msubsup><mi>μ</mi><mrow><mi>i</mi><mi>j</mi></mrow><mi>m</mi></msubsup><msubsup><mi>d</mi><mrow><mi>i</mi><mi>j</mi></mrow><mn>2</mn></msubsup><msub><mo fence="false" stretchy="true" minsize="2.4em" maxsize="2.4em">)</mo><mrow><mi>m</mi><mi>i</mi><mi>n</mi></mrow></msub></mrow><annotation encoding="application/x-tex">J_{min}=\bigg( \sum_{i=1}^{c}\sum_{j=1}^{n}\mu_{ij}^md_{ij}^2 \bigg)_{min}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.09618em;">J</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0962em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">min</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.4497em;vertical-align:-0.9997em;"></span><span class="mord"><span class="delimsizing size3">(</span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:0em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8043em;"><span style="top:-2.4003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">c</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2997em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:0em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8043em;"><span style="top:-2.4003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.4358em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">μ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.6644em;"><span style="top:-2.4413em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">ij</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">m</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3948em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">d</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-2.4413em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">ij</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3948em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord"><span class="delimsizing size3">)</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:-0.5381em;"><span style="top:-1.7003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">min</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9997em;"><span></span></span></span></span></span></span></span></span></span></p><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>d</mi><mrow><mi>i</mi><mi>j</mi></mrow></msub><mo>=</mo><msqrt><mrow><mo stretchy="false">(</mo><msub><mi>x</mi><mi>i</mi></msub><mo>−</mo><msub><mi>c</mi><mi>j</mi></msub><msup><mo stretchy="false">)</mo><mn>2</mn></msup></mrow></msqrt></mrow><annotation encoding="application/x-tex">d_{ij}=\sqrt{(x_i-c_j)^2}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9805em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord mathnormal">d</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">ij</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.24em;vertical-align:-0.3231em;"></span><span class="mord sqrt"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9169em;"><span class="svg-align" style="top:-3.2em;"><span class="pstrut" style="height:3.2em;"></span><span class="mord" style="padding-left:1em;"><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mord mathnormal">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7401em;"><span style="top:-2.989em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span><span style="top:-2.8769em;"><span class="pstrut" style="height:3.2em;"></span><span class="hide-tail" style="min-width:1.02em;height:1.28em;"><svg xmlns="http://www.w3.org/2000/svg" width='400em' height='1.28em' viewBox='0 0 400000 1296' preserveAspectRatio='xMinYMin slice'><path d='M263,681c0.7,0,18,39.7,52,119c34,79.3,68.167,158.7,102.5,238c34.3,79.3,51.8,119.3,52.5,120c340,-704.7,510.7,-1060.3,512,-1067l0 -0c4.7,-7.3,11,-11,19,-11H40000v40H1012.3s-271.3,567,-271.3,567c-38.7,80.7,-84,175,-136,283c-52,108,-89.167,185.3,-111.5,232c-22.3,46.7,-33.8,70.3,-34.5,71c-4.7,4.7,-12.3,7,-23,7s-12,-1,-12,-1s-109,-253,-109,-253c-72.7,-168,-109.3,-252,-110,-252c-10.7,8,-22,16.7,-34,26c-22,17.3,-33.3,26,-34,26s-26,-26,-26,-26s76,-59,76,-59s76,-60,76,-60zM1001 80h400000v40h-400000z'/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3231em;"><span></span></span></span></span></span></span></span></span></p><h4 id="加权指数m">加权指数m</h4><p>m实质是一个刻画模糊化程度的参数（m&gt;1），当m=1时模糊聚类就退化为HCM，研究表明最佳m的取值为[1,2.5]，一般m取2为宜。</p><h3 id="公示表">公示表</h3><ul><li>约束条件</li></ul><p>​<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msubsup><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>c</mi></msubsup><msub><mi>μ</mi><mrow><mi>i</mi><mi>j</mi></mrow></msub><mo>=</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">\sum_{i=1}^{c}\mu_{ij}=1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.104em;vertical-align:-0.2997em;"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:0em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8043em;"><span style="top:-2.4003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">c</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2997em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">μ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">ij</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span></span></span></span></p><ul><li>价值函数</li></ul><p>​<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>J</mi><mo>=</mo><msubsup><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>c</mi></msubsup><msubsup><mo>∑</mo><mrow><mi>j</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></msubsup><msubsup><mi>u</mi><mrow><mi>i</mi><mi>j</mi></mrow><mi>m</mi></msubsup><msubsup><mi>d</mi><mrow><mi>i</mi><mi>j</mi></mrow><mn>2</mn></msubsup></mrow><annotation encoding="application/x-tex">J=\sum_{i=1}^{c}\sum_{j=1}^{n}u_{ij}^md_{ij}^2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.09618em;">J</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.2499em;vertical-align:-0.4358em;"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:0em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8043em;"><span style="top:-2.4003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">c</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2997em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:0em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8043em;"><span style="top:-2.4003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.4358em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">u</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.6644em;"><span style="top:-2.4413em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">ij</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">m</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3948em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">d</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-2.4413em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">ij</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3948em;"><span></span></span></span></span></span></span></span></span></span></p><ul><li><p>聚类中心</p><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>c</mi><mi>i</mi></msub><mo>=</mo><mfrac><mrow><msubsup><mo>∑</mo><mrow><mi>j</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></msubsup><msubsup><mi>μ</mi><mrow><mi>i</mi><mi>j</mi></mrow><mi>m</mi></msubsup><msub><mi>x</mi><mi>j</mi></msub></mrow><mrow><msubsup><mo>∑</mo><mrow><mi>j</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></msubsup><msubsup><mi>μ</mi><mrow><mi>i</mi><mi>j</mi></mrow><mi>m</mi></msubsup></mrow></mfrac></mrow><annotation encoding="application/x-tex">c_i=\frac{\sum_{j=1}^n\mu_{ij}^mx_j}{\sum_{j=1}^n\mu_{ij}^m}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.825em;vertical-align:-0.6678em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.1572em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mop mtight"><span class="mop op-symbol small-op mtight" style="position:relative;top:0em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.7047em;"><span style="top:-2.1786em;margin-left:0em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-2.8971em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.4603em;"><span></span></span></span></span></span></span><span class="mspace mtight" style="margin-right:0.1952em;"></span><span class="mord mtight"><span class="mord mathnormal mtight">μ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.6523em;"><span style="top:-2.1777em;margin-left:0em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">ij</span></span></span></span><span style="top:-2.8448em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight">m</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.4612em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.6322em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mop mtight"><span class="mop op-symbol small-op mtight" style="position:relative;top:0em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.7385em;"><span style="top:-2.1786em;margin-left:0em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-2.931em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.4603em;"><span></span></span></span></span></span></span><span class="mspace mtight" style="margin-right:0.1952em;"></span><span class="mord mtight"><span class="mord mathnormal mtight">μ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.7385em;"><span style="top:-2.214em;margin-left:0em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">ij</span></span></span></span><span style="top:-2.931em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight">m</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.4249em;"><span></span></span></span></span></span></span><span class="mord mtight"><span class="mord mathnormal mtight">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3281em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2819em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.6678em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></p></li><li><p>隶属矩阵</p><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>U</mi><mrow><mi>i</mi><mi>j</mi></mrow></msub><mo>=</mo><mfrac><mn>1</mn><mrow><msubsup><mo>∑</mo><mrow><mi>k</mi><mo>=</mo><mn>1</mn></mrow><mi>c</mi></msubsup><mo fence="false" stretchy="true" minsize="1.2em" maxsize="1.2em">(</mo><mfrac><msub><mi>d</mi><mrow><mi>i</mi><mi>j</mi></mrow></msub><msub><mi>d</mi><mrow><mi>k</mi><mi>j</mi></mrow></msub></mfrac><msup><mo fence="false" stretchy="true" minsize="1.2em" maxsize="1.2em">)</mo><mfrac><mn>2</mn><mrow><mi>m</mi><mo>−</mo><mn>1</mn></mrow></mfrac></msup></mrow></mfrac></mrow><annotation encoding="application/x-tex">U_{ij}=\frac{1}{\sum_{k=1}^c\big(\frac{d_{ij}}{d_{kj}}\big)^{\frac{2}{m-1}}}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9694em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">U</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.109em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">ij</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.2867em;vertical-align:-1.4416em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8451em;"><span style="top:-2.19em;"><span class="pstrut" style="height:3.1187em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mop mtight"><span class="mop op-symbol small-op mtight" style="position:relative;top:0em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.7047em;"><span style="top:-2.1786em;margin-left:0em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-2.8971em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight">c</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3214em;"><span></span></span></span></span></span></span><span class="mspace mtight" style="margin-right:0.1952em;"></span><span class="mord sizing reset-size3 size6 mtight"><span class="delimsizing size1 mtight"><span class="mtight">(</span></span></span><span class="mord mtight"><span class="mopen nulldelimiter sizing reset-size3 size6"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.1832em;"><span style="top:-2.656em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight">d</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3448em;margin-left:0em;margin-right:0.1em;"><span class="pstrut" style="height:2.6944em;"></span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">kj</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.5441em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.2255em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line mtight" style="border-bottom-width:0.049em;"></span></span><span style="top:-3.6872em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight">d</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3448em;margin-left:0em;margin-right:0.1em;"><span class="pstrut" style="height:2.6595em;"></span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">ij</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.5092em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.7326em;"><span></span></span></span></span></span><span class="mclose nulldelimiter sizing reset-size3 size6"></span></span><span class="mord mtight"><span class="mord sizing reset-size3 size6 mtight"><span class="delimsizing size1 mtight"><span class="mtight">)</span></span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:1.5982em;"><span style="top:-3.8614em;margin-right:0.0714em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mopen nulldelimiter sizing reset-size1 size6"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0314em;"><span style="top:-2.468em;"><span class="pstrut" style="height:3em;"></span><span class="mord mtight"><span class="mord mathnormal mtight">m</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span><span style="top:-3.2255em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line mtight" style="border-bottom-width:0.049em;"></span></span><span style="top:-3.387em;"><span class="pstrut" style="height:3em;"></span><span class="mord mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.6153em;"><span></span></span></span></span></span><span class="mclose nulldelimiter sizing reset-size1 size6"></span></span></span></span></span></span></span></span></span></span></span></span></span><span style="top:-3.3487em;"><span class="pstrut" style="height:3.1187em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.5127em;"><span class="pstrut" style="height:3.1187em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.4416em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></p></li></ul><h3 id="算法步骤">算法步骤</h3><ol><li>用值0，1间的值随机数初始化隶属矩阵U，使其满足约束条件。</li><li>用聚类中心公式计算出c个聚类中心<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>c</mi><mi>i</mi></msub><mo stretchy="false">(</mo><mi>i</mi><mo>=</mo><mn>1</mn><mo separator="true">,</mo><mn>2</mn><mo separator="true">,</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo separator="true">,</mo><mi>c</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">c_i(i=1,2,...,c)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">2</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">...</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">c</span><span class="mclose">)</span></span></span></span></li><li>根据价值函数计算价值J，如果它小于某个特定的阈值或者它相对于上次价值函数值的改变量小于某个阈值<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>ϵ</mi></mrow><annotation encoding="application/x-tex">\epsilon</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">ϵ</span></span></span></span>，则算法停止</li><li>用隶属矩阵公式，重新计算隶属矩阵每个点的值，得到新的隶属矩阵</li></ol><h2 id="Python代码实现">Python代码实现</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/python3</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">@Date    : 2019/9/11</span></span><br><span class="line"><span class="string">@Author  : Rezero</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">loadData</span>(<span class="params">datapath</span>):</span><br><span class="line">    data = pd.read_csv(datapath, sep=<span class="string">&#x27;,&#x27;</span>, header=<span class="literal">None</span>)</span><br><span class="line">    data = data.sample(frac=<span class="number">1.0</span>)   <span class="comment"># 打乱数据顺序</span></span><br><span class="line">    dataX = data.iloc[:, :-<span class="number">1</span>].values <span class="comment"># 特征</span></span><br><span class="line">    labels = data.iloc[:, -<span class="number">1</span>].values <span class="comment"># 标签</span></span><br><span class="line">    <span class="comment"># 将标签类别用 0, 1, 2表示</span></span><br><span class="line">    labels[np.where(labels == <span class="string">&quot;Iris-setosa&quot;</span>)] = <span class="number">0</span></span><br><span class="line">    labels[np.where(labels == <span class="string">&quot;Iris-versicolor&quot;</span>)] = <span class="number">1</span></span><br><span class="line">    labels[np.where(labels == <span class="string">&quot;Iris-virginica&quot;</span>)] = <span class="number">2</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> dataX, labels</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">initialize_U</span>(<span class="params">samples, classes</span>):</span><br><span class="line">    U = np.random.rand(samples, classes)  <span class="comment"># 先生成随机矩阵</span></span><br><span class="line">    sumU = <span class="number">1</span> / np.<span class="built_in">sum</span>(U, axis=<span class="number">1</span>)   <span class="comment"># 求每行的和</span></span><br><span class="line">    U = np.multiply(U.T, sumU)   <span class="comment"># 使隶属度矩阵每一行和为1</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> U.T</span><br><span class="line"></span><br><span class="line"><span class="comment"># 计算样本和簇中心的距离，这里使用欧氏距离</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">distance</span>(<span class="params">X, centroid</span>):</span><br><span class="line">    <span class="keyword">return</span> np.sqrt(np.<span class="built_in">sum</span>((X-centroid)**<span class="number">2</span>, axis=<span class="number">1</span>))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">computeU</span>(<span class="params">X, centroids, m=<span class="number">2</span></span>):</span><br><span class="line">    sampleNumber = X.shape[<span class="number">0</span>]  <span class="comment"># 样本数</span></span><br><span class="line">    classes = <span class="built_in">len</span>(centroids)</span><br><span class="line">    U = np.zeros((sampleNumber, classes))</span><br><span class="line">    <span class="comment"># 更新隶属度矩阵</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(classes):</span><br><span class="line">        <span class="keyword">for</span> k <span class="keyword">in</span> <span class="built_in">range</span>(classes):</span><br><span class="line">            U[:, i] += (distance(X, centroids[i]) / distance(X, centroids[k])) ** (<span class="number">2</span> / (m - <span class="number">1</span>))</span><br><span class="line">    U = <span class="number">1</span> / U</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> U</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">ajustCentroid</span>(<span class="params">centroids, U, labels</span>):</span><br><span class="line">    newCentroids = [[], [], []]</span><br><span class="line">    curr = np.argmax(U, axis=<span class="number">1</span>)  <span class="comment"># 当前中心顺序得到的标签</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(centroids)):</span><br><span class="line">        index = np.where(curr == i)   <span class="comment"># 建立中心和类别的映射</span></span><br><span class="line">        trueLabel = <span class="built_in">list</span>(labels[index])  <span class="comment"># 获取labels[index]出现次数最多的元素，就是真实类别</span></span><br><span class="line">        trueLabel = <span class="built_in">max</span>(<span class="built_in">set</span>(trueLabel), key=trueLabel.count)</span><br><span class="line">        newCentroids[trueLabel] = centroids[i]</span><br><span class="line">    <span class="keyword">return</span> newCentroids</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">cluster</span>(<span class="params">data, labels, m, classes, EPS</span>):</span><br><span class="line">    <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    :param data: 数据集</span></span><br><span class="line"><span class="string">    :param m: 模糊系数(fuzziness coefficient)</span></span><br><span class="line"><span class="string">    :param classes: 类别数</span></span><br><span class="line"><span class="string">    :return: 聚类中心</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line">    sampleNumber = data.shape[<span class="number">0</span>]  <span class="comment"># 样本数</span></span><br><span class="line">    cNumber = data.shape[<span class="number">1</span>]       <span class="comment"># 特征数</span></span><br><span class="line">    U = initialize_U(sampleNumber, classes)   <span class="comment"># 初始化隶属度矩阵</span></span><br><span class="line">    U_old = np.zeros((sampleNumber, classes))</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        centroids = []</span><br><span class="line">        <span class="comment"># 更新簇中心</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(classes):</span><br><span class="line">            centroid = np.dot(U[:, i]**m, data) / (np.<span class="built_in">sum</span>(U[:, i]**m))</span><br><span class="line">            centroids.append(centroid)</span><br><span class="line"></span><br><span class="line">        U_old = U.copy()</span><br><span class="line">        U = computeU(data, centroids, m)  <span class="comment"># 计算新的隶属度矩阵</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> np.<span class="built_in">max</span>(np.<span class="built_in">abs</span>(U - U_old)) &lt; EPS:</span><br><span class="line">            <span class="comment"># 这里的类别和数据标签并不是一一对应的, 调整使得第i个中心表示第i类</span></span><br><span class="line">            centroids = ajustCentroid(centroids, U, labels)</span><br><span class="line">            <span class="keyword">return</span> centroids, U</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 预测所属的类别</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">predict</span>(<span class="params">X, centroids</span>):</span><br><span class="line">    labels = np.zeros(X.shape[<span class="number">0</span>])</span><br><span class="line">    U = computeU(X, centroids)  <span class="comment"># 计算隶属度矩阵</span></span><br><span class="line">    labels = np.argmax(U, axis=<span class="number">1</span>)  <span class="comment"># 找到隶属度矩阵中每行的最大值，即该样本最大可能所属类别</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> labels</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">main</span>():</span><br><span class="line">    datapath = <span class="string">&quot;iris.data&quot;</span></span><br><span class="line">    dataX, labels = loadData(datapath)  <span class="comment"># 读取数据</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 划分训练集和测试集</span></span><br><span class="line">    ratio = <span class="number">0.6</span>  <span class="comment"># 训练集的比例</span></span><br><span class="line">    trainLength = <span class="built_in">int</span>(dataX.shape[<span class="number">0</span>] * ratio)  <span class="comment"># 训练集长度</span></span><br><span class="line">    trainX = dataX[:trainLength, :]</span><br><span class="line">    trainLabels = labels[:trainLength]</span><br><span class="line">    testX = dataX[trainLength:, :]</span><br><span class="line">    testLabels = labels[trainLength:]</span><br><span class="line"></span><br><span class="line">    EPS = <span class="number">1e-6</span>   <span class="comment"># 停止误差条件</span></span><br><span class="line">    m = <span class="number">2</span>        <span class="comment"># 模糊因子</span></span><br><span class="line">    classes = <span class="number">3</span>  <span class="comment"># 类别数</span></span><br><span class="line">    <span class="comment"># 得到各类别的中心</span></span><br><span class="line">    centroids, U = cluster(trainX, trainLabels, m, classes, EPS)</span><br><span class="line"></span><br><span class="line">    trainLabels_prediction = predict(trainX, centroids)</span><br><span class="line">    testLabels_prediction = predict(testX, centroids)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    train_error = <span class="number">1</span> - np.<span class="built_in">sum</span>(np.<span class="built_in">abs</span>(trainLabels_prediction - trainLabels)) / trainLength</span><br><span class="line">    test_error = <span class="number">1</span> - np.<span class="built_in">sum</span>(np.<span class="built_in">abs</span>(testLabels_prediction - testLabels)) / (dataX.shape[<span class="number">0</span>] - trainLength)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;Clustering on traintset is %.2f%%&quot;</span> % (train_error*<span class="number">100</span>))</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;Clustering on testset is %.2f%%&quot;</span> % (test_error*<span class="number">100</span>))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    main()</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="单词积累">单词积累</h4><ol><li>centroid    数心，形心</li></ol><hr><h2 id="模糊聚类算法工具箱">模糊聚类算法工具箱</h2><p>github项目地址：</p><p><a href="https://github.com/ChoiNgai/FuzzyClustering">https://github.com/ChoiNgai/FuzzyClustering</a></p><p><strong>介绍：</strong></p><p>上面有常用的聚类算法提供使用，详细的使用教程，接口化操作。</p>]]></content>
      
      
      <categories>
          
          <category> 数学建模 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
            <tag> 数学建模 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>层次聚类</title>
      <link href="/2023/08/08/%E3%80%90%E6%95%B0%E5%AD%A6%E5%BB%BA%E6%A8%A1%E3%80%91%E5%88%86%E7%B1%BB%E6%A8%A1%E5%9E%8B-2-%E5%B1%82%E6%AC%A1%E8%81%9A%E7%B1%BB/"/>
      <url>/2023/08/08/%E3%80%90%E6%95%B0%E5%AD%A6%E5%BB%BA%E6%A8%A1%E3%80%91%E5%88%86%E7%B1%BB%E6%A8%A1%E5%9E%8B-2-%E5%B1%82%E6%AC%A1%E8%81%9A%E7%B1%BB/</url>
      
        <content type="html"><![CDATA[<h1>层次聚类</h1><h2 id="背景">背景</h2><p>聚类属于机器学习的无监督学习，聚类的方法有很多，比如K-means聚类、层次聚类。K-means聚类需要在聚类前确定簇数，这会因为个人的主观判断而导致分析结果的偏差。层次聚类通过对原始数据划分层次聚类，最终得出簇数，聚类结果较为客观。</p><h2 id="基本原理">基本原理</h2><p>每个数据点都是一簇，然后找到相似性最高的两个点进行聚类（看成新的一个簇参与聚类），不断迭代。</p><h2 id="具体算法">具体算法</h2><p>一般计算相似性的方法是计算距离。</p><h4 id="具体层次聚类步骤">具体层次聚类步骤</h4><ol><li><p>创建领近矩阵</p><ul><li>矩阵对角元素都为0，点与自身距离为0</li><li>使用欧几里得距离计算非对角元素的距离</li></ul></li><li><p>执行层次聚类</p><ol><li><p>将所有的点视为单个簇</p></li><li><p>找到领近矩阵中最小距离的点并且将这两个点合并</p><p>（即将这两个点视为一个簇，代替原来的两个簇）</p></li><li><p>新的簇的值可以是两个点中的最大值、最小值或者平均值或其他</p></li><li><p>重复2、3，直到只剩下一个簇</p></li></ol></li></ol><h4 id="选择聚类数">选择聚类数</h4><p>在层次聚类的过程中，每迭代一次，类别就少一层。我们应该选择多少簇的层次呢？</p><p>我们可以通过树状图方便地选出聚类的簇数。</p><p>当我们合并两个簇时，树状图会相应地记录这些簇之间的距离并以图形形式表示。下面这个是树状图的原始状态，横坐标记录了每个点的标记，纵轴记录了点和点之间的距离。</p><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20230902004004674.png" alt="image-20230902004004674"></p><p>聚类完成后，我们可以绘制树状图，树状图清晰地反映出聚类的过程。然后我们设置一个阈值距离，绘制一条水平线。水平线与树状图有多少个交点就是有多少个簇。例如下图：</p><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20230902004138689.png" alt="image-20230902004138689"></p><h2 id="Python代码实现">Python代码实现</h2><h4 id="数据集和代码仓库">数据集和代码仓库</h4><blockquote><p><a href="https://github.com/xiaoyusmd/PythonDataScience">https://github.com/xiaoyusmd/PythonDataScience</a></p><p>参考文章：<a href="https://cloud.tencent.com/developer/article/2014744">https://cloud.tencent.com/developer/article/2014744</a></p></blockquote><h4 id="代码">代码</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> sklearn.preprocessing <span class="keyword">import</span> normalize</span><br><span class="line">data_scaled = normalize(data)</span><br><span class="line">data_scaled = pd.DataFrame(data_scaled, columns=data.columns)</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> scipy.cluster.hierarchy <span class="keyword">as</span> shc</span><br><span class="line">plt.figure(figsize=(<span class="number">10</span>, <span class="number">7</span>))  </span><br><span class="line">plt.title(<span class="string">&quot;Dendrograms&quot;</span>)  </span><br><span class="line">dend = shc.dendrogram(shc.linkage(data_scaled, method=<span class="string">&#x27;ward&#x27;</span>))</span><br><span class="line">plt.axhline(y=<span class="number">6</span>, color=<span class="string">&#x27;r&#x27;</span>, linestyle=<span class="string">&#x27;--&#x27;</span>)<span class="comment">#划分阈值</span></span><br><span class="line"><span class="comment">#对新的簇进行聚类</span></span><br><span class="line"><span class="keyword">from</span> sklearn.cluster <span class="keyword">import</span> AgglomerativeClustering</span><br><span class="line">cluster = AgglomerativeClustering(n_clusters=<span class="number">2</span>, affinity=<span class="string">&#x27;euclidean&#x27;</span>, linkage=<span class="string">&#x27;ward&#x27;</span>)  </span><br><span class="line">cluster.fit_predict(data_scaled)</span><br><span class="line"><span class="comment">#画散点图</span></span><br><span class="line">plt.figure(figsize=(<span class="number">10</span>, <span class="number">7</span>))  </span><br><span class="line">plt.scatter(data_scaled[<span class="string">&#x27;Milk&#x27;</span>], data_scaled[<span class="string">&#x27;Grocery&#x27;</span>], c=cluster.labels_) </span><br></pre></td></tr></table></figure><h4 id="英文单词积累">英文单词积累</h4><ol><li><p>cluster    聚类;簇;(n/v)</p></li><li><p>hierarchy    等级、层次(n)</p></li><li><p>dendrogram     系统树图，树状图(n)</p></li><li><p>linkage    联系、联合(n)</p></li><li><p>agglomerative     凝聚的；凝结的(a)</p></li><li><p>affinity     喜好;类别;适配性;相似度(n)</p></li><li><p>euclidean     欧几里德的(a)</p></li><li><p>scatter      撒，播撒；使散开(v)</p><p>​离差；散点</p></li></ol><h4 id="可展示数据的图形">可展示数据的图形</h4><ol><li>树状图</li><li>散点图</li></ol>]]></content>
      
      
      <categories>
          
          <category> 数学建模 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
            <tag> 数学建模 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>K-means聚类</title>
      <link href="/2023/08/07/%E3%80%90%E6%95%B0%E5%AD%A6%E5%BB%BA%E6%A8%A1%E3%80%91%E5%88%86%E7%B1%BB%E6%A8%A1%E5%9E%8B-1-K-means%E8%81%9A%E7%B1%BB/"/>
      <url>/2023/08/07/%E3%80%90%E6%95%B0%E5%AD%A6%E5%BB%BA%E6%A8%A1%E3%80%91%E5%88%86%E7%B1%BB%E6%A8%A1%E5%9E%8B-1-K-means%E8%81%9A%E7%B1%BB/</url>
      
        <content type="html"><![CDATA[<h1>K-means聚类</h1><h2 id="简介">简介</h2><p>K-Means算法是最热门最广泛的聚类算法之一，属于<strong>无监督算法</strong>，即无明确类别、label，我们把相似的东西分到一个组寻找其中的规律。</p><p><strong>优点：</strong></p><ul><li>速度快</li><li>原理简单</li><li>对大数据有较好的伸缩性</li></ul><p><strong>缺点：</strong></p><ul><li>需要指定聚类数量k</li><li>对异常值敏感</li><li>对初始值敏感</li></ul><p><strong>聚类的应用：</strong></p><ol><li>市场分割</li><li>社交网络</li><li>组织计算集群</li><li>天文数据分析</li></ol><h2 id="算法原理">算法原理</h2><p>初始给定K个簇中心，按照邻近原则把待分类的点分到各个簇。然后按照平均法重新计算各个簇的质心，确定新的簇新。一直迭代直到簇心的移动距离小于某个阈值。</p><h2 id="实现步骤">实现步骤</h2><ol><li>为待聚类的点随机寻找聚类中心</li><li>计算每个点到聚类中心的距离，将各个点归类到离该点最近的聚类中去</li><li>计算每个聚类中所有点的坐标的平均值，并将这个平均值作为新的聚类中心</li><li>重复2、3步骤，直到聚类中心不再大范围移动或者聚类次数达到要求为止</li></ol><h4 id="Python代码实现">Python代码实现</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding:utf-8 -*-</span></span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">from</span> matplotlib <span class="keyword">import</span> pyplot</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">K_Means</span>(<span class="title class_ inherited__">object</span>):</span><br><span class="line">    <span class="comment"># k是分组数；tolerance‘中心点误差’；max_iter是迭代次数</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, k=<span class="number">2</span>, tolerance=<span class="number">0.0001</span>, max_iter=<span class="number">300</span></span>):</span><br><span class="line">        self.k_ = k</span><br><span class="line">        self.tolerance_ = tolerance</span><br><span class="line">        self.max_iter_ = max_iter</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">fit</span>(<span class="params">self, data</span>):</span><br><span class="line">        self.centers_ = &#123;&#125;</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(self.k_):</span><br><span class="line">            self.centers_[i] = data[i]</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(self.max_iter_):</span><br><span class="line">            self.clf_ = &#123;&#125;</span><br><span class="line">            <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(self.k_):</span><br><span class="line">                self.clf_[i] = []</span><br><span class="line">            <span class="comment"># print(&quot;质点:&quot;,self.centers_)</span></span><br><span class="line">            <span class="keyword">for</span> feature <span class="keyword">in</span> data:</span><br><span class="line">                <span class="comment"># distances = [np.linalg.norm(feature-self.centers[center]) for center in self.centers]</span></span><br><span class="line">                distances = []</span><br><span class="line">                <span class="keyword">for</span> center <span class="keyword">in</span> self.centers_:</span><br><span class="line">                    <span class="comment"># 欧拉距离</span></span><br><span class="line">                    <span class="comment"># np.sqrt(np.sum((features-self.centers_[center])**2))</span></span><br><span class="line">                    distances.append(np.linalg.norm(feature - self.centers_[center]))</span><br><span class="line">                classification = distances.index(<span class="built_in">min</span>(distances))</span><br><span class="line">                self.clf_[classification].append(feature)</span><br><span class="line"></span><br><span class="line">            <span class="comment"># print(&quot;分组情况:&quot;,self.clf_)</span></span><br><span class="line">            prev_centers = <span class="built_in">dict</span>(self.centers_)</span><br><span class="line">            <span class="keyword">for</span> c <span class="keyword">in</span> self.clf_:</span><br><span class="line">                self.centers_[c] = np.average(self.clf_[c], axis=<span class="number">0</span>)</span><br><span class="line"></span><br><span class="line">            <span class="comment"># &#x27;中心点&#x27;是否在误差范围</span></span><br><span class="line">            optimized = <span class="literal">True</span></span><br><span class="line">            <span class="keyword">for</span> center <span class="keyword">in</span> self.centers_:</span><br><span class="line">                org_centers = prev_centers[center]</span><br><span class="line">                cur_centers = self.centers_[center]</span><br><span class="line">                <span class="keyword">if</span> np.<span class="built_in">sum</span>((cur_centers - org_centers) / org_centers * <span class="number">100.0</span>) &gt; self.tolerance_:</span><br><span class="line">                    optimized = <span class="literal">False</span></span><br><span class="line">            <span class="keyword">if</span> optimized:</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">predict</span>(<span class="params">self, p_data</span>):</span><br><span class="line">        distances = [np.linalg.norm(p_data - self.centers_[center]) <span class="keyword">for</span> center <span class="keyword">in</span> self.centers_]</span><br><span class="line">        index = distances.index(<span class="built_in">min</span>(distances))</span><br><span class="line">        <span class="keyword">return</span> index</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    x = np.array([[<span class="number">1</span>, <span class="number">2</span>], [<span class="number">1.5</span>, <span class="number">1.8</span>], [<span class="number">5</span>, <span class="number">8</span>], [<span class="number">8</span>, <span class="number">8</span>], [<span class="number">1</span>, <span class="number">0.6</span>], [<span class="number">9</span>, <span class="number">11</span>]])</span><br><span class="line">    k_means = K_Means(k=<span class="number">2</span>)</span><br><span class="line">    k_means.fit(x)</span><br><span class="line">    <span class="built_in">print</span>(k_means.centers_)</span><br><span class="line">    <span class="keyword">for</span> center <span class="keyword">in</span> k_means.centers_:</span><br><span class="line">        pyplot.scatter(k_means.centers_[center][<span class="number">0</span>], k_means.centers_[center][<span class="number">1</span>], marker=<span class="string">&#x27;*&#x27;</span>, s=<span class="number">150</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> cat <span class="keyword">in</span> k_means.clf_:</span><br><span class="line">        <span class="keyword">for</span> point <span class="keyword">in</span> k_means.clf_[cat]:</span><br><span class="line">            pyplot.scatter(point[<span class="number">0</span>], point[<span class="number">1</span>], c=(<span class="string">&#x27;r&#x27;</span> <span class="keyword">if</span> cat == <span class="number">0</span> <span class="keyword">else</span> <span class="string">&#x27;b&#x27;</span>))</span><br><span class="line"></span><br><span class="line">    predict = [[<span class="number">2</span>, <span class="number">1</span>], [<span class="number">6</span>, <span class="number">9</span>]]</span><br><span class="line">    <span class="keyword">for</span> feature <span class="keyword">in</span> predict:</span><br><span class="line">        cat = k_means.predict(predict)</span><br><span class="line">        pyplot.scatter(feature[<span class="number">0</span>], feature[<span class="number">1</span>], c=(<span class="string">&#x27;r&#x27;</span> <span class="keyword">if</span> cat == <span class="number">0</span> <span class="keyword">else</span> <span class="string">&#x27;b&#x27;</span>), marker=<span class="string">&#x27;x&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    pyplot.show()</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 数学建模 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
            <tag> 数学建模 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>图论</title>
      <link href="/2023/08/06/%E3%80%90%E6%95%B0%E5%AD%A6%E5%BB%BA%E6%A8%A1%E3%80%91%E4%BC%98%E5%8C%96%E6%A8%A1%E5%9E%8B-6-%E5%9B%BE%E8%AE%BA%E4%BB%A5%E5%8F%8A%E6%9C%80%E5%B0%8F%E8%B7%AF%E5%BE%84%E9%97%AE%E9%A2%98/"/>
      <url>/2023/08/06/%E3%80%90%E6%95%B0%E5%AD%A6%E5%BB%BA%E6%A8%A1%E3%80%91%E4%BC%98%E5%8C%96%E6%A8%A1%E5%9E%8B-6-%E5%9B%BE%E8%AE%BA%E4%BB%A5%E5%8F%8A%E6%9C%80%E5%B0%8F%E8%B7%AF%E5%BE%84%E9%97%AE%E9%A2%98/</url>
      
        <content type="html"><![CDATA[<h1>图论</h1><h2 id="图论基本概念">图论基本概念</h2><p>图论以图为研究对象，是离散数学的重要内容。图论不仅与拓扑学、计算机数据结构和算法密切相关，而且正在成为机器学习的关键技术。</p><p>图论中的图，不是指图形图像或者地图，而是指由定点和连接定点的边所构成的关系结构。</p><p>图提供了一种处理关系和交互等抽象概念的更好方法，它还提供了直观的视觉方式来思考这些概念。</p><h2 id="Python的NetworkX工具包">Python的NetworkX工具包</h2><p>NetworkX是基于Python语言的图论与复杂网络的工具包，用于创建、操作和研究复杂网络的结构、动力学和功能。</p><p>NetworkX可以以标准和非标准的数据格式描述图与网络，生成图与网络，分析网络结构、构建网络模型，设计网络算法，绘制网络图形。</p><p>NetworkX提供了<strong>图形的类、对象、图形生成器、网络生成器、绘图工具</strong>、内置了常用的图论的网络分析算法，可以<strong>进行图和网络的建模、分析和仿真</strong>。</p><p>NetworkX的功能非常强大和庞杂，所涉及的内容远远超出了数学建模的范畴，但可以结合数学建模谈谈如何利用这个工具包解决一些基本问题，了解其中的经典算法。</p><p><img src="https://img-blog.csdnimg.cn/20210705201642751.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3lvdWNhbnM=,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p><h4 id="NetworkX的官网和文档">NetworkX的官网和文档</h4><ul><li>官方网址：<a href="https://networkx.org/">https://networkx.org/</a></li><li>官方文档：<a href="https://networkx.org/documentation/stable/">https://networkx.org/documentation/stable/</a></li><li>pdf文档：<a href="https://networkx.org/documentation/stable/_downloads/networkx_reference.pdf">https://networkx.org/documentation/stable/_downloads/networkx_reference.pdf</a></li></ul><h2 id="NetworkX基本使用">NetworkX基本使用</h2><h3 id="图、定点和边的创建与基本操作">图、定点和边的创建与基本操作</h3><p>图由顶点和连接定点的边构成，但与顶点的位置、边的曲直长短无关。NetworkX支持创建<strong>简单无向图、有向图和多重图</strong>；内置许多标准的图论算法，节点可以为任何数据；支持任意边值维度，功能丰富简单易用。</p><h3 id="图的基本概念">图的基本概念</h3><ul><li>图：若干顶点和连成顶点的边所构成的关系结构</li><li>顶点：图中的顶点，也称为节点</li><li>边：顶点之间的连线，也称为边</li><li>平行边：起点相同、终点也相同的两条边称为平行边</li><li>循环：起点和终点重合的边称为循环（自反）</li><li>有向图：图中的每条边都带有方向，成为有向图</li><li>无向图：图中的每条边都没有方向，成为无向图</li><li>赋权图：<strong>图中的每条边都有一个或多个对应的参数</strong>，称为赋权图。该参数称为这条边的权，<strong>权可以用来表示两点之间的距离、时间、费用</strong></li><li>度：与顶点项链的边的数量，称为该顶点的度</li></ul><h3 id="图、定点和边的操作">图、定点和边的操作</h3><p>Networkx很容易创建图、向图中添加顶点和边、从图中删除顶点和边，也可以查看、删除顶点和边的属性。</p><h4 id="图的创建">图的创建</h4><p>Graph() 类、DiGraph() 类、MultiGraph() 类和 MultiDiGraph() 类分别用来创建：无向图、有向图、多图和有向多图。定义和例程如下：</p><blockquote><p>class Graph(incoming_graph_data=None,**attr)</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> networkx <span class="keyword">as</span> nx</span><br><span class="line">G1 = nx.Graph() <span class="comment">#创建无向空图</span></span><br><span class="line">G2 = nx.DiGraph()</span><br><span class="line">G3 = nx.MultiGraph()</span><br><span class="line">G4 = nx.MultiDiGraph()</span><br></pre></td></tr></table></figure><h4 id="顶点的添加、删除、查看">顶点的添加、删除、查看</h4><p>每一个顶点都有唯一的标签属性（label），可以用整数或字符类型表示，顶点还可以自定义任意属性。</p><p>顶点的常用操作：添加顶点、删除顶点、定义顶点属性，查看顶点和顶点属性。定义和例程如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 顶点(node)的操作</span></span><br><span class="line"><span class="comment"># 向图中添加顶点</span></span><br><span class="line">G1.add_node(<span class="number">1</span>)  <span class="comment"># 向 G1 添加顶点 1</span></span><br><span class="line">G1.add_node(<span class="number">1</span>, name=<span class="string">&#x27;n1&#x27;</span>, weight=<span class="number">1.0</span>)  <span class="comment"># 添加顶点 1，定义 name, weight 属性</span></span><br><span class="line">G1.add_node(<span class="number">2</span>, date=<span class="string">&#x27;May-16&#x27;</span>) <span class="comment"># 添加顶点 2，定义 time 属性</span></span><br><span class="line">G1.add_nodes_from([<span class="number">3</span>, <span class="number">0</span>, <span class="number">6</span>], dist=<span class="number">1</span>)  <span class="comment"># 添加多个顶点，并定义属性</span></span><br><span class="line">G1.add_nodes_from(<span class="built_in">range</span>(<span class="number">10</span>, <span class="number">15</span>))  <span class="comment"># 向图 G1 添加顶点 10～14</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看顶点和顶点属性</span></span><br><span class="line"><span class="built_in">print</span>(G1.nodes())  <span class="comment"># 查看顶点列表</span></span><br><span class="line"><span class="comment"># [1, 2, 3, 0, 6, 10, 11, 12, 13, 14]</span></span><br><span class="line"><span class="built_in">print</span>(G1._node)  <span class="comment"># 查看顶点属性</span></span><br><span class="line"><span class="comment"># &#123;1: &#123;&#x27;name&#x27;: &#x27;n1&#x27;, &#x27;weight&#x27;: 1.0&#125;, 2: &#123;&#x27;date&#x27;: &#x27;May-16&#x27;&#125;, 3: &#123;&#x27;dist&#x27;: 1&#125;, 0: &#123;&#x27;dist&#x27;: 1&#125;, 6: &#123;&#x27;dist&#x27;: 1&#125;, 10: &#123;&#125;, 11: &#123;&#125;, 12: &#123;&#125;, 13: &#123;&#125;, 14: &#123;&#125;&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 从图中删除顶点</span></span><br><span class="line">G1.remove_node(<span class="number">1</span>)  <span class="comment"># 删除顶点</span></span><br><span class="line">G1.remove_nodes_from([<span class="number">1</span>, <span class="number">11</span>, <span class="number">13</span>, <span class="number">14</span>])  <span class="comment"># 通过顶点标签的 list 删除多个顶点</span></span><br><span class="line"><span class="built_in">print</span>(G1.nodes())  <span class="comment"># 查看顶点</span></span><br><span class="line"><span class="comment"># [2, 3, 0, 6, 10, 12]  # 顶点列表</span></span><br></pre></td></tr></table></figure><h4 id="边的添加、删除、查看">边的添加、删除、查看</h4><p>在NetworkX中，边是<strong>由对应顶点的名字的元组</strong>组成e=(node1,node2)。边可以设置权重、关系等属性。</p><p>边的常用操作：添加边、删除边、定义边的属性、查看边和边的属性。<strong>向图中添加边时，如果边的顶点是图中不存在的，则自动向图中添加该顶点。</strong></p><blockquote><p>Graph.add_edge(u_of_edge, v_of_edge, **attr)<br>Graph.add_edges_from(ebunch_to_add, **attr)<br>Graph.add_weighted_edges_from(ebunch_to_add, weight=‘weight’, **attr)</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 边(edge)的操作</span></span><br><span class="line"><span class="comment"># 向图中添加边</span></span><br><span class="line">G1.add_edge(<span class="number">1</span>,<span class="number">5</span>)  <span class="comment"># 向 G1 添加边，并自动添加图中没有的顶点</span></span><br><span class="line">G1.add_edge(<span class="number">0</span>,<span class="number">10</span>, weight=<span class="number">2.7</span>)  <span class="comment"># 向 G1 添加边，并设置边的属性</span></span><br><span class="line">G1.add_edges_from([(<span class="number">1</span>,<span class="number">2</span>,&#123;<span class="string">&#x27;weight&#x27;</span>:<span class="number">0</span>&#125;), (<span class="number">2</span>,<span class="number">3</span>,&#123;<span class="string">&#x27;color&#x27;</span>:<span class="string">&#x27;blue&#x27;</span>&#125;)])  <span class="comment"># 向图中添加边，并设置属性</span></span><br><span class="line">G1.add_edges_from([(<span class="number">3</span>,<span class="number">6</span>),(<span class="number">1</span>,<span class="number">2</span>),(<span class="number">6</span>,<span class="number">7</span>),(<span class="number">5</span>,<span class="number">10</span>),(<span class="number">0</span>,<span class="number">1</span>)])  <span class="comment"># 向图中添加多条边</span></span><br><span class="line">G1.add_weighted_edges_from([(<span class="number">1</span>,<span class="number">2</span>,<span class="number">3.6</span>),[<span class="number">6</span>,<span class="number">12</span>,<span class="number">0.5</span>]])  <span class="comment"># 向图中添加多条赋权边: (node1,node2,weight)</span></span><br><span class="line"><span class="built_in">print</span>(G1.nodes())  <span class="comment"># 查看顶点</span></span><br><span class="line"><span class="comment"># [2, 3, 0, 6, 10, 12, 1, 5, 7]  # 自动添加了图中没有的顶点</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 从图中删除边</span></span><br><span class="line">G1.remove_edge(<span class="number">0</span>,<span class="number">1</span>)  <span class="comment"># 从图中删除边 0-1</span></span><br><span class="line">G1.remove_edges_from([(<span class="number">2</span>,<span class="number">3</span>),(<span class="number">1</span>,<span class="number">5</span>),(<span class="number">6</span>,<span class="number">7</span>)])  <span class="comment"># 从图中删除多条边</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看 边和边的属性</span></span><br><span class="line"><span class="built_in">print</span>(G1.edges)  <span class="comment"># 查看所有的边</span></span><br><span class="line"><span class="comment">#[(2, 1), (3, 6), (0, 10), (6, 12), (10, 5)]</span></span><br><span class="line"><span class="built_in">print</span>(G1.get_edge_data(<span class="number">1</span>,<span class="number">2</span>))  <span class="comment"># 查看指定边的属性</span></span><br><span class="line"><span class="comment"># &#123;&#x27;weight&#x27;: 3.6&#125;</span></span><br><span class="line"><span class="built_in">print</span>(G1[<span class="number">1</span>][<span class="number">2</span>])  <span class="comment"># 查看指定边的属性</span></span><br><span class="line"><span class="comment"># &#123;&#x27;weight&#x27;: 3.6&#125;</span></span><br><span class="line"><span class="built_in">print</span>(G1.edges(data=<span class="literal">True</span>))  <span class="comment"># 查看所有边的属性</span></span><br><span class="line"><span class="comment"># [(2, 1, &#123;&#x27;weight&#x27;: 3.6&#125;), (3, 6, &#123;&#125;), (0, 10, &#123;&#x27;weight&#x27;: 2.7&#125;), (6, 12, &#123;&#x27;weight&#x27;: 0.5&#125;), (10, 5, &#123;&#125;)]</span></span><br></pre></td></tr></table></figure><h4 id="查看图、顶点和边的信息">查看图、顶点和边的信息</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 查看图、顶点和边的信息</span></span><br><span class="line"><span class="built_in">print</span>(G1.nodes)  <span class="comment"># 返回所有的顶点 [node1,...]</span></span><br><span class="line"><span class="comment"># [2, 3, 0, 6, 10, 12, 1, 5, 7]</span></span><br><span class="line"><span class="built_in">print</span>(G1.edges)  <span class="comment"># 返回所有的边 [(node1,node2),...]</span></span><br><span class="line"><span class="comment"># [(2, 1), (3, 6), (0, 10), (6, 12), (10, 5)]</span></span><br><span class="line"><span class="built_in">print</span>(G1.degree)  <span class="comment"># 返回各顶点的度 [(node1,degree1),...]</span></span><br><span class="line"><span class="comment"># [(2, 1), (3, 1), (0, 1), (6, 2), (10, 2), (12, 1), (1, 1), (5, 1), (7, 0)]</span></span><br><span class="line"><span class="built_in">print</span>(G1.number_of_nodes())  <span class="comment"># 返回顶点的数量</span></span><br><span class="line"><span class="comment"># 9</span></span><br><span class="line"><span class="built_in">print</span>(G1.number_of_edges())  <span class="comment"># 返回边的数量</span></span><br><span class="line"><span class="comment"># 5</span></span><br><span class="line"><span class="built_in">print</span>(G1[<span class="number">10</span>])  <span class="comment"># 返回与指定顶点相邻的所有顶点的属性</span></span><br><span class="line"><span class="comment"># &#123;0: &#123;&#x27;weight&#x27;: 2.7&#125;, 5: &#123;&#125;&#125;</span></span><br><span class="line"><span class="built_in">print</span>(G1.adj[<span class="number">10</span>])  <span class="comment"># 返回与指定顶点相邻的所有顶点的属性</span></span><br><span class="line"><span class="comment"># &#123;0: &#123;&#x27;weight&#x27;: 2.7&#125;, 5: &#123;&#125;&#125;</span></span><br><span class="line"><span class="built_in">print</span>(G1[<span class="number">1</span>][<span class="number">2</span>])  <span class="comment"># 返回指定边的属性</span></span><br><span class="line"><span class="comment"># &#123;&#x27;weight&#x27;: 3.6&#125;</span></span><br><span class="line"><span class="built_in">print</span>(G1.adj[<span class="number">1</span>][<span class="number">2</span>])  <span class="comment"># 返回指定边的属性</span></span><br><span class="line"><span class="comment"># &#123;&#x27;weight&#x27;: 3.6&#125;</span></span><br><span class="line"><span class="built_in">print</span>(G1.degree(<span class="number">10</span>))  <span class="comment"># 返回指定顶点的度</span></span><br><span class="line"><span class="comment"># 2</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;nx.info:&#x27;</span>,nx.info(G1))  <span class="comment"># 返回图的基本信息</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;nx.degree:&#x27;</span>,nx.degree(G1))  <span class="comment"># 返回图中各顶点的度</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;nx.density:&#x27;</span>,nx.degree_histogram(G1))  <span class="comment"># 返回图中度的分布</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;nx.pagerank:&#x27;</span>,nx.pagerank(G1))  <span class="comment"># 返回图中各顶点的频率分布</span></span><br></pre></td></tr></table></figure><h4 id="图的属性和方法">图的属性和方法</h4><p><strong>图的方法</strong></p><table><thead><tr><th style="text-align:center">方法</th><th style="text-align:center">说明</th></tr></thead><tbody><tr><td style="text-align:center">G.has_node(n)</td><td style="text-align:center">当图 G 中包括顶点 n 时返回 True</td></tr><tr><td style="text-align:center">G.has_edge(u, v)</td><td style="text-align:center">当图 G 中包括边 (u,v) 时返回 True</td></tr><tr><td style="text-align:center">G.number_of_nodes()</td><td style="text-align:center">返回 图 G 中的顶点的数量</td></tr><tr><td style="text-align:center">G.number_of_edges()</td><td style="text-align:center">返回 图 G 中的边的数量</td></tr><tr><td style="text-align:center">G.number_of_selfloops()</td><td style="text-align:center">返回 图 G 中的自循环边的数量</td></tr><tr><td style="text-align:center">G.degree([nbunch, weight])</td><td style="text-align:center">返回 图 G 中的全部顶点或指定顶点的度</td></tr><tr><td style="text-align:center">G.selfloop_edges([data, default])</td><td style="text-align:center">返回 图 G 中的全部的自循环边</td></tr><tr><td style="text-align:center">G.subgraph([nodes])</td><td style="text-align:center">从图 G1中抽取顶点[nodes]及对应边构成的子图</td></tr><tr><td style="text-align:center">union(G1,G2)</td><td style="text-align:center">合并图 G1、G2</td></tr><tr><td style="text-align:center"><a href="http://nx.info">nx.info</a>(G)</td><td style="text-align:center">返回图的基本信息</td></tr><tr><td style="text-align:center">nx.degree(G)</td><td style="text-align:center">返回图中各顶点的度</td></tr><tr><td style="text-align:center">nx.degree_histogram(G)</td><td style="text-align:center">返回图中度的分布</td></tr><tr><td style="text-align:center">nx.pagerank(G)</td><td style="text-align:center">返回图中各顶点的频率分布</td></tr><tr><td style="text-align:center">nx.add_star(G,[nodes],**attr)</td><td style="text-align:center">向图 G 添加星形网络</td></tr><tr><td style="text-align:center">nx.add_path(G,[nodes],**attr)</td><td style="text-align:center">向图 G 添加一条路径</td></tr><tr><td style="text-align:center">nx.add_cycle(G,[nodes],**attr)</td><td style="text-align:center">向图 G 添加闭合路径</td></tr><tr><td style="text-align:center"></td><td style="text-align:center"></td></tr></tbody></table><p><strong>例程</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">G1.clear() <span class="comment"># 清空图G1</span></span><br><span class="line">nx.add_star(G1, [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>], weight=<span class="number">1</span>)  <span class="comment"># 添加星形网络：以第一个顶点为中心</span></span><br><span class="line"><span class="comment"># [(1, 2), (1, 3), (1, 4), (1, 5)]</span></span><br><span class="line">nx.add_path(G1, [<span class="number">5</span>, <span class="number">6</span>, <span class="number">8</span>, <span class="number">9</span>, <span class="number">10</span>], weight=<span class="number">2</span>)  <span class="comment"># 添加路径：顺序连接 n个节点的 n-1条边</span></span><br><span class="line"><span class="comment"># [(5, 6), (6, 8), (8, 9), (9, 10)]</span></span><br><span class="line">nx.add_cycle(G1, [<span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>, <span class="number">10</span>, <span class="number">12</span>], weight=<span class="number">3</span>)  <span class="comment"># 添加闭合回路：循环连接 n个节点的 n 条边</span></span><br><span class="line"><span class="comment"># [(7, 8), (7, 12), (8, 9), (9, 10), (10, 12)]</span></span><br><span class="line"><span class="built_in">print</span>(G1.nodes)  <span class="comment"># 返回所有的顶点 [node1,...]</span></span><br><span class="line">nx.draw_networkx(G1)</span><br><span class="line">plt.show()<span class="comment">#打印图</span></span><br><span class="line"></span><br><span class="line">G2 = G1.subgraph([<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">8</span>, <span class="number">9</span>, <span class="number">10</span>])</span><br><span class="line">G3 = G1.subgraph([<span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>])</span><br><span class="line">G = nx.union(G2, G3)</span><br><span class="line"><span class="built_in">print</span>(G.nodes)  <span class="comment"># 返回所有的顶点 [node1,...]</span></span><br><span class="line"><span class="comment"># [1, 2, 3, 8, 9, 10, 4, 5, 6, 7]</span></span><br></pre></td></tr></table></figure><h4 id="图的绘制">图的绘制</h4><p>可视化是图论和网络问题中很重要的内容。NetworkX 在 Matplotlib、Graphviz 等图形工具包的基础上，提供了丰富的绘图功能。</p><p>在此简单介绍图基于Matplotlib的基本绘图函数。基本绘图函数使用字典提供的位置将节点放置在散点图上，或者使用布局函数计算位置。</p><table><thead><tr><th style="text-align:center">方法</th><th style="text-align:center">说明</th></tr></thead><tbody><tr><td style="text-align:center"><strong>draw(G[,pos,ax])</strong></td><td style="text-align:center">基于 Matplotlib 绘制 图 G</td></tr><tr><td style="text-align:center"><strong>draw_networkx(G[, pos, arrows, with_labels])</strong></td><td style="text-align:center">基于 Matplotlib 绘制 图 G</td></tr><tr><td style="text-align:center">draw_networkx_nodes(G, pos[, nodelist, . . . ])</td><td style="text-align:center">绘制图 G 的顶点</td></tr><tr><td style="text-align:center">draw_networkx_edges(G, pos[, edgelist, . . . ])</td><td style="text-align:center">绘制图 G 的边</td></tr><tr><td style="text-align:center">draw_networkx_labels(G, pos[, labels, . . . ])</td><td style="text-align:center">绘制顶点的标签</td></tr><tr><td style="text-align:center">draw_networkx_edge_labels(G, pos[, . . . ])</td><td style="text-align:center">绘制边的标签</td></tr></tbody></table><p>其中，nx.draw() 和 nx.draw_networkx() 是最基本的绘图函数，并可以通过自定义函数属性或其它绘图函数设置不同的绘图要求。</p><blockquote><p>draw(G, pos=None, ax=None, **kwds)</p><p>draw_networkx(G, pos=None, arrows=True, with_labels=True, **kwds)</p></blockquote><p><strong>常用的属性</strong>定义如下：</p><ul><li>‘node_size’：指定节点大小，默认为300</li><li>‘node_color’：指定节点颜色、默认红色</li><li>‘node_shape’:节点的形状，指定圆形</li><li>‘alpha’：透明度，默认1.0，不透明</li><li>‘width’：指定边的宽度，默认1.0</li><li>‘edge_color’：边的颜色、默认黑色</li><li>‘style’：边的样式，可选‘solid’、‘dashed’、‘dotted’、‘dashdot’</li><li>‘with_labels’：节点是否带标签，默认为True</li><li>‘font_size’：带标签字体大小，默认12</li><li>‘font_color’：带标签字体颜色，默认黑色</li></ul><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20230815191138242.png" alt="image-20230815191138242"></p><h4 id="图的分析">图的分析</h4><p>NetworkX提供了图论函数对图的结构进行分析：</p><p><strong>子图</strong></p><ul><li>子图是指顶点和边都分别是图G的顶点和子集的边的子集的图</li><li>subgraph()方法，按顶点从图G中抽出子图</li></ul><p><strong>连通子图</strong></p><ul><li>如果图G中任意两点间互通，则G是连通图</li><li>connected_components()方法，返回连通子图的集合</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">G = nx.path_graph(<span class="number">4</span>)</span><br><span class="line">nx.add_path(G, [<span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>])</span><br><span class="line"><span class="comment"># 连通子图</span></span><br><span class="line">listCC = [<span class="built_in">len</span>(c) <span class="keyword">for</span> c <span class="keyword">in</span> <span class="built_in">sorted</span>(nx.connected_components(G), key=<span class="built_in">len</span>, reverse=<span class="literal">True</span>)]</span><br><span class="line">maxCC = <span class="built_in">max</span>(nx.connected_components(G), key=<span class="built_in">len</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;Connected components:&#123;&#125;&#x27;</span>.<span class="built_in">format</span>(listCC))  <span class="comment"># 所有连通子图</span></span><br><span class="line"><span class="comment"># Connected components:[4, 3]</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;Largest connected components:&#123;&#125;&#x27;</span>.<span class="built_in">format</span>(maxCC))  <span class="comment"># 最大连通子图</span></span><br><span class="line"><span class="comment"># Largest connected components:&#123;0, 1, 2, 3&#125;</span></span><br></pre></td></tr></table></figure><p><strong>强连通图</strong></p><ul><li>如果<strong>有向图G</strong>中任意两点间相互连通，则G是强连通图</li><li>strongly_connected_components()方法，返回所有强连通子图列表</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 强连通</span></span><br><span class="line">G = nx.path_graph(<span class="number">4</span>, create_using=nx.DiGraph())</span><br><span class="line">nx.add_path(G, [<span class="number">3</span>, <span class="number">8</span>, <span class="number">1</span>])</span><br><span class="line"><span class="comment"># 找出所有的强连通子图</span></span><br><span class="line">con = nx.strongly_connected_components(G)</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">type</span>(con),<span class="built_in">list</span>(con))</span><br><span class="line"><span class="comment"># &lt;class &#x27;generator&#x27;&gt; [&#123;8, 1, 2, 3&#125;, &#123;0&#125;]</span></span><br></pre></td></tr></table></figure><p><strong>弱连通图</strong></p><ul><li>如果一个有向图G的基图是连通图，则有向图G是弱连通图</li><li>weakly_connected_components()方法，返回所有弱连通子图的列表</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 弱连通</span></span><br><span class="line">G = nx.path_graph(<span class="number">4</span>, create_using=nx.DiGraph())  <span class="comment">#默认生成节点 0,1,2,3 和有向边 0-&gt;1,1-&gt;2,2-&gt;3</span></span><br><span class="line">nx.add_path(G, [<span class="number">7</span>, <span class="number">8</span>, <span class="number">3</span>])  <span class="comment">#生成有向边：7-&gt;8-&gt;3</span></span><br><span class="line">con = nx.weakly_connected_components(G)</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">type</span>(con),<span class="built_in">list</span>(con))</span><br><span class="line"><span class="comment"># &lt;class &#x27;generator&#x27;&gt; [&#123;0, 1, 2, 3, 7, 8&#125;]</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 数学建模 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
            <tag> 数学建模 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>固定费用问题(未更新)</title>
      <link href="/2023/08/05/%E3%80%90%E6%95%B0%E5%AD%A6%E5%BB%BA%E6%A8%A1%E3%80%91%E4%BC%98%E5%8C%96%E6%A8%A1%E5%9E%8B-5-%E5%9B%BA%E5%AE%9A%E8%B4%B9%E7%94%A8%E9%97%AE%E9%A2%98/"/>
      <url>/2023/08/05/%E3%80%90%E6%95%B0%E5%AD%A6%E5%BB%BA%E6%A8%A1%E3%80%91%E4%BC%98%E5%8C%96%E6%A8%A1%E5%9E%8B-5-%E5%9B%BA%E5%AE%9A%E8%B4%B9%E7%94%A8%E9%97%AE%E9%A2%98/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      <categories>
          
          <category> 数学建模 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
            <tag> 数学建模 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>0-1规划</title>
      <link href="/2023/08/04/%E3%80%90%E6%95%B0%E5%AD%A6%E5%BB%BA%E6%A8%A1%E3%80%91%E4%BC%98%E5%8C%96%E6%A8%A1%E5%9E%8B-4-0-1%E8%A7%84%E5%88%92/"/>
      <url>/2023/08/04/%E3%80%90%E6%95%B0%E5%AD%A6%E5%BB%BA%E6%A8%A1%E3%80%91%E4%BC%98%E5%8C%96%E6%A8%A1%E5%9E%8B-4-0-1%E8%A7%84%E5%88%92/</url>
      
        <content type="html"><![CDATA[<h1>0-1规划</h1><h2 id="基本介绍">基本介绍</h2><p>0-1整数规划是一类特殊的整数规划，变量的取值只能是0或者1。</p><p>0-1变量的描述开关、取舍、有无等逻辑关系、顺序关系，可以处理背包问题、指派问题、选址问题、计划安排、线路设计、人员安排等各种决策规划问题。进而，任何整数都可以用二进制表达，整数变量就可以表示为多个0-1变量的组合，因此任何整数规划都可以转化为0-1规划问题来处理。0-1规划问题与运筹学中的很多经典问题也有紧密联系。</p><p>在数学建模学习中，0-1规划主要用于求解互斥的决策问题、互斥的条件约束问题、固定费用问题和分派问题。0-1规划是数模竞赛的常见题型，国赛B题经常有0-1规划问题或可以转化为0-1规划问题。</p><p>0-1规划算法都比较复杂，大规模问题一般没有精确解法。本文任然使用PuLP库进行0-1规划问题的求解。该工具包的使用都比较简单。</p><h2 id="0-1规划的分类以及建模方法">0-1规划的分类以及建模方法</h2><p>规划问题的数学模型包括决策变量、约束条件和目标函数，围绕着这三个要素都可能存在互斥的情况，从而导出不同类型的0-1规划模型，其他建模方法也有差别。</p><h3 id="互斥的决策问题">互斥的决策问题</h3>]]></content>
      
      
      <categories>
          
          <category> 数学建模 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
            <tag> 数学建模 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>非线性规划</title>
      <link href="/2023/08/03/%E3%80%90%E6%95%B0%E5%AD%A6%E5%BB%BA%E6%A8%A1%E3%80%91%E4%BC%98%E5%8C%96%E6%A8%A1%E5%9E%8B-3-%E9%9D%9E%E7%BA%BF%E6%80%A7%E8%A7%84%E5%88%92/"/>
      <url>/2023/08/03/%E3%80%90%E6%95%B0%E5%AD%A6%E5%BB%BA%E6%A8%A1%E3%80%91%E4%BC%98%E5%8C%96%E6%A8%A1%E5%9E%8B-3-%E9%9D%9E%E7%BA%BF%E6%80%A7%E8%A7%84%E5%88%92/</url>
      
        <content type="html"><![CDATA[<h1>非线性规划</h1><h2 id="基本概念">基本概念</h2><p>当线性问题的三要素：目标函数、限制条件、决策变量，任意一个被破坏成非线性的时候，此时线性的问题就变成了非线性的问题。</p><p>概括来说，目标函数和约束条件包含非线性函数，就是非线性规划。</p><p>非线性规划没有统一的通用方法、算法来解决，各种方法有特定的应用范围和适用条件。另一方面，非线性规划问题在实践中不能获得全局的最优解，只能得到局部最优解或者近似最优解。</p><h4 id="数学基础">数学基础</h4><ul><li><p>多元非线性函数求极值</p></li><li><p>有等式约束的多元非线性函数求极值——拉格朗日乘子法</p></li><li><p>有不等式约束的多远非线性函数求极值</p><ol><li><p>法一：引入松弛变量将不等式约束转换为等式约束；</p><p>拉格朗日乘子法；</p></li><li><p>法二：KKT条件法（拉格朗日+KKT的方法避免了引入松弛变量，是解决约束优化方法的通用方法）：</p><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20230809222215539.png" alt="image-20230809222215539"></p></li></ol></li></ul><h4 id="基本形式">基本形式</h4><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20230809221156523.png" alt="image-20230809221156523"></p><h4 id="二次规划的基本形式">二次规划的基本形式</h4><p>目标函数是一个二次函数那就是一个二次规划</p><p>举例：</p><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20230809221305784.png" alt="image-20230809221305784"></p><h2 id="Python解非线性规划问题">Python解非线性规划问题</h2><h3 id="Scipy库求解非线性规划问题">Scipy库求解非线性规划问题</h3><h4 id="scipy库对于各种函数以及算法的详细解释和用法文档">scipy库对于各种函数以及算法的详细解释和用法文档</h4><p><a href="https://docs.scipy.org/doc/scipy/reference/generated/scipy.optimize.minimize.html#scipy.optimize.minimize">https://docs.scipy.org/doc/scipy/reference/generated/scipy.optimize.minimize.html#scipy.optimize.minimize</a></p><h4 id="非线性规划问题的描述">非线性规划问题的描述</h4><p>首先，我们回顾线性规划问题的标准形式：</p><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20230810105422403.png" alt="image-20230810105422403"></p><p>类似地，可以写出非线性规划的一般形式：</p><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20230810105431587.png" alt="image-20230810105431587"></p><p>其中： <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>x</mi><mo>=</mo><mo stretchy="false">[</mo><mi>x</mi><mn>1</mn><mo separator="true">,</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo separator="true">,</mo><mi>x</mi><mi>n</mi><mo stretchy="false">]</mo><mi>T</mi><mi>x</mi><mo>=</mo><mo stretchy="false">[</mo><msub><mi>x</mi><mn>1</mn></msub><mo separator="true">,</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo separator="true">,</mo><msub><mi>x</mi><mi>n</mi></msub><msup><mo stretchy="false">]</mo><mi>T</mi></msup><mi>x</mi><mo>=</mo><mo stretchy="false">[</mo><mi>x</mi><mn>1</mn><mo separator="true">,</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo separator="true">,</mo><mi>x</mi><mi>n</mi><msup><mo stretchy="false">]</mo><mi>T</mi></msup></mrow><annotation encoding="application/x-tex">x = [ x 1 , . . . , x n ] T x=[x_1,...,x_n]^T x=[x1,...,xn]^T</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord mathnormal">x</span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">...</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">x</span><span class="mord mathnormal">n</span><span class="mclose">]</span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.0913em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">...</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose"><span class="mclose">]</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.0913em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord mathnormal">x</span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">...</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">x</span><span class="mord mathnormal">n</span><span class="mclose"><span class="mclose">]</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span></span></span></span>为决策变量， f(x) 为目标函数， <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>h</mi><mi>j</mi></msub><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">h_j(x)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0361em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord mathnormal">h</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span></span></span></span>和 $g_i(x) $为约束条件。</p><p>由此可见，非线性规划问题，<strong>实际上就是带有约束条件的非线性函数优化问题</strong>。</p><p>按照我们的学习模式，非线性规划问题的建模和求解与线性规划问题是类似的，按照以下步骤进行：</p><pre><code>问题定义，确定决策变量、目标函数和约束条件；模型构建，由问题描述建立数学方程，并转化为标准形式的数学模型；模型求解，用标准模型的优化算法对模型求解，得到优化结果。</code></pre><h4 id="区分约束条件、边界约束、等式约束、不等式约束">区分约束条件、边界约束、等式约束、不等式约束</h4><ol><li>约束条件包括：边界约束、等式约束、不等式约束</li><li>边界约束是指决策变量的约束</li><li>等式约束和不等式约束是方程约束</li></ol><h4 id="Scipy库求解非线性规划问题的函数">Scipy库求解非线性规划问题的函数</h4><p>Scipy 是 Python 算法库和数学工具包，包括最优化、线性代数、积分、插值、特殊函数、傅里叶变换、信号和图像处理、常微分方程求解等模块。<strong>推荐使用Scipy库中的optimize模块解决非线性规划问题</strong>。</p><p>scipy.optimize模块中提供了多种用于非线性规划问题的方法函数，适用于不同类型的问题。</p><ul><li>brent() : <strong>单变量无约束</strong>优化问题，混合使用<strong>牛顿法/二分法</strong></li><li>fmin()：<strong>多变量无约束</strong>优化问题，使用单纯形法，只需要利用函数值，不需要函数的导数或者二阶导数</li><li>leatsq()：非线性最小二乘问题，用于求解<strong>非线性最小二乘拟合问题</strong></li><li>minimize()：约束优化问题，使用<strong>拉格朗日乘子法</strong>将约束优化转化为无约束优化</li></ul><h4 id="Scipy-optimize-brent-求解单变量无约束优化问题">Scipy.optimize.brent()求解单变量无约束优化问题</h4><p>非线性规划最简单的形式是一维搜索，一维搜索的常用方法是<strong>函数逼近法</strong>和<strong>区间收缩法</strong>。</p><p>brent() 函数是 SciPy.optimize 模块中求解单变量无约束优化问题最小值的首选方法。这是<strong>牛顿法和二分法的混合方法，既能保证稳定性又能快速收敛</strong>。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">scipy.optimize.brent(func,args=(),brack=<span class="literal">None</span>,tol=<span class="number">1.48e-08</span>,full_output=<span class="number">0</span>,maxiter=<span class="number">500</span>)</span><br></pre></td></tr></table></figure><p><strong>主要参数</strong></p><ol><li>*func：callable f(x,args)     目标函数f(X)，以函数形式表示，可以通过*args传参</li><li>args：tuple    可选项，以f(x,*args)的形式将可变参数p传递给目标函数f(x,p)</li><li>brack：tuple   可选项，搜索算法的开始区间</li></ol><p><strong>主要返回值</strong></p><ol><li>xmin      返回函数达到最小值时的x（注意是局部最优，不一定是全局最优）</li><li>fval        返回函数的最优值（默认不返回，仅当full_output=1时返回）</li></ol><p><strong>使用例程</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> scipy.optimize <span class="keyword">import</span> brent, fmin_ncg, minimize</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"></span><br><span class="line"><span class="comment"># 1. Demo1：单变量无约束优化问题(Scipy.optimize.brent)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">objf</span>(<span class="params">x</span>):  <span class="comment"># 目标函数</span></span><br><span class="line">    fx = x**<span class="number">2</span> - <span class="number">8</span>*np.sin(<span class="number">2</span>*x+np.pi)</span><br><span class="line">    <span class="keyword">return</span> fx</span><br><span class="line"></span><br><span class="line">xIni = -<span class="number">5.0</span></span><br><span class="line">xOpt= brent(objf, brack=(xIni,<span class="number">2</span>))</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;xIni=&#123;:.4f&#125;\tfxIni=&#123;:.4f&#125;&quot;</span>.<span class="built_in">format</span>(xIni,objf(xIni))</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;xOpt=&#123;:.4f&#125;\tfxOpt=&#123;:.4f&#125;&quot;</span>.<span class="built_in">format</span>(xOpt,objf(xOpt)))</span><br></pre></td></tr></table></figure><p><strong>运行结果</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">xIni=-<span class="number">5.0000</span>fxIni=<span class="number">29.3522</span></span><br><span class="line">xOpt=-<span class="number">0.7391</span>fxOpt=-<span class="number">7.4195</span></span><br></pre></td></tr></table></figure><h4 id="scipy-optimiaze-fmin-求解多变量无约束优化问题">scipy.optimiaze.fmin()求解多变量无约束优化问题</h4><p>多变量无约束优化问题的算法很多，分类方式也很多。从使用者的角度来说可以分为：<strong>只使用目标函数值、使用导数（梯度下降法）、使用二阶导数</strong>。大体来说，<strong>使用导数的算法收敛较快，使用二阶导数收敛更快，但是收敛快也容易陷入局部最优</strong>。</p><p>fmin() 函数是 SciPy.optimize 模块中求解多变量无约束优化问题（最小值）的首选方法，采用<strong>下山单纯性方法</strong>。下山单纯性方法又称 <strong>Nelder-Mead 法</strong>，<strong>只使用目标函数值，不需要导数或二阶导数值</strong>，是最重要的多维无约束优化问题数值方法之一。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">scipy.optimize.fmin(func, x0, args=(), xtol=<span class="number">0.0001</span>, ftol=<span class="number">0.0001</span>, maxiter=<span class="literal">None</span>, maxfun=<span class="literal">None</span>, full_output=<span class="number">0</span>, disp=<span class="number">1</span>, retall=<span class="number">0</span>, callback=<span class="literal">None</span>, initial_simplex=<span class="literal">None</span>)</span><br></pre></td></tr></table></figure><p><strong>主要参数</strong></p><ol><li>*func: callable f(x,args) 　　目标函数f(x)，以函数形式表示，可以通过 *args 传递参数</li><li><strong>x0：nadarray         搜索算法的初值</strong></li><li>args：tuple             可选项，以f(x,*args)形式将参数p传递给目标函数</li></ol><p><strong>主要返回值</strong></p><ol><li>xopt             返回最小值时的x值</li><li>fopt              返回最小值时的目标函数值，fopt=func(xopt)</li></ol><p><strong>使用例程</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> scipy.optimize <span class="keyword">import</span> brent, fmin, minimize</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"></span><br><span class="line"><span class="comment"># 2. Demo2：多变量无约束优化问题(Scipy.optimize.brent)</span></span><br><span class="line"><span class="comment"># Rosenbrock 测试函数</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">objf2</span>(<span class="params">x</span>):  <span class="comment"># Rosenbrock benchmark function</span></span><br><span class="line">    fx = <span class="built_in">sum</span>(<span class="number">100.0</span> * (x[<span class="number">1</span>:] - x[:-<span class="number">1</span>] ** <span class="number">2.0</span>) ** <span class="number">2.0</span> + (<span class="number">1</span> - x[:-<span class="number">1</span>]) ** <span class="number">2.0</span>)</span><br><span class="line">    <span class="keyword">return</span> fx</span><br><span class="line"></span><br><span class="line">xIni = np.array([-<span class="number">2</span>, -<span class="number">2</span>])</span><br><span class="line">xOpt = fmin(objf2, xIni)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;xIni=&#123;:.4f&#125;,&#123;:.4f&#125;\tfxIni=&#123;:.4f&#125;&quot;</span>.<span class="built_in">format</span>(xIni[<span class="number">0</span>],xIni[<span class="number">1</span>],objf2(xIni)))</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;xOpt=&#123;:.4f&#125;,&#123;:.4f&#125;\tfxOpt=&#123;:.4f&#125;&quot;</span>.<span class="built_in">format</span>(xOpt[<span class="number">0</span>],xOpt[<span class="number">1</span>],objf2(xOpt)))</span><br></pre></td></tr></table></figure><p><strong>运行结果</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">xIni=-<span class="number">2.0000</span>,-<span class="number">2.0000</span>fxIni=<span class="number">3609.0000</span></span><br><span class="line">xOpt=<span class="number">1.0000</span>,<span class="number">1.0000</span>fxOpt=<span class="number">0.0000</span></span><br></pre></td></tr></table></figure><h4 id="使用scipy-optimize-minimize-求解非线性规划问题">使用scipy.optimize.minimize()求解非线性规划问题</h4><p><strong>函数说明</strong></p><p>minimize() 函数是 SciPy.optimize 模块中求解多变量优化问题的通用方法，可以调用多种算法，支持约束优化和无约束优化。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">scipy.optimize.minimize(fun, x0, args=(), method=<span class="literal">None</span>, jac=<span class="literal">None</span>, hess=<span class="literal">None</span>, hessp=<span class="literal">None</span>, bounds=<span class="literal">None</span>, constraints=(), tol=<span class="literal">None</span>, callback=<span class="literal">None</span>, options=<span class="literal">None</span>)</span><br></pre></td></tr></table></figure><p><strong>主要参数</strong></p><ol><li>*func          目标函数</li><li>x0：nadarray，shape(n)        搜索算法的初值，n是决策变量的个数</li><li>args     可选项，将可变参数给目标函数fun，导数函数jac（雅可比函数，梯度函数）和二阶导数函数hess（海丝函数）</li><li>method：str     可选项，选择优化算法。默认算法为BFGS, L-BFGS-B, SLSQP（取决于问题有没有<strong>边界条件和约束条件</strong>）</li><li>jac            可选项，梯度计算方法。以函数形式表示，或选择‘2-point’，‘3-point’，‘cs’。该选项只用于Newten-CG, dogleg, trust-ncg, trust-krylov, trust-exact和trust-constr算法。</li><li>bounds         可选项，变量的边界条件（上下限）。该选项只能用于Nelder-Mead, L-BFGS-B, TNC, SLSQP, Powell和trust-constr算法。</li><li>constraints        可选项，定义约束条件f(X)&gt;=0。该选项只能用于COBYLA，SLSQP和trust-constr算法，不同算法中对于约束条件的定义是不同的。</li></ol><p><strong>主要返回值</strong></p><ol><li>res             返回优化结果，以对象的方式返回，包括是否优化成功、决策变量的优化值xOpt等等</li></ol><p><strong>minimize()的优化算法选项</strong></p><p>optimize.minimize() 的默认算法为 BFGS, L-BFGS-B, SLSQP（取决于问题有没有边界条件和约束条件），可以通过 “method=None” 选项调用多种算法。</p><ol><li><p><strong>无约束条件问题优化算法</strong></p><ul><li><strong>method=‘CG’</strong>     非线性共轭梯度算法，只能处理无约束优化问题，需要使用一阶导数</li><li><strong>method=‘BFGS’</strong>    <strong>BFGS拟牛顿法</strong>，只能处理无约束优化问题，需要使用一阶导数函数。BFGS算法性能良好，是解决无约束优化问题的默认算法。</li><li><strong>method=‘Newton-CG’</strong>     截断牛顿法，只能处理无约束优化问题，需要一阶导数，<strong>适合处理大规模问题</strong></li><li><strong>method=‘dogleg’</strong>      dog-leg信赖域算法，需要使用梯度和Hessian(必须正定)，只能处理无约束优化问题，<strong>适合处理大规模问题</strong></li><li><strong>method=‘trust-exact’</strong>     求解无约束极小化问题的信赖域算法，需要梯度和Hessian（不需要正定）</li><li><strong>method=‘trust-krylov’</strong>      使用Newton-GLTR信赖域算法，需要使用梯度和Hession(必须正定)，只能处理无约束优化问题，<strong>适合处理中大规模</strong>问题</li></ul></li><li><p><strong>边界约束条件问题优化算法</strong></p><ul><li><p><strong>method=‘Nelder-Mead’</strong>        下山单纯性法，可以处理边界约束条件（决策变量的上下限），只使用目标函数，不使用导数，<strong>鲁棒性（robust）强</strong></p><blockquote><p>roboust，在科学领域表示系统的稳定性。在数据科学领域可以理解为：算法对数据变化的容忍度有多高。</p></blockquote></li><li><p><strong>method=‘L-BFGS-B’</strong>           <strong>改进的BFGS拟牛顿法</strong>，L指有限内存，B指约束边界，可以处理边界约束条件，需要使用一阶导函数。<strong>L-BFGS-B算法性能良好，内存消耗量小，适合处理大规模问题，是边界约束优问题的默认算法</strong></p></li><li><p><strong>method=‘Powell’</strong>             <strong>改进的共轭方法</strong>，可以处理边界约束条件（决策变量上下限）</p></li><li><p><strong>method=‘TNC’</strong>               截断牛顿法，可以处理边界约束条件</p></li></ul></li><li><p><strong>带有约束条件问题优化算法</strong>（注意区别：边界约束条件和约束条件）</p><ul><li><strong>method=‘COBYLA’</strong>        <strong>线性近似约束优化算法</strong>，通过对目标函数和约束条件的线性逼近处理非线性问题。<strong>只使用目标函数</strong>，不需要导数或者二阶导数值。可以处理约束条件。</li><li><strong>method=‘SLSQP’</strong>             <strong>贯序最小二乘规划算法</strong>，可以处理<strong>边界约束、等式约束、不等式约束</strong>。SLSQP<strong>算法性能良好，是解决带有约束条件优化问题的默认算法。</strong></li><li><strong>method=‘trust-constr’</strong>       <strong>信赖域算法</strong>，通用的约束最优化方法，<strong>适合处理大规模问题</strong></li></ul></li></ol><p><strong>minimize()使用例程</strong></p><p>编程步骤：</p><ol><li>导数scipy、numpy包</li><li>定义目标函数objtf3(x)，<strong>输入变量x表示向量</strong>，返回值fx是目标函数的计算结果</li><li>定义边界约束，即优化变量的上下限：<ul><li>minimize()默认无边界约束条件，即各自变量的取值范围没有限制</li><li><strong>如果设置边界约束，要对每个自变量（决策变量）定义其上下限，注意边界约束的格式</strong></li><li>如果某个自变量没有上限，或者没有下限，则表示为None</li></ul></li><li>定义x的初值，可以随意定义</li><li><strong>求解最小化问题</strong>，resRosen，其中目标函数objf3和<strong>搜索的初始点xIni</strong>是必须的，制定优化方法和边界条件都是可选项。<strong>如果优化问题是求最大值maxFx，可以通过minFx=-maxFx转化实现</strong></li><li>通过调用最小化问题的返回值resRosen.x得到最优点xOpt</li></ol><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> scipy.optimize <span class="keyword">import</span> brent, fmin, minimize</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"></span><br><span class="line"><span class="comment"># 3. Demo3：多变量边界约束优化问题(Scipy.optimize.minimize)</span></span><br><span class="line"><span class="comment"># 定义目标函数</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">objf3</span>(<span class="params">x</span>):  <span class="comment"># Rosenbrock 测试函数</span></span><br><span class="line">    fx = <span class="built_in">sum</span>(<span class="number">100.0</span> * (x[<span class="number">1</span>:] - x[:-<span class="number">1</span>] ** <span class="number">2.0</span>) ** <span class="number">2.0</span> + (<span class="number">1</span> - x[:-<span class="number">1</span>]) ** <span class="number">2.0</span>)</span><br><span class="line">    <span class="keyword">return</span> fx</span><br><span class="line"></span><br><span class="line"><span class="comment"># 定义边界约束（优化变量的上下限）</span></span><br><span class="line">b0 = (<span class="number">0.0</span>, <span class="literal">None</span>)  <span class="comment"># 0.0 &lt;= x[0] &lt;= Inf</span></span><br><span class="line">b1 = (<span class="number">0.0</span>, <span class="number">10.0</span>)  <span class="comment"># 0.0 &lt;= x[1] &lt;= 10.0</span></span><br><span class="line">b2 = (-<span class="number">5.0</span>, <span class="number">100.</span>)  <span class="comment"># -5.0 &lt;= x[2] &lt;= 100.0</span></span><br><span class="line">bnds = (b0, b1, b2)  <span class="comment"># 边界约束</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 优化计算</span></span><br><span class="line">xIni = np.array([<span class="number">1.</span>, <span class="number">2.</span>, <span class="number">3.</span>])</span><br><span class="line">resRosen = minimize(objf3, xIni, method=<span class="string">&#x27;SLSQP&#x27;</span>, bounds=bnds)</span><br><span class="line">xOpt = resRosen.x</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;xOpt = &#123;:.4f&#125;, &#123;:.4f&#125;, &#123;:.4f&#125;&quot;</span>.<span class="built_in">format</span>(xOpt[<span class="number">0</span>],xOpt[<span class="number">1</span>],xOpt[<span class="number">2</span>]))</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;min f(x) = &#123;:.4f&#125;&quot;</span>.<span class="built_in">format</span>(objf3(xOpt)))</span><br></pre></td></tr></table></figure><p><strong>运行结果</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">xOpt = <span class="number">1.0000</span>, <span class="number">1.0000</span>, <span class="number">1.0000</span></span><br><span class="line"><span class="built_in">min</span> f(x) = <span class="number">0.0000</span></span><br></pre></td></tr></table></figure><h2 id="例题">例题</h2><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20230810001339296.png" alt="image-20230810001339296"></p><h3 id="代码实现一般步骤">代码实现一般步骤</h3><ol><li><p>得到非线性规划的基本形式</p><ol><li>目标函数F=F1+F2+F3，求最小值</li><li>约束条件 P1+P2+P3=700</li><li>边界约束：100&lt;=P1&lt;=200，120&lt;=P2&lt;=250，150&lt;=P3&lt;=300</li></ol></li><li><p>代码实现过程</p><ul><li><p>先将非线性规划表达为标准形式：</p><ol><li>求目标函数最小值</li><li>约束条件函数均为&gt;=形式</li></ol></li><li><p>定义目标函数funcOpt</p></li><li><p>定义边界约束</p></li><li><p>随机定义初始参数值x0向量</p></li><li><p>定义约束条件函数</p></li><li><p>定义约束条件（minimize函数以字典格式表示约束条件）</p><ol><li>{‘type’:‘ineq’, ‘fun’:functionname}格式进行定义</li><li>type键值可选：ineq、eq，分别表示等式条件约束或者不等式条件约束</li><li>fun键值为约束条件函数名</li></ol></li><li><p>调用minimize函数进行求解最优值：</p><ol><li>一般条件下选择算法（method）思路：<ul><li>解决带<strong>有边界约束、等式以及不等式条件约束</strong>的非线性规划问题：SLSQP算法</li><li>解决<strong>仅带有边界约束</strong>的非线性规划问题：L-BFGS-B算法，有限内存拟牛顿约束边界算法</li><li>解决<strong>无条件约束</strong>的优化算法：BFGS拟牛顿算法</li></ul></li><li>constraints参数接受一个元组，元组内存放的是约束条件字典</li><li>args参数，取决于代码实现需要进行给目标函数传参的方式</li></ol></li></ul></li><li><p>代码打印结果</p><ol><li>res.message，是否优化成功</li><li>res.x，自变量优化值</li><li>res.fun，目标函数优化值</li></ol></li></ol>]]></content>
      
      
      <categories>
          
          <category> 数学建模 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
            <tag> 数学建模 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>整数规划</title>
      <link href="/2023/08/02/%E3%80%90%E6%95%B0%E5%AD%A6%E5%BB%BA%E6%A8%A1%E3%80%91%E4%BC%98%E5%8C%96%E6%A8%A1%E5%9E%8B-2-%E6%95%B4%E6%95%B0%E8%A7%84%E5%88%92(%E7%BA%BF%E6%80%A7)/"/>
      <url>/2023/08/02/%E3%80%90%E6%95%B0%E5%AD%A6%E5%BB%BA%E6%A8%A1%E3%80%91%E4%BC%98%E5%8C%96%E6%A8%A1%E5%9E%8B-2-%E6%95%B4%E6%95%B0%E8%A7%84%E5%88%92(%E7%BA%BF%E6%80%A7)/</url>
      
        <content type="html"><![CDATA[<h1>整数规划</h1><h2 id="整数规划基本概念">整数规划基本概念</h2><h4 id="整数规划问题">整数规划问题</h4><p>线性规划问题的最优解可能是小数或者分数。整数规划是指变量的取值只能是整数的规划。这在实际问题中很常见，例如车间人数、设备台数、行驶次数，这些变量显然必须取整数解。</p><p>整数规划并不一定是线性规划问题的变量取整限制，对于二次规划、非线性规划问题也有变量取整限制而引出的整数规划。但在数学建模问题中所说的整数规划，通常是指整数线性规划。</p><p>根据变量的不同情况，整数规划又分为：</p><ul><li>完全整数规划，全部变量都要求是整数</li><li>混合整数规划，部分变量要求是整数</li><li>0-1整数规划，变量的取值只能是0或者1</li><li>混合0-1规划，部分变量的取值只能是0或1</li></ul><h2 id="整数规划的求解方法">整数规划的求解方法</h2><h4 id="分支定界法">分支定界法</h4><p>基本思想：把原问题（整数规划问题）转换为一个个线性规划问题来解决，并在求解这些线性规划问题的过程中不断追踪原问题的上界（最优可行解）和下界（最优线性松弛解）。</p><p>分支界定法把全部可行解空间反复地分割为越来越小的子集，称为<strong>分支</strong>；并且对每个子集内的解集计算一个目标的上界，称为<strong>定界</strong>，每次分支后，对于超出已知可行解集目标值的那些子集不再进一步分枝，就可以删减很多子集，这称为<strong>剪枝。</strong></p><p>具体来说：设有<strong>最大化</strong>整数规划问题A，先解与之相应的线性规划问题B，若B的最优解不符合A的整数条件，则B的最优化目标函数<strong>必是A的最优目标函数z的上界</strong>，记为z2。而<strong>A的任意可行解的目标函数值将是z的一个下界z1</strong>。分支定界法就是将B的可行域分成子区域（分支）的方法，逐步减小z2和增大z1，最终求到z。</p><p>分支定界法是一个迭代算法，随着迭代过程<strong>不断更新上界和下界，直到上界和下界非常接近时结束</strong>。<strong>通常设置 Gap &lt;  0.1%，就可把当前的最优可行解近似为问题的全局最优解了</strong>。因此，分支定界法的**“收敛”**  不是分析意义上的而是算法意义上的，优化结果是近似解而不是精确解。</p><p><strong>分支定界法不用区分完全整数规划和混合整数规划，算法便于实现，但是计算量比较大。</strong></p><h4 id="割平面法">割平面法</h4><p>基本思想：先求解普通线性规划问题的最优解，再对非整数解添加约束条件使可行域缩小，如此反复求解添加了约束条件的普通线性规划问题，直到得到整数解。</p><p>也就是说，<strong>先不考虑整数约束条件，直接求解松弛问题的最优解</strong>，如果满足整数条件就结束了，如果不满足整数条件，就在此非整数解的基础上<strong>增加新的约束条件重新求解</strong>。这个新增加的约束条件称为割平面，对松弛问题的可行域割一刀，割去松弛问题的部分非整数解。经过有限次的反复切割，必定可在缩小的可行域的一个整数极点上达到整数规划问题的最优解 。</p><p>割平面法的计算量比较小，但是对于问题的结构以及求解的要求比较高，算法比较复杂。</p><h2 id="关于Python工具包的相关问题">关于Python工具包的相关问题</h2><p>线性规划、整数规划这些模型，算法还不是很复杂，第三方软件包也很丰富。</p><p>但是，Scipy 只能求解线性规划，不能求解整数规划，如果选择 Scipy 做线性规划，那在学整数规划时就要再学另一种工具包，二者的模型描述、函数定义、参数设置肯定也是不同的。接下来遇到非线性规划问题再学一种软件包。</p><p>所以建议线性规划和整数规划都使用Python的PuLP工具包。</p><p>优势：</p><ol><li>解题过程和编程步骤方面，线性规划和整数规划完全一致</li><li>便于熟练掌握解题方法，不与其他模型搞混</li></ol><h2 id="例题">例题</h2><h3 id="问题描述">问题描述</h3><p>某厂生产甲乙两种饮料，每百箱甲饮料需用原料 6千克、工人 10名，获利 10万元；每百箱乙饮料需用原料 5千克、工人 20名，获利 9万元。<br>今工厂共有原料 60千克、工人 150名，又由于其他条件所限甲饮料产量不超过8百箱。<br>问题 1：问如何安排生产计划，即两种饮料各生产多少使获利最大？<br>问题 2：若投资0.8万元可增加原料1千克，是否应作这项投资？投资多少合理？<br>问题 3：若不允许散箱（按整百箱生产），如何安排生产计划，即两种饮料各生产多少使获利最大？<br>问题 4：若不允许散箱（按整百箱生产），若投资0.8万元可增加原料1千克，是否应作这项投资？投资多少合理？</p><h3 id="建模过程分析">建模过程分析</h3><p>线性规划和整数规划问题的建模和求解，通常可以按照问题定义、模型构建、模型求解的步骤进行。</p><h4 id="问题定义">问题定义</h4><p>问题定义，确定决策变量、目标函数和约束条件。</p><ol><li><p>决策变量</p><ul><li>对于问题一，决策变量很明确，就是甲和乙两张饮料的产量</li><li>对于问题二，决策变量应该是投资金额（成本）、甲和乙的产量；所以问题二的决策变量有3个</li></ul></li><li><p>目标函数</p><p>目标函数是决策变量的函数，我们希望通过改变决策变量的值而获得目标函数的最大值或者最小值。通常是总成本最小，总利润最大，总时间最短。</p><ol><li>对于本案例，每个问题都是希望获得最大利润，目标函数都是总利润，问题是<strong>求目标函数利润的最大值</strong>。</li></ol></li><li><p>约束条件</p><ol><li><p>不等式约束：原料60kg，工人150名，甲饮料不超过800箱。</p></li><li><p>等式约束：本题没有</p></li><li><p>决策变量的边界约束</p><p>通常，题目隐含决策变量大于0的条件，例如工人人数、原料数都大于0；另外，如果能通过分析前面的等式约束或不等式约束，得出决策变量的上限，将会极大地提高问题求解的速度和性能。</p></li></ol></li></ol><h4 id="模型构建">模型构建</h4><p>模型构建，由问题描述建立数学方程，并转化为标准形式的数学模型。</p><p>对于问题一，目标函数是生产甲、乙两种饮料的总利润，约束条件式原料总量、工人总数约束，而且原料、工人都要大于0。</p><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20230814111839950.png" alt="image-20230814111839950"></p><p>进一步分析决策变量取值范围的约束条件，由原料数量、工人数量的不等式约束可以推出（但实际上x1范围可以更小，即0~8）：</p><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20230814111856158.png" alt="image-20230814111856158"></p><p>对于问题 2，可以通过增加投资来获得更多的原料，投资额是一个新的变量。要注意的是，此时目标函数虽然也是生产两种饮料的总利润，但总利润不等于总收入，而是总收入减去总成本，在本例中就是要减去购买原料的投资。</p><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20230814111929924.png" alt="image-20230814111929924"></p><p>对于问题 3 和问题 4，区别只是不允许散箱，明确提出了决策变量 x1、x2 的取值要取整数值，所以是整数规划问题。<br>需要注意的是，问题 4 中对增加的投资额即购买的原料数量并没有整数限制，因此 x1、x2 的取值范围是正整数，但 x3 的取值范围是正数，这是一个混合整数规划问题。<br>还要说明的是，对于问题 1 和问题 2，虽然题目中没有明确要求生产甲、乙饮料的工人人数为整数，但是人数也不可能是小数的，那么这是不是也是整数规划问题呢？<br>我的理解是，这个问题怎么说都可以。<strong>如果要简化问题，使用线性规划模型，最好在问题假设中说一句，假设甲乙饮料在同一车间先后生产，只要允许甲乙饮料散箱生产，即使根据产量所求出的工人数是小数，也可以解释的通。<strong>如果你掌握了整数规划问题的求解，那就</strong>先按线性规划建模，再补充讨论工人人数也必须是整数的条件，按整数规划建模求解</strong>，这就是妥妥的获奖论文了。</p><h4 id="模型求解">模型求解</h4><p>用标准模型的优化算法对模型进行求解，得到优化结果。</p><p>（0）导入 PuLP库函数</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pulp</span><br></pre></td></tr></table></figure><p>（1）定义一个规划问题</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ProbLP1 = pulp.LpProblem(<span class="string">&quot;ProbLP1&quot;</span>, sense=pulp.LpMaximize)    <span class="comment"># 定义问题 1，求最大值</span></span><br></pre></td></tr></table></figure><p>pulp.LpProblem 用来定义问题的构造函数。&quot;ProbLP1&quot;是用户定义的问题名。<br>参数 sense 指定问题求目标函数的最小值/最大值 。<strong>本例求最大值，选择 “pulp.LpMaximize” 。</strong></p><p>（2）定义决策变量<br>对于问题 1：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">x1 = pulp.LpVariable(<span class="string">&#x27;x1&#x27;</span>, lowBound=<span class="number">0</span>, upBound=<span class="number">15</span>, cat=<span class="string">&#x27;Continuous&#x27;</span>)  <span class="comment"># 定义 x1</span></span><br><span class="line">x2 = pulp.LpVariable(<span class="string">&#x27;x2&#x27;</span>, lowBound=<span class="number">0</span>, upBound=<span class="number">7.5</span>, cat=<span class="string">&#x27;Continuous&#x27;</span>)  <span class="comment"># 定义 x2</span></span><br></pre></td></tr></table></figure><p>pulp.LpVariable 用来<strong>定义决策变量</strong>的函数。<strong>‘x1’、‘x2’ 是用户定义的变量名</strong>。<br><strong>参数 lowBound、upBound 用来设定决策变量的下界、上界</strong>；可以不定义下界/上界，默认的下界/上界是负无穷/正无穷。本例中 x1、x2 的取值区间分别为 [0,15]、[0,7.5]。<br><strong>参数 cat 用来设定变量类型，可选参数值：‘Continuous’ 表示连续变量（默认值）、’ Integer ’ 表示离散变量（用于整数规划问题）、’ Binary ’ 表示0/1变量（用于0/1规划问题）</strong>。</p><p>对于问题 3， 甲乙饮料产量 x1、x2 必须取整数，是整数规划问题，因此要设置变量类型为离散变量（整数变量）：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">x1 = pulp.LpVariable(<span class="string">&#x27;x1&#x27;</span>, lowBound=<span class="number">0</span>, upBound=<span class="number">15</span>, cat=<span class="string">&#x27;Integer&#x27;</span>)  <span class="comment"># 定义 x1，变量类型：整数</span></span><br><span class="line">x2 = pulp.LpVariable(<span class="string">&#x27;x2&#x27;</span>, lowBound=<span class="number">0</span>, upBound=<span class="number">7.5</span>, cat=<span class="string">&#x27;Integer&#x27;</span>)  <span class="comment"># 定义 x2，变量类型：整数</span></span><br></pre></td></tr></table></figure><p>（3）添加目标函数</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ProbLP1 += (<span class="number">10</span>*x1 + <span class="number">9</span>*x2)  <span class="comment"># 设置目标函数 f(x)</span></span><br></pre></td></tr></table></figure><p><strong>添加目标函数使用 “问题名 += 目标函数式” 格式。</strong></p><p>（4）添加约束条件</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ProbLP1 += (<span class="number">6</span>*x1 + <span class="number">5</span>*x2 &lt;= <span class="number">60</span>)  <span class="comment"># 不等式约束</span></span><br><span class="line">ProbLP1 += (<span class="number">10</span>*x1 + <span class="number">20</span>*x2 &lt;= <span class="number">150</span>)  <span class="comment"># 不等式约束</span></span><br></pre></td></tr></table></figure><p><strong>添加约束条件使用 “问题名 += 约束条件表达式” 格式。</strong><br><strong>约束条件可以是等式约束或不等式约束，不等式约束可以是 小于等于 或 大于等于，分别使用关键字&quot;&gt;=“、”&lt;=“和”==&quot;。</strong></p><p>（5）求解</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">ProbLP1.solve()</span><br><span class="line"><span class="built_in">print</span>(ProbLP1.name)  <span class="comment"># 输出求解状态</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;Status:&quot;</span>, pulp.LpStatus[ProbLP1.status])  <span class="comment"># 输出求解状态</span></span><br><span class="line"><span class="keyword">for</span> v <span class="keyword">in</span> ProbLP1.variables():</span><br><span class="line">    <span class="built_in">print</span>(v.name, <span class="string">&quot;=&quot;</span>, v.varValue)  <span class="comment"># 输出每个变量的最优值</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;F1(x) =&quot;</span>, pulp.value(ProbLP1.objective))  <span class="comment"># 输出最优解的目标函数值</span></span><br></pre></td></tr></table></figure><p>solve() 是求解函数，可以对求解器、求解精度进行设置。<br>PuLP默认采用 CBC 求解器来求解优化问题，也可以调用其它的优化器来求解，但需要另外安装。</p><h4 id="Python例程">Python例程</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># mathmodel05_v1.py</span></span><br><span class="line"><span class="comment"># Demo05 of mathematical modeling algorithm</span></span><br><span class="line"><span class="comment"># Solving integer programming with PuLP.</span></span><br><span class="line"><span class="comment"># Copyright 2021 Youcans, XUPT</span></span><br><span class="line"><span class="comment"># Crated：2021-05-31</span></span><br><span class="line"><span class="comment"># Python小白的数学建模课 @ Youcans</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> pulp      <span class="comment"># 导入 pulp 库</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 主程序</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">main</span>():</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 模型参数设置</span></span><br><span class="line">    <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    问题描述：</span></span><br><span class="line"><span class="string">        某厂生产甲乙两种饮料，每百箱甲饮料需用原料6千克、工人10名，获利10万元；每百箱乙饮料需用原料5千克、工人20名，获利9万元。</span></span><br><span class="line"><span class="string">        今工厂共有原料60千克、工人150名，又由于其他条件所限甲饮料产量不超过8百箱。</span></span><br><span class="line"><span class="string">        （1）问如何安排生产计划，即两种饮料各生产多少使获利最大？</span></span><br><span class="line"><span class="string">        （2）若投资0.8万元可增加原料1千克，是否应作这项投资？投资多少合理？</span></span><br><span class="line"><span class="string">        （3）若不允许散箱（按整百箱生产），如何安排生产计划，即两种饮料各生产多少使获利最大？</span></span><br><span class="line"><span class="string">        （4）若不允许散箱（按整百箱生产），若投资0.8万元可增加原料1千克，是否应作这项投资？投资多少合理？</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 问题 1：</span></span><br><span class="line">    <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    问题建模：</span></span><br><span class="line"><span class="string">        决策变量：</span></span><br><span class="line"><span class="string">            x1：甲饮料产量（单位：百箱）</span></span><br><span class="line"><span class="string">            x2：乙饮料产量（单位：百箱）</span></span><br><span class="line"><span class="string">        目标函数：</span></span><br><span class="line"><span class="string">            max fx = 10*x1 + 9*x2</span></span><br><span class="line"><span class="string">        约束条件：</span></span><br><span class="line"><span class="string">            6*x1 + 5*x2 &lt;= 60</span></span><br><span class="line"><span class="string">            10*x1 + 20*x2 &lt;= 150            </span></span><br><span class="line"><span class="string">            x1, x2 &gt;= 0，x1 &lt;= 8</span></span><br><span class="line"><span class="string">    此外，由 x1,x2&gt;=0 和 10*x1+20*x2&lt;=150 可知 0&lt;=x2&lt;=7.5</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line">    ProbLP1 = pulp.LpProblem(<span class="string">&quot;ProbLP1&quot;</span>, sense=pulp.LpMaximize)    <span class="comment"># 定义问题 1，求最大值</span></span><br><span class="line">    x1 = pulp.LpVariable(<span class="string">&#x27;x1&#x27;</span>, lowBound=<span class="number">0</span>, upBound=<span class="number">8</span>, cat=<span class="string">&#x27;Continuous&#x27;</span>)  <span class="comment"># 定义 x1</span></span><br><span class="line">    x2 = pulp.LpVariable(<span class="string">&#x27;x2&#x27;</span>, lowBound=<span class="number">0</span>, upBound=<span class="number">7.5</span>, cat=<span class="string">&#x27;Continuous&#x27;</span>)  <span class="comment"># 定义 x2</span></span><br><span class="line">    ProbLP1 += (<span class="number">10</span>*x1 + <span class="number">9</span>*x2)  <span class="comment"># 设置目标函数 f(x)</span></span><br><span class="line">    ProbLP1 += (<span class="number">6</span>*x1 + <span class="number">5</span>*x2 &lt;= <span class="number">60</span>)  <span class="comment"># 不等式约束</span></span><br><span class="line">    ProbLP1 += (<span class="number">10</span>*x1 + <span class="number">20</span>*x2 &lt;= <span class="number">150</span>)  <span class="comment"># 不等式约束</span></span><br><span class="line">    ProbLP1.solve()</span><br><span class="line">    <span class="built_in">print</span>(ProbLP1.name)  <span class="comment"># 输出求解状态</span></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;Status youcans:&quot;</span>, pulp.LpStatus[ProbLP1.status])  <span class="comment"># 输出求解状态</span></span><br><span class="line">    <span class="keyword">for</span> v <span class="keyword">in</span> ProbLP1.variables():</span><br><span class="line">        <span class="built_in">print</span>(v.name, <span class="string">&quot;=&quot;</span>, v.varValue)  <span class="comment"># 输出每个变量的最优值</span></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;F1(x) =&quot;</span>, pulp.value(ProbLP1.objective))  <span class="comment"># 输出最优解的目标函数值</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 问题 2：</span></span><br><span class="line">    <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    问题建模：</span></span><br><span class="line"><span class="string">        决策变量：</span></span><br><span class="line"><span class="string">            x1：甲饮料产量（单位：百箱）</span></span><br><span class="line"><span class="string">            x2：乙饮料产量（单位：百箱）</span></span><br><span class="line"><span class="string">            x3：增加投资（单位：万元）</span></span><br><span class="line"><span class="string">        目标函数：</span></span><br><span class="line"><span class="string">            max fx = 10*x1 + 9*x2 - x3</span></span><br><span class="line"><span class="string">        约束条件：</span></span><br><span class="line"><span class="string">            6*x1 + 5*x2 &lt;= 60 + x3/0.8</span></span><br><span class="line"><span class="string">            10*x1 + 20*x2 &lt;= 150</span></span><br><span class="line"><span class="string">            x1, x2, x3 &gt;= 0，x1 &lt;= 8</span></span><br><span class="line"><span class="string">    此外，由 x1,x2&gt;=0 和 10*x1+20*x2&lt;=150 可知 0&lt;=x2&lt;=7.5</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line">    ProbLP2 = pulp.LpProblem(<span class="string">&quot;ProbLP2&quot;</span>, sense=pulp.LpMaximize)    <span class="comment"># 定义问题 2，求最大值</span></span><br><span class="line">    x1 = pulp.LpVariable(<span class="string">&#x27;x1&#x27;</span>, lowBound=<span class="number">0</span>, upBound=<span class="number">8</span>, cat=<span class="string">&#x27;Continuous&#x27;</span>)  <span class="comment"># 定义 x1</span></span><br><span class="line">    x2 = pulp.LpVariable(<span class="string">&#x27;x2&#x27;</span>, lowBound=<span class="number">0</span>, upBound=<span class="number">7.5</span>, cat=<span class="string">&#x27;Continuous&#x27;</span>)  <span class="comment"># 定义 x2</span></span><br><span class="line">    x3 = pulp.LpVariable(<span class="string">&#x27;x3&#x27;</span>, lowBound=<span class="number">0</span>, cat=<span class="string">&#x27;Continuous&#x27;</span>)  <span class="comment"># 定义 x3</span></span><br><span class="line">    ProbLP2 += (<span class="number">10</span>*x1 + <span class="number">9</span>*x2 - x3)  <span class="comment"># 设置目标函数 f(x)</span></span><br><span class="line">    ProbLP2 += (<span class="number">6</span>*x1 + <span class="number">5</span>*x2 - <span class="number">1.25</span>*x3 &lt;= <span class="number">60</span>)  <span class="comment"># 不等式约束</span></span><br><span class="line">    ProbLP2 += (<span class="number">10</span>*x1 + <span class="number">20</span>*x2 &lt;= <span class="number">150</span>)  <span class="comment"># 不等式约束</span></span><br><span class="line">    ProbLP2.solve()</span><br><span class="line">    <span class="built_in">print</span>(ProbLP2.name)  <span class="comment"># 输出求解状态</span></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;Status  youcans:&quot;</span>, pulp.LpStatus[ProbLP2.status])  <span class="comment"># 输出求解状态</span></span><br><span class="line">    <span class="keyword">for</span> v <span class="keyword">in</span> ProbLP2.variables():</span><br><span class="line">        <span class="built_in">print</span>(v.name, <span class="string">&quot;=&quot;</span>, v.varValue)  <span class="comment"># 输出每个变量的最优值</span></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;F2(x) =&quot;</span>, pulp.value(ProbLP2.objective))  <span class="comment"># 输出最优解的目标函数值</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 问题 3：整数规划问题</span></span><br><span class="line">    <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    问题建模：</span></span><br><span class="line"><span class="string">        决策变量：</span></span><br><span class="line"><span class="string">            x1：甲饮料产量，正整数（单位：百箱）</span></span><br><span class="line"><span class="string">            x2：乙饮料产量，正整数（单位：百箱）</span></span><br><span class="line"><span class="string">        目标函数：</span></span><br><span class="line"><span class="string">            max fx = 10*x1 + 9*x2</span></span><br><span class="line"><span class="string">        约束条件：</span></span><br><span class="line"><span class="string">            6*x1 + 5*x2 &lt;= 60</span></span><br><span class="line"><span class="string">            10*x1 + 20*x2 &lt;= 150</span></span><br><span class="line"><span class="string">            x1, x2 &gt;= 0，x1 &lt;= 8，x1, x2 为整数</span></span><br><span class="line"><span class="string">    此外，由 x1,x2&gt;=0 和 10*x1+20*x2&lt;=150 可知 0&lt;=x2&lt;=7.5</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line">    ProbLP3 = pulp.LpProblem(<span class="string">&quot;ProbLP3&quot;</span>, sense=pulp.LpMaximize)  <span class="comment"># 定义问题 3，求最大值</span></span><br><span class="line">    <span class="built_in">print</span>(ProbLP3.name)  <span class="comment"># 输出求解状态</span></span><br><span class="line">    x1 = pulp.LpVariable(<span class="string">&#x27;x1&#x27;</span>, lowBound=<span class="number">0</span>, upBound=<span class="number">8</span>, cat=<span class="string">&#x27;Integer&#x27;</span>)  <span class="comment"># 定义 x1，变量类型：整数</span></span><br><span class="line">    x2 = pulp.LpVariable(<span class="string">&#x27;x2&#x27;</span>, lowBound=<span class="number">0</span>, upBound=<span class="number">7.5</span>, cat=<span class="string">&#x27;Integer&#x27;</span>)  <span class="comment"># 定义 x2，变量类型：整数</span></span><br><span class="line">    ProbLP3 += (<span class="number">10</span> * x1 + <span class="number">9</span> * x2)  <span class="comment"># 设置目标函数 f(x)</span></span><br><span class="line">    ProbLP3 += (<span class="number">6</span> * x1 + <span class="number">5</span> * x2 &lt;= <span class="number">60</span>)  <span class="comment"># 不等式约束</span></span><br><span class="line">    ProbLP3 += (<span class="number">10</span> * x1 + <span class="number">20</span> * x2 &lt;= <span class="number">150</span>)  <span class="comment"># 不等式约束</span></span><br><span class="line">    ProbLP3.solve()</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;Shan Status:&quot;</span>, pulp.LpStatus[ProbLP3.status])  <span class="comment"># 输出求解状态</span></span><br><span class="line">    <span class="keyword">for</span> v <span class="keyword">in</span> ProbLP3.variables():</span><br><span class="line">        <span class="built_in">print</span>(v.name, <span class="string">&quot;=&quot;</span>, v.varValue)  <span class="comment"># 输出每个变量的最优值</span></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;F3(x) =&quot;</span>, pulp.value(ProbLP3.objective))  <span class="comment"># 输出最优解的目标函数值</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 问题 4：</span></span><br><span class="line">    <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    问题建模：</span></span><br><span class="line"><span class="string">        决策变量：</span></span><br><span class="line"><span class="string">            x1：甲饮料产量，正整数（单位：百箱）</span></span><br><span class="line"><span class="string">            x2：乙饮料产量，正整数（单位：百箱）</span></span><br><span class="line"><span class="string">            x3：增加投资（单位：万元）</span></span><br><span class="line"><span class="string">        目标函数：</span></span><br><span class="line"><span class="string">            max fx = 10*x1 + 9*x2 - x3</span></span><br><span class="line"><span class="string">        约束条件：</span></span><br><span class="line"><span class="string">            6*x1 + 5*x2 &lt;= 60 + x3/0.8</span></span><br><span class="line"><span class="string">            10*x1 + 20*x2 &lt;= 150</span></span><br><span class="line"><span class="string">            x1, x2, x3 &gt;= 0，x1 &lt;= 8，x1, x2 为整数</span></span><br><span class="line"><span class="string">    此外，由 x1,x2&gt;=0 和 10*x1+20*x2&lt;=150 可知 0&lt;=x2&lt;=7.5</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line">    ProbLP4 = pulp.LpProblem(<span class="string">&quot;ProbLP4&quot;</span>, sense=pulp.LpMaximize)  <span class="comment"># 定义问题 4，求最大值</span></span><br><span class="line">    <span class="built_in">print</span>(ProbLP4.name)  <span class="comment"># 输出求解状态</span></span><br><span class="line">    x1 = pulp.LpVariable(<span class="string">&#x27;x1&#x27;</span>, lowBound=<span class="number">0</span>, upBound=<span class="number">8</span>, cat=<span class="string">&#x27;Integer&#x27;</span>)  <span class="comment"># 定义 x1，变量类型：整数</span></span><br><span class="line">    x2 = pulp.LpVariable(<span class="string">&#x27;x2&#x27;</span>, lowBound=<span class="number">0</span>, upBound=<span class="number">7</span>, cat=<span class="string">&#x27;Integer&#x27;</span>)  <span class="comment"># 定义 x2，变量类型：整数</span></span><br><span class="line">    x3 = pulp.LpVariable(<span class="string">&#x27;x3&#x27;</span>, lowBound=<span class="number">0</span>, cat=<span class="string">&#x27;Continuous&#x27;</span>)  <span class="comment"># 定义 x3</span></span><br><span class="line">    ProbLP4 += (<span class="number">10</span>*x1 + <span class="number">9</span>*x2 - x3)  <span class="comment"># 设置目标函数 f(x)</span></span><br><span class="line">    ProbLP4 += (<span class="number">6</span>*x1 + <span class="number">5</span>*x2 - <span class="number">1.25</span>*x3 &lt;= <span class="number">60</span>)  <span class="comment"># 不等式约束</span></span><br><span class="line">    ProbLP4 += (<span class="number">10</span>*x1 + <span class="number">20</span>*x2 &lt;= <span class="number">150</span>)  <span class="comment"># 不等式约束</span></span><br><span class="line">    ProbLP4.solve()</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;Shan Status:&quot;</span>, pulp.LpStatus[ProbLP4.status])  <span class="comment"># 输出求解状态</span></span><br><span class="line">    <span class="keyword">for</span> v <span class="keyword">in</span> ProbLP4.variables():</span><br><span class="line">        <span class="built_in">print</span>(v.name, <span class="string">&quot;=&quot;</span>, v.varValue)  <span class="comment"># 输出每个变量的最优值</span></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;F4(x) =&quot;</span>, pulp.value(ProbLP4.objective))  <span class="comment"># 输出最优解的目标函数值</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:  <span class="comment"># Copyright 2021 YouCans, XUPT</span></span><br><span class="line">    main()  <span class="comment"># Python小白的数学建模课 @ Youcans</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>运行结果</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">Welcome to the CBC MILP Solver </span><br><span class="line">Version: <span class="number">2.9</span><span class="number">.0</span> </span><br><span class="line">Build Date: Feb <span class="number">12</span> <span class="number">2015</span> </span><br><span class="line"></span><br><span class="line">ProbLP1</span><br><span class="line">Status: Optimal</span><br><span class="line">x1 = <span class="number">6.4285714</span></span><br><span class="line">x2 = <span class="number">4.2857143</span></span><br><span class="line">F1(x) = <span class="number">102.8571427</span></span><br><span class="line"></span><br><span class="line">ProbLP2</span><br><span class="line">Status: Optimal</span><br><span class="line">x1 = <span class="number">8.0</span></span><br><span class="line">x2 = <span class="number">3.5</span></span><br><span class="line">x3 = <span class="number">4.4</span></span><br><span class="line">F2(x) = <span class="number">107.1</span></span><br><span class="line"></span><br><span class="line">ProbLP3</span><br><span class="line">Result - Optimal solution found</span><br><span class="line">Status Shan: Optimal</span><br><span class="line">Status: Optimal</span><br><span class="line">x1 = <span class="number">8.0</span></span><br><span class="line">x2 = <span class="number">2.0</span></span><br><span class="line">F3(x) = <span class="number">98.0</span></span><br><span class="line"></span><br><span class="line">ProbLP4</span><br><span class="line">Result - Optimal solution found</span><br><span class="line">Status: Optimal</span><br><span class="line">x1 = <span class="number">8.0</span></span><br><span class="line">x2 = <span class="number">3.0</span></span><br><span class="line">x3 = <span class="number">2.4</span></span><br><span class="line">F4(x) = <span class="number">104.6</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 数学建模 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
            <tag> 数学建模 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>线性规划模型</title>
      <link href="/2023/08/01/%E3%80%90%E6%95%B0%E5%AD%A6%E5%BB%BA%E6%A8%A1%E3%80%91%E4%BC%98%E5%8C%96%E6%A8%A1%E5%9E%8B-1-%E7%BA%BF%E6%80%A7%E8%A7%84%E5%88%92/"/>
      <url>/2023/08/01/%E3%80%90%E6%95%B0%E5%AD%A6%E5%BB%BA%E6%A8%A1%E3%80%91%E4%BC%98%E5%8C%96%E6%A8%A1%E5%9E%8B-1-%E7%BA%BF%E6%80%A7%E8%A7%84%E5%88%92/</url>
      
        <content type="html"><![CDATA[<h1>线性规划模型</h1><h2 id="要点">要点</h2><h4 id="线性规划的矩阵形式">线性规划的矩阵形式</h4><ul><li>不等式组条件的矩阵化</li><li>方程组条件的矩阵化</li><li>每个变量自己的取值范围</li><li>目标函数的向量化</li></ul><ol><li>决策变量</li><li>目标函数</li><li>约束条件</li></ol><h4 id="标准形式">标准形式</h4><p>只要是通过程序解决线性规划问题，一定是求最小值。如果实际问题是求最大值，那么我们加个负号即可。</p><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20230809210530764.png" alt="image-20230809210530764"></p><p>如何理解线性规划的标准形式？</p><ul><li>问题是线性的最大值或者最小值</li><li>约束条件本应该是小于等于，这是通用形式。（如果要改为等于，则要用其他方式转换）</li><li>存在不等约束变换可以应用松弛变量</li><li>规划问题的核心在于决策变量，目标函数和约束条件</li></ul><h2 id="线性规划的求解的基本原理">线性规划的求解的基本原理</h2><ol><li><p>单纯形法</p><p>基本思想：固定变量，不断变换基向量求方程组带入，看看是不是最优解，如果不适合就更新迭代现阶段的解。</p><p>单纯形法实际上就是<strong>解方程组</strong>，特点是结果比较精确。</p></li><li><p>蒙特卡洛法</p><p>在可行域范围内生成大批量的随机数据点，观测这些数据在什么点位置取得最优。</p><p>基本思想：大量的重复性试验，以频率估计概率。</p><p>由于生成的点事随机的，所以必须要生成大批数据进行计算，然后求出来的也只是数值的近似最优解，更多<strong>适用于解非线性问题</strong>，因为线性问题是可以得到精确的解的。</p></li></ol><h4 id="线性规划中引入松弛变量">线性规划中引入松弛变量</h4><p>引入松弛变量可以把不等式转化为等式进行计算，我们对于等式可以有更多的更高级的处理。</p><p>此外，如果我们要用单纯形法得到最优解，那么我们最终实际上也是在解方程组，而不等式约束不是方程，我们可以通过引入松弛变量的方法将不等式变成等式约束。</p><p>基本思想和转换方法：</p><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20230809220343585.png" alt="image-20230809220343585"></p><h4 id="何时引入松弛变量">何时引入松弛变量</h4><ul><li>当遇到绝对值不等式的时候</li><li>当遇到的不等式过多或者遇到了非线性的不等关系的时候</li><li>…</li></ul><h4 id="引入松弛变量以后得规划求解">引入松弛变量以后得规划求解</h4><ul><li>蒙特卡罗法</li><li>分支定界法</li><li>单纯形法</li><li>…</li></ul><h3 id="线性规划例题">线性规划例题</h3><p>例题1：</p><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20230809230303492.png" alt="image-20230809230303492"></p><h3 id="Python代码实现">Python代码实现</h3><h4 id="scipy库实现">scipy库实现</h4><p>对着标准形式来</p><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20230809210530764.png" alt="image-20230809210530764"></p><ol><li>用到的库：numpy，scipy</li><li>用到的类：scipy.optimise</li><li>用到的对象函数：调用optimise.linerprog()对象函数</li><li>我们要取的参数：<ol><li>目标函数的系数向量</li><li>不等式的约束</li><li>方程约束</li><li>变量范围</li></ol></li></ol><h4 id="PuLP库实现">PuLP库实现</h4><ol><li><p>导入PuLP库</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pulp</span><br></pre></td></tr></table></figure></li><li><p>定义一个规划问题</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">MyProbLP = pulp.LpProblem(<span class="string">&quot;LPPrombDemo1&quot;</span>,sense=pulp.LpMaximize)</span><br></pre></td></tr></table></figure><p>pulp.LpProblem是问题定义的<strong>构造函数</strong></p><p>“LPPrombDemo1”是用户定义的<strong>问题名（用于输出信息）</strong></p><p>参数sense用于指定求最大值还是最小值，<strong>可选参数值：LpMaximize、LpMinimize</strong></p></li><li><p>定义决策变量</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">x1 = pulp.LpVariable(<span class="string">&#x27;x1&#x27;</span>,lowBound=<span class="number">0</span>,upBound=<span class="number">7</span>,cat=<span class="string">&#x27;Continuous&#x27;</span>)</span><br><span class="line">x2 = pulp.LpVariable(<span class="string">&#x27;x2&#x27;</span>,lowBound=<span class="number">0</span>,upBound=<span class="number">7</span>,cat=<span class="string">&#x27;Continuous&#x27;</span>)</span><br><span class="line">x3 = pulp.LpVariable(<span class="string">&#x27;x3&#x27;</span>,lowBound=<span class="number">0</span>,upBound=<span class="number">7</span>,cat=<span class="string">&#x27;Continuous&#x27;</span>)</span><br></pre></td></tr></table></figure><p>pulp.LpVariable是定义决策变量的函数</p><p>‘x1’是用户定义的变量名</p><p>参数 lowBound、upBound 用来设定决策变量的下界、上界；可以不定义下界/上界，默认的下界/上界是负无穷/正无穷。本例中 x1,x2,x3 的取值区间为 [0,7]。<br>参数 cat 用来设定变量类型，可选参数值：‘Continuous’ 表示连续变量（默认值）、’ Integer ’ 表示离散变量（用于整数规划问题）、’ Binary ’ 表示0/1变量（用于0/1规划问题）。</p></li><li><p>添加目标函数</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">MyProbLP += <span class="number">2</span>*x1+<span class="number">3</span>*x2-<span class="number">5</span>*x3</span><br></pre></td></tr></table></figure></li><li><p>添加约束条件</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">MyProbLP += (<span class="number">2</span>*x1 - <span class="number">5</span>*x2 + x3 &gt;= <span class="number">10</span>)  <span class="comment"># 不等式约束</span></span><br><span class="line">MyProbLP += (x1 + <span class="number">3</span>*x2 + x3 &lt;= <span class="number">12</span>)  <span class="comment"># 不等式约束</span></span><br><span class="line">MyProbLP += (x1 + x2 + x3 == <span class="number">7</span>)  <span class="comment"># 等式约束</span></span><br></pre></td></tr></table></figure></li><li><p>求解</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">MyProbLP.solve()</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;Status:&quot;</span>,pulp.LpStatus[MyProbLP.status])<span class="comment">#输出求解状态</span></span><br><span class="line"><span class="keyword">for</span> v <span class="keyword">in</span> MyProbLP.variables():</span><br><span class="line">    <span class="built_in">print</span>(v.name,<span class="string">&quot;=&quot;</span>,v.varValue)<span class="comment">#输出每个变量的最优值</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;F(x) = &quot;</span>,pulp.value(MyProbLP.objective))<span class="comment">#输出目标函数最优值</span></span><br></pre></td></tr></table></figure><p>solve()是求解函数。PuLP默认采用CBC求解器来求解优化问题，也可以调用其他优化器来求解。比如：GLPK、COIN、CLP\CBC、CPLEX以及GUROBI，但是需要另外安装。</p></li></ol>]]></content>
      
      
      <categories>
          
          <category> 数学建模 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
            <tag> 数学建模 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>python网络爬虫设计</title>
      <link href="/2023/07/16/%E3%80%90Python%E5%9F%BA%E7%A1%80%E3%80%9116-%E7%BD%91%E7%BB%9C%E7%88%AC%E8%99%AB%E8%AE%BE%E8%AE%A1/"/>
      <url>/2023/07/16/%E3%80%90Python%E5%9F%BA%E7%A1%80%E3%80%9116-%E7%BD%91%E7%BB%9C%E7%88%AC%E8%99%AB%E8%AE%BE%E8%AE%A1/</url>
      
        <content type="html"><![CDATA[<h1>网络爬虫设计</h1><h2 id="爬虫的基本原理">爬虫的基本原理</h2><h3 id="爬虫的用途">爬虫的用途</h3><ul><li>在网上搜集数据(比如搜索引擎)</li><li>模拟浏览器的快速操作(抢票、抢课、抢挂号…)<strong>注意：写爬虫抢票是违法的，自己用没事，卖出去就有事</strong></li><li>模拟浏览器操作，替代填表等重复操作</li></ul><h3 id="最基本的爬虫">最基本的爬虫</h3><p>数据获取型爬虫是最基本的爬虫。数据获取爬虫的本质是自动获取网页并抽取其中的内容。</p><h4 id="基本步骤">基本步骤</h4><ul><li>手工找出合适的url</li><li>用浏览器手工查看网址对于的网页，查看网页源码，找出包含想要的内容（文件名、链接）的字符串的模式</li><li>程序中获取url对应的网页</li><li>程序中用正则表达式或者BeautifulSoup库抽取网页中想要的内容</li></ul><h4 id="代码示例——获取百度图片的搜索结果">代码示例——获取百度图片的搜索结果</h4><p>实现功能：给搜索引擎一个图片，自动爬虫获取图片，把收集到的前5幅图片获取出来。</p><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20230806092742758.png" alt="image-20230806092742758"></p><p><strong>代码</strong></p><p>代码以讲义为主，不要以视频为主。如果以下代码出错，可以去讲义看看。</p><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20230806092925068.png" alt="image-20230806092925068"></p><ul><li>stream=True，代表获取获取的是二进制的资源</li></ul><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20230806093521041.png" alt="image-20230806093521041"></p><h2 id="requests-get获取网页">requests.get获取网页</h2><h4 id="代码示例">代码示例</h4><ul><li><p><strong>fakeHeaders</strong>字符串的作用是伪装成一个浏览器，骗过服务器，获取网页信息。</p><p>如果服务器识别到请求方不是浏览器，可能不会把网页数据返回。</p><p>不过这里的示例代码比较幼稚，很多服务器不会上当。</p></li><li><p>r.apparent_encoding为了保证网页编码正确</p></li></ul><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20230806164811393.png" alt="image-20230806164811393"></p><h4 id="关于网页获取乱码的解决办法">关于网页获取乱码的解决办法</h4><ul><li>直接按照下方代码搞定即可</li></ul><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20230806165223637.png" alt="image-20230806165223637"></p><h4 id="用requests库获取网页的优势和局限">用requests库获取网页的优势和局限</h4><ul><li>优势：<ol><li>相对其他方法，速度快几倍</li><li>安装简单，分发容易</li></ol></li><li>局势：<ol><li>容易被反爬虫手段屏蔽</li><li>不能获取包含javascript生成的动态网页</li></ol></li><li>用上面的示例代码，不能得到百度图片搜索结果网页，得到的网页是空网页（被反爬了）</li></ul><h4 id="request-get获取网页（编码识别加强版）">request.get获取网页（编码识别加强版）</h4><ul><li>实际上是前一份代码的加强版，在fakerHeader基础上加多了一条语句（下图标红）</li><li>该爬虫可以获取百度网站图片</li></ul><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20230806165726851.png" alt="image-20230806165726851"></p><h3 id="弥补requests不足的其他获取网页的方法">弥补requests不足的其他获取网页的方法</h3><ul><li><p>使用selenium库（慢，容易被反爬，且已经被许多网站反爬，网上对付反爬的解决办法基本不管用，不推荐）<strong>（过时了）</strong></p></li><li><p>使用pyppeteer库（快，暂时未被许多网站反爬，强烈推荐）</p><p>谷歌提供的一套爬虫工具，比较难反爬</p></li></ul><h3 id="pyppeteer库获取网站">pyppeteer库获取网站</h3><h4 id="来源">来源</h4><ul><li>puppeteer是谷歌公司推出的可以控制Chrome浏览器的一套编程工具。一个日本工程师依此为基础推出了Python版本，叫pyppeteer</li><li>官网：<a href="https://pypi.org/project/pyppeteer/">https://pypi.org/project/pyppeteer/</a></li></ul><h4 id="pyppeteer工作原理">pyppeteer工作原理</h4><ul><li><strong>启动一个浏览器Chromium，用浏览器装入网页</strong>。浏览器可以用无头模式(headless)，即隐藏式启动，也可以显式启动</li><li>从浏览器可以获取网页源代码，若网页有javascript程序，<strong>获取到的是javascript被浏览器执行后的网页源代码</strong></li><li>可以向浏览器发送命令，<strong>模拟用户在浏览器上键盘输入、鼠标点击等操作</strong>，让浏览器转到其他网页</li><li>selenium原理以及功能和pyppeteer一样</li></ul><h4 id="pyppeteer环境安装">pyppeteer环境安装</h4><ul><li>pip install pyppeteer</li><li>python版本&gt;=3.6</li><li>必须下载并且安装特殊版本的谷歌浏览器chromium（500M+）<ol><li>可以将Chromium压缩包随便解压到哪个文件夹，然后在程序指明chrome.exe或其他操作系统的可执行文件的位置</li></ol></li><li><strong>强烈推荐pyppeteer+chromium作为爬虫的首选工具</strong></li></ul><h4 id="预备知识：协程">预备知识：协程</h4><ul><li><p>协程是一种特殊的函数，多个协程可以并行</p></li><li><p>pyppeteer中所有的函数都是协程，调用时前面都要加await，并且只能在协程中使用</p><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20230806171606911.png" alt="image-20230806171606911"></p></li><li><p><strong>协程的语法：</strong></p><ol><li><p>协程就是前面加了async的函数（python3.6以后才有）:</p><p>async def f():</p><p>​return 0</p></li><li><p>调用协程时，<strong>必须在函数名前面加上await</strong></p></li><li><p>协程只能在协程里面调用，即await语句只能出现在协程里面</p></li></ol></li></ul><h4 id="用pyppeteer获取网页代码示例">用pyppeteer获取网页代码示例</h4><ul><li><p><strong>headless=False</strong>，表示不以隐藏方式启动，这样我们就看不见chromium的窗口弹出。</p><p>但是这样写很容易被反爬，强烈建议headless=False</p></li><li><p>反反爬部分：暂且照抄</p></li></ul><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20230806171943439.png" alt="image-20230806171943439"></p><ul><li>获取网页信息</li><li>在非协程函数中调用协程，需要<strong>协程外启动协程、等待协程结束</strong>，照抄最后三行代码</li></ul><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20230806172331001.png" alt="image-20230806172331001"></p><ul><li><p>启动浏览器的函数  <strong>launch</strong></p><p>其他参数：</p><p>​executablePath指定浏览器的运行位置</p><p>​userdataDir：指明用来存放浏览器工作期间存放的零时文件或者文件夹，不是必须但是可以防止莫名其妙的错误</p></li></ul><h3 id="BeautifulSoup库分析网页">BeautifulSoup库分析网页</h3><h4 id="分析并提取网页内容的三种方式">分析并提取网页内容的三种方式</h4><ol><li>正则表达式（速度最快，但适应变化性略差）</li><li>BeautifulSoup库，速度比正则表达式慢</li><li>selenium或者pyppeteer中的浏览器对象查找元素函数（速度是正则表达式的百分之一，在<strong>需要模拟网页中进行输入、点击按钮等操作的时候</strong>）</li></ol><h4 id="网页信息概览">网页信息概览</h4><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20230806220421156.png" alt="image-20230806220421156"></p><h4 id="安装库和依赖">安装库和依赖</h4><ul><li><p>安装</p><p>pip install beautifulsoup4</p></li><li><p>导入</p><p>import bs4</p></li></ul><h4 id="代码示例-2">代码示例</h4><p><strong>html文档是字符串</strong></p><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20230806221341670.png" alt="image-20230806221341670"></p><p><strong>html文档来源于文件</strong></p><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20230806221418740.png" alt="image-20230806221418740"></p><p><strong>html文档来源于给定网址</strong></p><ol><li>先把网址内容爬下来，用字符串存储其内容</li><li>然后再用beautifulsoup库处理</li></ol><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20230806221600454.png" alt="image-20230806221600454"></p><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20230806221612346.png" alt="image-20230806221612346"></p><p><strong>找到想要的信息</strong></p><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20230806222225448.png" alt="image-20230806222225448"></p>]]></content>
      
      
      <categories>
          
          <category> Python基础 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
            <tag> Python基础 - 爬虫设计 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python的数据库编程</title>
      <link href="/2023/07/15/%E3%80%90Python%E5%9F%BA%E7%A1%80%E3%80%9115-Python%E7%9A%84%E6%95%B0%E6%8D%AE%E5%BA%93%E7%BC%96%E7%A8%8B/"/>
      <url>/2023/07/15/%E3%80%90Python%E5%9F%BA%E7%A1%80%E3%80%9115-Python%E7%9A%84%E6%95%B0%E6%8D%AE%E5%BA%93%E7%BC%96%E7%A8%8B/</url>
      
        <content type="html"><![CDATA[<h1>Python的数据库编程</h1><h2 id="数据库的概念">数据库的概念</h2><ul><li>数据库可以用来存放大量数据，并且提供了方便快捷的检索手段</li><li>便于快速找出符合某种条件的数据。比如：工作年限超过三年、工资超过10000元的北京户籍员工</li><li>一个数据库可以是一个文件，比如：c:/temp/students.db</li></ul><h3 id="数据库的结构">数据库的结构</h3><ol><li><p>数据库文件，存放数据库信息</p></li><li><p>数据库表，数据库文件中有多张表，比如student.db文件包含“学生信息表”、“课程信息表”</p></li><li><p>数据库记录，数据库表由记录构成，比如“学生信息表”里每一个记录代表一个学生信息</p></li><li><p>数据库字段，数据库记录由字段构成，描述一个事物的多个属性。比如学生记录，可以由name、id、age等构成</p><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20230720094138010.png" alt="image-20230720094138010"></p></li></ol><h2 id="SQL数据库查询语句">SQL数据库查询语句</h2><p>SQL简介：structure query language，结构化查询语言。用于进行数据库操作的标准语句。数据库有很多厂家，不同的数据库内部结构不一样，但是都有统一的语言。</p><h3 id="SQL命令">SQL命令</h3><p>SQL命令：用于进行数据库操作的标准语句</p><h4 id="常用的SQL命令">常用的SQL命令</h4><ol><li>CREATE TABLE创建表</li><li>INSERT   INTO         在表中插入记录</li><li>UPDATE                   在表中更新记录</li><li>SELECT                     在表中进行查询</li><li>DELETE                     从表中删除记录</li></ol><p><strong>不区分大小写</strong></p><h3 id="代码示例">代码示例</h3><ol><li><p>CREATE</p><p>其中的primary key作为主键，不可重复</p><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20230720095051832.png" alt="image-20230720095051832"></p></li><li><p>INSERT</p><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20230720095206835.png" alt="image-20230720095206835"></p></li></ol><h2 id="创建sqlite3数据库">创建sqlite3数据库</h2><p>python中操作数据库的库也有很多种，这里推荐用小型数据库sqlite3</p><h3 id="创建数据库并写入数据">创建数据库并写入数据</h3><ul><li>操作数据库一般用光标进行</li><li>三引号扩住的字符串，因为字符串太长，换行了，所以用三引号</li><li>可以把要插入的记录用列表、元组存放起来，用循环写入数据库表里面</li><li>只要修改了数据库的内容，<strong>一定要进行db.commit()</strong>，commit之后的数据库才会真正被修改</li><li>最后要记得关闭光标和数据库</li></ul><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20230720095333122.png" alt="image-20230720095333122"></p><h3 id="数据库的查询和修改">数据库的查询和修改</h3><h4 id="SELECT相关语句">SELECT相关语句</h4><ul><li>*代表所有</li><li>DESC，表示降序排序</li><li>WHRER功能很强，可以配合检索条件</li></ul><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20230720100641897.png" alt="image-20230720100641897"></p><h3 id="检索数据库程序示例">检索数据库程序示例</h3><ul><li>fetchone，取满足条件的第一条记录</li><li>fetchall，取满足条件的所有记录</li><li>取出来的记录，在python中用列表存储</li></ul><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20230720101921760.png" alt="image-20230720101921760"></p><h3 id="更新数据库">更新数据库</h3><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20230720105422832.png" alt="image-20230720105422832"></p><h4 id="代码示例-2">代码示例</h4><ul><li>元组的三个元素分别对应三个？问号</li><li>关于数据库写入的操作，必须commit()</li></ul><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20230720105504500.png" alt="image-20230720105504500"></p><h3 id="删除操作">删除操作</h3><p>在表内删除数据（字段、记录）</p><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20230720105740370.png" alt="image-20230720105740370"></p><p>删除表的操作</p><ul><li>注意：这里不是delete，而是DROP</li></ul><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20230720105831294.png" alt="image-20230720105831294"></p><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20230720110626955.png" alt="image-20230720110626955"></p><h2 id="注意事项">注意事项</h2><ol><li>对于修改表的操作，比如插入、删除，在关闭数据库前不要忘了commit，否则可能无效。</li><li>必要时用try…except语句来避免数据库不存在，表不存在时导致runtime error</li></ol><h2 id="数据库二进制字段的处理">数据库二进制字段的处理</h2><h3 id="设置blob字段（二进制字段）的值">设置blob字段（二进制字段）的值</h3><ul><li>‘rb’的含义：r表示读取，b表示二进制</li><li>大部分文件都不是文本文件，而是二进制文件，比如音频、视频、图片…</li><li>下面代码最后一个<strong>参数(img,)</strong>，只有一个参数也要加“，”，否则不是元组，所以cur.execute函数的参数之一是元组。</li></ul><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20230720111008875.png" alt="image-20230720111008875"></p><ul><li><p>Python的<strong>requests库</strong>可以用于访问网络资源</p><p>下面从网络上获取图片，进行数据库的二进制字段值的设置</p><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20230720111533694.png" alt="image-20230720111533694"></p></li></ul><h3 id="读取blob字段（二进制字段）的值">读取blob字段（二进制字段）的值</h3><ul><li>用or读取张三、李四两人的相关信息</li></ul><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20230720112241884.png" alt="image-20230720112241884"></p>]]></content>
      
      
      <categories>
          
          <category> Python基础 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
            <tag> Python基础 - python数据库 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>正则表达式及其在Python中的应用</title>
      <link href="/2023/07/14/%E3%80%90Python%E5%9F%BA%E7%A1%80%E3%80%9114-%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F%E5%8F%8A%E5%85%B6%E5%9C%A8python%E4%B8%AD%E7%9A%84%E5%BA%94%E7%94%A8/"/>
      <url>/2023/07/14/%E3%80%90Python%E5%9F%BA%E7%A1%80%E3%80%9114-%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F%E5%8F%8A%E5%85%B6%E5%9C%A8python%E4%B8%AD%E7%9A%84%E5%BA%94%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<h1>正则表达式及其在Python中的应用</h1><h2 id="re库">re库</h2><p>python中的re库可以帮助分隔字符串，在词频统计等分析中常用到</p><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20230718190156427.png" alt="image-20230718190156427"></p><h2 id="正则表达式">正则表达式</h2><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20230720112834206.png" alt="image-20230720112834206"></p><h3 id="正则表达式的基本概念">正则表达式的基本概念</h3><p>正则表达式实际上是个字符串，是一种字符串模式（格式）。</p><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20230720121235815.png" alt="image-20230720121235815"></p><h2 id="正则表达式中的功能字符">正则表达式中的功能字符</h2><h3 id="字符">字符</h3><ol><li><p>“.”</p><p>除了‘\n’以外的任意一个字符，包括汉字</p></li><li><p>“*”</p><p>量词，表示<strong>左边</strong>的字符可以出现0次或者任意多次</p></li><li><p>“？”</p><p>量词，表示左边的字符必须出现0次或者一次</p></li><li><p>“+”</p><p>量词，表示左边的字符必须出现1次或者更多次</p></li><li><p>“{m}”</p><p>量词，m是整数。表示左边的字符必须且只能出现m次</p></li><li><p>“{m,n}”</p><p>量词，m、n都是整数。表示左边的字符必须出现至少m次，最多n次</p></li></ol><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20230726083726794.png" alt="image-20230726083726794"></p><h3 id="字符组合">字符组合</h3><p>字符组合跟字符不同，字符是单个有筛选意义的字符，字符组合是多个字符结合起来表示有筛选意义的字符组合。</p><ol><li><p>“\d”</p><p>一个数字字符，等价于[0,9]</p></li><li><p>“\D”</p><p>一个非数字字符，等价于[^\d],[^0-9]</p></li><li><p>“\s”</p><p>一个空白字符，比如空格，\t\r\n等</p></li><li><p>“\S”</p><p>一个非空白字符</p></li><li><p>“\w”</p><p>一个单词字符：包括汉字或大小写英文字母、数字、下划线、或者其他语言文字</p></li><li><p>“\W”</p><p>一个非单词字符</p></li><li><p>“|”</p><p>逻辑或，A|B，表示能匹配A或能匹配B都行</p></li></ol><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20230726084544738.png" alt="image-20230726084544738"></p><p><strong>注意：python字符串中，\s等不是转移字符，都是两个字符。</strong></p><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20230726084849469.png" alt="image-20230726084849469"></p><h3 id="正则表达式中的特殊字符">正则表达式中的特殊字符</h3><p>正则表达式中常见的特殊字符主要有以下几个：</p><ul><li><p>.</p></li><li><ul><li></li></ul></li><li><p>?</p></li><li><ul><li></li></ul></li><li><p>$</p></li><li><p>[ ]</p></li><li><p>( )</p></li><li><p>^</p></li><li><p>{ }</p></li><li><p>\</p><p>如果要在正则表达式中表示这些特殊字符本身，要在其前面加上‘\’。</p></li></ul><h2 id="字符的范围和量词">字符的范围和量词</h2><h3 id="XXX-的用法">[XXX]的用法</h3><p>用以表示“此处必须出现一个某某范围内的字符”，或者此处必须&quot;出现一个字符，但不可以是某某范围内的字符&quot;</p><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20230726090920227.png" alt="image-20230726090920227"></p><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20230726090948027.png" alt="image-20230726090948027"></p><h3 id="“-“匹配汉字">“[]“匹配汉字</h3><p>汉字的unicode编码范围是<strong>4e00-9fa5(16进制)</strong>，因此[\u4e00-\u9fa5]即表示一个汉字。</p><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20230726091202434.png" alt="image-20230726091202434"></p><h3 id="常用的正则表达式实例">常用的正则表达式实例</h3><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20230726091743894.png" alt="image-20230726091743894"></p><h2 id="Python的re库关于正则表达式的函数">Python的re库关于正则表达式的函数</h2><h3 id="re-match-函数">re.match()函数</h3><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20230726091937101.png" alt="image-20230726091937101"></p><p><strong>代码示例</strong></p><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20230726092240556.png" alt="image-20230726092240556"></p><h3 id="re-search-函数">re.search()函数</h3><p>如果有多个子串匹配，则返回第一个子串。</p><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20230726100904439.png" alt="image-20230726100904439"></p><p><strong>代码示例</strong></p><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20230726110602900.png" alt="image-20230726110602900"></p><h3 id="re-findall-函数">re.findall()函数</h3><p>找出所有匹配的子串且不重叠，找到的子串都放在列表里面。如果没有匹配的就返回空列表。</p><p><strong>代码示例</strong></p><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20230726111344036.png" alt="image-20230726111344036"></p><h3 id="re-finditer-函数">re.finditer()函数</h3><p>查找字符串中所有和模式匹配的子串（不重叠），每个子串对应于一个匹配对象，返回匹配对象的序列。（准确地说是“可用迭代器”）</p><p><strong>代码示例</strong></p><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20230726111620868.png" alt="image-20230726111620868"></p><h3 id="re-sub-函数">re.sub()函数</h3><p>re.sub(模式串，替换串，母串)，用于替换匹配的子串</p><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20230726111916498.png" alt="image-20230726111916498"></p><hr><h2 id="边界符号">边界符号</h2><p>正则表达式中，边界符号有四个。</p><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20230726112123956.png" alt="image-20230726112123956"></p><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20230726112317565.png" alt="image-20230726112317565"></p><p><strong>注意：</strong></p><p>正则表达式的边界符号‘\b’是两个字符。但是在Python字符串中，‘\b’和’\t’、'\n’类似，表示一个字符，\b表示Backspace。</p><p>因此在正则表达式中使用边界符号\b，要写’\\b’。</p><p>如果写‘\\\\b’，则连续的两个‘\’被看做一个普通的’\'，不会和后面的’b’一起被当做字符组合。</p><p>Python字符串‘\B’是两个字符。</p><p><strong>代码示例1：</strong></p><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20230726113040305.png" alt="image-20230726113040305"></p><p><strong>代码示例2：</strong></p><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20230726113311728.png" alt="image-20230726113311728"></p><h2 id="分组（…）">分组（…）</h2><p>括号中的表达式是一个分组。多个分组按照左括号<strong>从左到右从1开始</strong>依次编号。</p><p>注意下面代码的group(0)和group(1)，<strong>groups()返回元组</strong>。</p><p><strong>代码示例：</strong></p><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20230726114509101.png" alt="image-20230726114509101"></p><h4 id="在分组的右边可以通过分组的编号引用该分组所匹配的字符串">在分组的右边可以通过分组的编号引用该分组所匹配的字符串</h4><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20230726114949441.png" alt="image-20230726114949441"></p><h4 id="分组作为一个整体，后面可以跟量词">分组作为一个整体，后面可以跟量词</h4><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20230726115931071.png" alt="image-20230726115931071"></p><h3 id="re-findall和分组">re.findall和分组</h3><p>在正则表达式中<strong>没有分组时</strong>，re.findall返回所有匹配子串构成的列表。</p><p><strong>有且只有一个分组时</strong>，re.findall返回的是一个子串的列表，每个元素是一个匹配子串中的分组对应的内容。</p><p><strong>代码示例：</strong></p><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20230726120503637.png" alt="image-20230726120503637"></p><p>当正则表达式中<strong>有超过一个分组时</strong>，re.findall返回的是一个<strong>元组的列表</strong>。每个元组对应于一个匹配的子串，元组里面的元素依次是1号分组、2号分组、3号分组…匹配的内容。</p><p><strong>代码示例：</strong>  <img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20230726121035966.png" alt="image-20230726121035966"></p><hr><h2 id="“-”的用法">“|”的用法</h2><p>表示“或”，如果没有放在“()”中，则起作用的范围是直到整个正则表达式开头或者结尾或者另一个“|”。</p><p><strong>代码示例：</strong></p><p>匹配到下面三个其中一个即可，优先级从左到右</p><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20230726121823038.png" alt="image-20230726121823038"></p><h4 id="从左到右短路匹配">从左到右短路匹配</h4><p>匹配上一个后就不计算是否还能匹配后面的</p><p><strong>代码示例：</strong></p><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20230726130214619.png" alt="image-20230726130214619"></p><h4 id="‘-也可以用于分组中">‘|'也可以用于分组中</h4><p>起作用的范围仅限于分组内</p><p><strong>代码示例：</strong></p><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20230726130950899.png" alt="image-20230726130950899"></p><hr><h2 id="量词的贪婪模式">量词的贪婪模式</h2><p>量词+、*、？、{M,N}默认匹配尽可能长的子串</p><p><strong>两个贪婪匹配造成问题的例子:</strong></p><p>下面第二个正则表达式，想要打印出所有<h3></h3>内的所有文字，但由于贪婪匹配，把最开始的<h3>和最后的</h3>括起来的内容作为截取的内容。</p><p>第三个正则表达式类似。</p><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20230726132854806.png" alt="image-20230726132854806"></p><h2 id="量词的懒惰模式">量词的懒惰模式</h2><p>在量词+、*、？、{M,N}后面加‘？’则匹配尽可能短的字符串。</p><p><strong>注意最后一个例子：</strong></p><ul><li><p>/<h3>匹配第一个<h3></p></li><li><p>.*?匹配abd</p></li><li><p>[M|K]不匹配&lt;</p></li><li><p>*？匹配abc</h3><h3>bc</p></li><li><p>[M|K]匹配K</p></li><li><p>最后一个</h3>被匹配</p></li></ul><p>最终得出如例子中的结果。</p><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20230726133550102.png" alt="image-20230726133550102"></p><p><strong>例子强化：</strong></p><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20230726142501356.png" alt="image-20230726142501356"></p><hr><h2 id="匹配对象">匹配对象</h2><p>匹配对象：匹配成功时的返回结果。</p><h3 id="属性">属性</h3><ul><li><p>string：匹配时使用的母串</p></li><li><p>lastindex：最后一个被匹配的分组的编号（不是最大的编号）。如果没有被匹配的分组，将为None。</p></li></ul><h3 id="匹配对象相关函数">匹配对象相关函数</h3><ul><li><p>group([n1,n2,n3,…])</p><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20230726142850522.png" alt="image-20230726142850522"></p></li><li><p>group<strong>s</strong></p><p>以元组形式返回全部分组匹配的字符串。相当于调用group(1,2,3,…last)。</p></li><li><p>groupdict</p><p>返回以有名字的组的名字为键，以改组匹配的子串为值的字典，没有名字的组不包含在内。</p></li><li><p>start([group])</p><p>返回指定组匹配的子串在string中的起始位置。group默认为0</p></li><li><p>end([group])</p><p>返回指定的组匹配的子串在string中结束的位置（子串最后一个字符位置+1）。group默认值为0</p></li><li><p>span([group])</p><p>返回(start(group)，end(group))</p><p>group可以是组编号，也可以是组名字，缺省值为0.</p></li></ul><p><strong>代码示例：</strong></p><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20230726143739376.png" alt="image-20230726143739376"></p><h2 id="抽取字符串中的IP地址、邮箱、网址">抽取字符串中的IP地址、邮箱、网址</h2><p>直接精确写出来是十分麻烦且难想的，但是可以将以下代码进行记忆和备份。</p><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20230726145009864.png" alt="image-20230726145009864"></p><h2 id="简化正则表达式的编写">简化正则表达式的编写</h2><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20230726145045946.png" alt="image-20230726145045946"></p>]]></content>
      
      
      <categories>
          
          <category> Python基础 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
            <tag> Python基础 - 正则表达式 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>数据分析和展示</title>
      <link href="/2023/07/13/%E3%80%90Python%E5%9F%BA%E7%A1%80%E3%80%9113-%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%E5%92%8C%E5%B1%95%E7%A4%BA/"/>
      <url>/2023/07/13/%E3%80%90Python%E5%9F%BA%E7%A1%80%E3%80%9113-%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90%E5%92%8C%E5%B1%95%E7%A4%BA/</url>
      
        <content type="html"><![CDATA[<h1>数据分析和展示</h1><h2 id="numpy库">numpy库</h2><ul><li>多维数组库，创建多维度数组很方便，可以代替多维列表</li><li>速度比多维列表快</li><li>支持向量和矩阵的各种数学运算</li><li>所有元素类型必须相同</li></ul><p>tips: pip install numpy 安装</p><h3 id="numpy创建数组的函数">numpy创建数组的函数</h3><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20230805102754709.png" alt="image-20230805102754709"></p><h4 id="numpy创建数组示例">numpy创建数组示例</h4><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20230805103058726.png" alt="image-20230805103058726"></p><h3 id="numpy数组常用的属性和函数">numpy数组常用的属性和函数</h3><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20230805103313496.png" alt="image-20230805103313496"></p><h4 id="代码示例">代码示例</h4><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20230805110520250.png" alt="image-20230805110520250"></p><h3 id="numpy元素实现增删">numpy元素实现增删</h3><p>实际上numpy数组一旦生成，元素就不能增删，而<strong>是通过返回一个新的数组来实现增删</strong>的效果。</p><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20230805110717956.png" alt="image-20230805110717956"></p><h4 id="代码示例-2">代码示例</h4><p>下面出现了<strong>axis参数</strong>，axis参数用于控制数组的拼接是发生在行上面还是发生在列上面。</p><ul><li>axis=0（缺省值），拼接使得行增加（加在列下）</li><li>axis=1，拼接使得列增加（加在行上），行不变</li></ul><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20230805110809771.png" alt="image-20230805110809771"></p><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20230805111654890.png" alt="image-20230805111654890"></p><h3 id="在numpy数组里面查找元素">在numpy数组里面查找元素</h3><ul><li>np.argwhere(a==3)，查找a数组里面等于3的元素，返回该元组的行列值，pos是numpy的<strong>二维数组</strong>，而不是列表。Python的原生列表，每个元组都需要有逗号隔开！！</li><li>a[a&gt;2]，抽取a中大于2的元素，形成一个一维数组</li></ul><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20230805111846533.png" alt="image-20230805111846533"></p><h3 id="numpy数组的数学运算">numpy数组的数学运算</h3><h4 id="加减乘除、开方、乘方">加减乘除、开方、乘方</h4><ul><li>**特点：**可以对数组进行直接的数学运算，作用结果直接覆盖到数组内全体成员。</li><li>上述特点可以使得numpy数组很轻松的将数据进行<strong>矩阵化处理</strong></li></ul><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20230805112442982.png" alt="image-20230805112442982"></p><h3 id="numpy数组的切片">numpy数组的切片</h3><p>numpy数组的切片是“视图”，是原数组的一部分，而非一部分的拷贝。Python原生数组的切片实际上是一份拷贝，改了切片不会影响原来的列表，而numpy数组会影响。</p><p>下面代码示例中：</p><p>b=a[1:3,1:4]，表示从a中取1到3行、1到4列组成一个新的二维数组。</p><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20230805113231605.png" alt="image-20230805113231605"></p><h2 id="pandas库">pandas库</h2><ul><li>核心功能是在二维表格上做各种操作，例如增加、修改、求一列数据的和、方差、中位数、平均数等等；</li><li>需要numpy支持</li><li>如果由openpyxl支持，还可以读写xlsx文档</li><li>最关键的类：DataFrame，<strong>表示二维表格</strong></li></ul><h3 id="pandas读写xlsx文档">pandas读写xlsx文档</h3><ul><li><p>需要openpyxl支持</p></li><li><p>读取每张工作表都是一个DataFrame类（二维表格）</p></li><li><p>如果有openpyxl或者xlrd或者xlwt支持，pandas还可以读写xlsx文档</p></li><li><p>最关键的类：<strong>DataFrame</strong>，<strong>表示二维表格</strong></p></li></ul><h3 id="重要类：Series">重要类：Series</h3><ul><li><p>Series是一维表格，每个元素都带标签且有下表，<strong>兼具列表和字典的访问形式</strong>。</p></li><li><p>参数：data，指定要存放的数据；index，指定对应的键值</p></li><li><p>代码解读：</p></li></ul><p>s[0:2][‘数学’]，表示在s的第0个到第1个元组中取标签为‘数学’的元素。（<strong>这里是用下标切片，左闭右开</strong>）</p><p>s[‘数学’：‘英语’][1]，这里是用标签来切片，闭区间。</p><ul><li><strong>注意：<strong>Series切片也是</strong>视图</strong></li></ul><h4 id="代码示例-3">代码示例</h4><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20230805114404643.png" alt="image-20230805114404643"></p><p><strong>统计功能函数</strong></p><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20230805115430494.png" alt="image-20230805115430494"></p><h3 id="DataFrame的构造和访问">DataFrame的构造和访问</h3><h4 id="构造">构造</h4><p>DataFrame是带行列标签的二维表格，<strong>每一列都是一个Series</strong></p><p>为了使得表格打印出来对齐并且美观，加入参数“display.unicode.east_asian_width，True”</p><p>指表参数：</p><ul><li>data，元素值</li><li>index，行标签</li><li>columns，列标签</li><li>参数可以用列表赋值</li></ul><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20230805115806066.png" alt="image-20230805115806066"></p><h4 id="访问">访问</h4><p>注意到，DataFrame的元素的数据类型是numpy数组，所以说需要numpy库支持。</p><p><strong>访问一行，记得loc</strong></p><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20230805120203640.png" alt="image-20230805120203640"></p><h3 id="DataFrame的切片">DataFrame的切片</h3><ul><li>iloc[行选择器，列选择器]   用<strong>下标</strong>做切片，左闭右开</li><li>loc[行选择器，列选择器]   用<strong>标签</strong>做切片，包括终点</li><li>DataFrame的切片是视图</li></ul><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20230805124338508.png" alt="image-20230805124338508"></p><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20230805124501824.png" alt="image-20230805124501824"></p><p><strong>注意：</strong></p><p>下面的切片用列表[1,3]，而不是[1:3]，表示取第一行和第三行</p><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20230805124649771.png" alt="image-20230805124649771"></p><h3 id="DataFrame的分析统计">DataFrame的分析统计</h3><ul><li>sort_values这个函数返回一个新的dataframe，但是如果加上参数inplace=True，那就会改变原来的dataframe</li><li>df.sum()返回的实际上是一个Series，每一列的和构成的Series</li><li>axis参数，缺省情况下为0，代表对列进行操作；反之对行进行操作。</li><li>df.T   获得<strong>转置矩阵</strong></li></ul><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20230805173209452.png" alt="image-20230805173209452"></p><h3 id="DataFrame的修改和增删">DataFrame的修改和增删</h3><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20230805173453216.png" alt="image-20230805173453216"></p><p><strong>删除</strong></p><p>df.drop记得<strong>指定inplace=True</strong>，否则不会影响原来的表，而是会返回一个新的列表。（不是视图）</p><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20230805173738487.png" alt="image-20230805173738487"></p><h3 id="pandas读写xlsx文档-2">pandas读写xlsx文档</h3><ul><li>需要openpyxl支持(对.xlsx文件)，或者xlrd或者xlwt支持。(老的.xls文件)</li><li>读取<strong>每张工作表都是一个DataFrame类（二维表格）</strong></li><li>使用pandas读取excel文档的优势：<ol><li>pandas具有很多统计功能，可以轻松做各种数据分析。</li></ol></li></ul><h4 id="代码示例-4">代码示例</h4><p><strong>读取文档</strong></p><ul><li><p>pd.read_excel返回的数据是Python中的<strong>字典</strong></p><p>字典的键为sheet_name（表的名字/索引），值为DataFrame数据结构，代表整个sheet表。</p><p><strong>index_col</strong>选择的是行标签的那一列。</p></li></ul><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20230805221914583.png" alt="image-20230805221914583"></p><p><strong>写入文档</strong></p><ul><li>na_rep=‘ ’，该参数是将NAN数据替换成其他字符的参数，这里是替换成空串。</li><li>这个函数并不好用，首先会覆盖原有文件，其次只能写一个表。</li></ul><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20230806074837600.png" alt="image-20230806074837600"></p><ul><li>df.to_excel(writer,sheet_name=“s1”)，往excel表写入s1工作表</li><li>df.sort_values()函数返回一个新的dataframe，<strong>ascending参数表示降序排列</strong></li><li><strong>最终writer.save()保存文件</strong></li></ul><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20230806075032450.png" alt="image-20230806075032450"></p><h3 id="pandas读写csv文件">pandas读写csv文件</h3><h4 id="写文件"><strong>写文件</strong></h4><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/2023-08-06_07-58.png" alt="2023-08-06_07-58"></p><h4 id="读文件"><strong>读文件</strong></h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df = pd.read_csv(filename,header=<span class="literal">None</span>,names=[<span class="string">&#x27;表头1&#x27;</span>,<span class="string">&#x27;表头2&#x27;</span>,<span class="string">&#x27;表头3&#x27;</span>])<span class="comment">#可以以这种方式读取文件</span></span><br></pre></td></tr></table></figure><p>该函数将csv文件以dataframe形式读取并返回给df</p><hr><h2 id="matplotlib库">matplotlib库</h2><h3 id="matplotlib画图基本步骤总结">matplotlib画图基本步骤总结</h3><ul><li>创建画布、子图</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">fig, ax = plt.subplots(<span class="number">1</span>,<span class="number">2</span>,figsize=(<span class="number">10</span>,<span class="number">8</span>))</span><br><span class="line"><span class="comment">#fig接收画布对象，ax接受子图对象；</span></span><br><span class="line"><span class="comment">#参数1，2表示该画布是一个包含1行2列子图的画布</span></span><br><span class="line"><span class="comment">#figsize=(10,8)设置画布大小</span></span><br></pre></td></tr></table></figure><ul><li>画图</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#以折线图为例</span></span><br><span class="line">ax[<span class="number">0</span>].plt(x,y,<span class="string">&#x27;-or&#x27;</span>,label=<span class="string">&#x27;xxx&#x27;</span>)</span><br><span class="line">ax[<span class="number">1</span>].plt(x,y,<span class="string">&#x27;-xb&#x27;</span>,label=<span class="string">&#x27;xxx&#x27;</span>)</span><br><span class="line"><span class="comment">#ax[i]表示选择第i个子图</span></span><br><span class="line"><span class="comment">#plt，plt就像是个画笔，画啥都用它</span></span><br><span class="line"><span class="comment">#x,y是序列数据，代表x轴、y轴数据；可以使列表、也可以是dataframe的一列（series）</span></span><br><span class="line"><span class="comment">#&#x27;-or&#x27;表示每个点的标记形状为o，-代表直线，r代表红色</span></span><br></pre></td></tr></table></figure><ul><li>加标题、标签、注释</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">ax[<span class="number">0</span>].set_xlabels(<span class="string">&#x27;xxx&#x27;</span>)<span class="comment">#y轴标签</span></span><br><span class="line">ax[<span class="number">1</span>].set_ylabels(<span class="string">&#x27;xxx&#x27;</span>)<span class="comment">#x轴标签</span></span><br><span class="line">ax[i].legend()<span class="comment">#显示图记，在旁边显示每个颜色的曲线是啥意思</span></span><br><span class="line">ax[i].set_title(<span class="string">&#x27;xxx&#x27;</span>)<span class="comment">#给子图加标题</span></span><br><span class="line">plt.suptitle(<span class="string">&#x27;xxx&#x27;</span>,fontsize=<span class="number">17</span>)<span class="comment">#记得不要17px，整数即可；这个是给整个画布加标题</span></span><br></pre></td></tr></table></figure><ul><li>保存</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">plt.savefig(filepath)</span><br><span class="line"><span class="comment">#这样就保存到filepath了</span></span><br></pre></td></tr></table></figure><p>对于其他类型的图形，在画图那一步都有一定的区别，但是其他步骤基本相同；</p><h3 id="绘制基本直方图">绘制基本直方图</h3><ul><li>rcParams这一部分是处理中文显示支持，记住即可</li><li>figure是一个plt窗口，要在窗口上创建子图subplot，然后此后所有的绘图都是在子图上进行的，没有子图，画在多也没用。</li></ul><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20230806080614388.png" alt="image-20230806080614388"></p><p><strong>显示效果：</strong></p><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20230806080829111.png" alt="image-20230806080829111"></p><h4 id="绘制横向直方图">绘制横向直方图</h4><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20230806080928585.png" alt="image-20230806080928585"></p><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20230806081020324.png" alt="image-20230806081020324"></p><h3 id="绘制堆叠直方图">绘制堆叠直方图</h3><p><strong>效果</strong></p><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20230806081058776.png" alt="image-20230806081058776"></p><h4 id="代码示例-5">代码示例</h4><p>注意参数：bottom，指定数据从哪里开始堆叠！</p><ul><li>注意导入的库！！导入的对象！！</li></ul><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20230806081339167.png" alt="image-20230806081339167"></p><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20230806081616505.png" alt="image-20230806081616505"></p><h3 id="绘制对比直方图">绘制对比直方图</h3><p><strong>效果：</strong></p><p>多组数据进行对比</p><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20230806081731106.png" alt="image-20230806081731106"></p><h4 id="代码示例-6">代码示例</h4><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20230806082029521.png" alt="image-20230806082029521"></p><ul><li><strong>ax.text在子图任意位置都可以写文字</strong></li><li><strong>rect.get获取的是柱子左侧的坐标</strong>，要获取中心点坐标还需加上柱子宽度的一半</li><li><strong>rotation参数，逆时针转动文字</strong></li></ul><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20230806082119458.png" alt="image-20230806082119458"></p><h3 id="绘制折线图和散点图">绘制折线图和散点图</h3><p><strong>效果图</strong></p><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20230806082748404.png" alt="image-20230806082748404"></p><h4 id="代码示例-7">代码示例</h4><ul><li>plot函数，就是给定点的序列参数，将这些点连起来并绘制出来。</li><li>scatter函数，绘制散点图，需要给出横纵坐标序列</li></ul><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20230806082806206.png" alt="image-20230806082806206"></p><ul><li>dpi参数，代表每英寸像素的个数。<strong>越大图像越清晰。</strong></li></ul><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20230806083358130.png" alt="image-20230806083358130"></p><h3 id="绘制饼图">绘制饼图</h3><p><strong>效果</strong></p><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20230806083519007.png" alt="image-20230806083519007"></p><h4 id="代码示例-8">代码示例</h4><ul><li>关键在于pie函数。</li><li>x参数指定份额</li><li>labels参数指定标签</li><li>expode参数指定突出程度，0.1是指半径的0.1倍</li><li>labeldistance指定标签与圆心的距离，1.1是指半径的1.1倍</li><li>pctdisatance指定显示份额的文字距离圆心的距离，0.6是指半径的0.6倍</li><li>startangle=90，从90度逆时针开始画图</li></ul><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20230806083533905.png" alt="image-20230806083533905"></p><h3 id="绘制热力图">绘制热力图</h3><p><strong>效果</strong></p><p>热力图用于展示二维数据，十分直观且对比鲜明。</p><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20230806084127690.png" alt="image-20230806084127690"></p><h4 id="代码示例-9">代码示例</h4><ul><li>imshow函数，画热力图</li><li>data是二维矩阵</li><li>cmap=plt.cm.hot，画热力图，色调是暖，如果是plt.cm.cool，那么色调就变成冷色调</li><li>aspect='auto’照抄</li><li>vmin，vmax指定对小值最大值，默认是源数据的最值。最小的最暗，最大的最亮。</li></ul><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20230806084238134.png" alt="image-20230806084238134"></p><p><strong>对每一个热力图方格写入数据</strong></p><ul><li>ax.text参数ha，表示水平居中，va表示竖直居中</li><li><strong>plt.colorbar，绘制右边的颜色-数值对照柱</strong>（另外需要绘制的）</li></ul><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20230806084904141.png" alt="image-20230806084904141"></p><h3 id="绘制雷达图">绘制雷达图</h3><p><strong>效果</strong></p><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20230806085222409.png" alt="image-20230806085222409"></p><h4 id="代码示例-10">代码示例</h4><ul><li>注意，绘制雷达图的时候，子图要规定为极坐标形式。即要生成极坐标形式的子图：projection=“polar”</li><li>set_thetagrids是画一层一层的圈圈</li></ul><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20230806085850969.png" alt="image-20230806085850969"></p><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20230806085939264.png" alt="image-20230806085939264"></p><h4 id="绘制多层雷达图">绘制多层雷达图</h4><p><strong>效果</strong></p><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20230806090101762.png" alt="image-20230806090101762"></p><p><strong>代码示例</strong></p><ul><li><strong>data是一个6行3列的矩阵，每列表示一个人的数据</strong></li></ul><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20230806090355533.png" alt="image-20230806090355533"></p><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20230806090446884.png" alt="image-20230806090446884"></p><h3 id="一个窗口绘制多幅图">一个窗口绘制多幅图</h3><p>思路：在一个窗口的不同位置创建多个子图，然后在各个子图上画图即可。</p><p><strong>效果</strong></p><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20230806090755694.png" alt="image-20230806090755694"></p><h4 id="代码示例-11">代码示例</h4><p><strong>画图基本函数</strong></p><ul><li><p>import库</p></li><li><p>汉字处理</p></li><li><p>drawRader，画雷达图；</p><p>drawPie，画饼图；</p><p>drawPlot，画折线图和散点图；</p></li><li><p>添加子图的时候加上参数</p><p>fig.add_subplot(2,2,1)表示将窗口分成两行两列，取位于第一个方格的子图</p></li><li><p>plt.subplot2grid((2,2),(1,0),colspan=2)表示将窗口分成2行两列，取第一行第0列，占两列宽。</p><p>也可以写成ax=fig.add_plotsubplot(2,1,2)</p></li><li><p>plt.figtext(0.05,0.05,‘subplot simple’)，表示显示左下角的标题，两个0.05分别表示从左边开始数占整个宽度的1/20，从底下开始数占高度的1/20</p></li></ul><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20230806090951074.png" alt="image-20230806090951074"></p>]]></content>
      
      
      <categories>
          
          <category> Python基础 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
            <tag> Python基础 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python数据处理生态</title>
      <link href="/2023/07/12/%E3%80%90Python%E5%9F%BA%E7%A1%80%E3%80%9112-python%E6%95%B0%E6%8D%AE%E5%A4%84%E7%90%86%E7%94%9F%E6%80%81/"/>
      <url>/2023/07/12/%E3%80%90Python%E5%9F%BA%E7%A1%80%E3%80%9112-python%E6%95%B0%E6%8D%AE%E5%A4%84%E7%90%86%E7%94%9F%E6%80%81/</url>
      
        <content type="html"><![CDATA[<h1>Python数据处理生态</h1><h2 id="处理excel文档">处理excel文档</h2><h3 id="处理excel文档的相关库">处理excel文档的相关库</h3><ol><li><p>xlrd库、xlwt库</p><p>xlrd用于读取office2010以前的.xls文件</p><p>xlwt用于创建和修改.xls文件</p></li><li><p>openpyxl库</p><p>读写office2010以后的.xlsx文件</p></li></ol><h2 id="openpyxl库的使用">openpyxl库的使用</h2><p>对于excel工作表，行列号都是从1开始算的。</p><ul><li>读取xlsx表</li><li>创建xlsx表</li><li>修改xlsx表</li></ul><h3 id="读取excel文件内容">读取excel文件内容</h3><h4 id="获取excel文档book">获取excel文档book</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> openpyxl <span class="keyword">as</span> pxl</span><br><span class="line">book = pxl.load_workbook(<span class="string">&quot;/home/codePath&quot;</span>) <span class="comment">#book就是整个excel文件</span></span><br></pre></td></tr></table></figure><h4 id="工作表相关操作sheet">工作表相关操作sheet</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">sheet=book.active <span class="comment">#取活跃的工作表</span></span><br><span class="line">sheet=book[<span class="string">&quot;price&quot;</span>]<span class="comment">#取名字为price的工作表</span></span><br><span class="line">sheetlst=book.worksheets <span class="comment">#worksheets是工作表构成的列表</span></span><br><span class="line"><span class="comment">#相关属性</span></span><br><span class="line"><span class="built_in">print</span>(sheet.title)<span class="comment">#打印出工作表的表头</span></span><br><span class="line"><span class="built_in">print</span>(sheet.min_row,sheet.max_row)<span class="comment">#输出最小、最大有效行号</span></span><br><span class="line"><span class="built_in">print</span>(sheet.min_column,sheet.max_column)<span class="comment">#输出最小、最大有效列号</span></span><br><span class="line">rows=sheet.rows<span class="comment">#工作表的每一行组成的列表</span></span><br><span class="line">column=sheet.columns<span class="comment">#工作表的每一列组成的列表</span></span><br></pre></td></tr></table></figure><h4 id="单元格的相关操作cell">单元格的相关操作cell</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#相关属性</span></span><br><span class="line"><span class="built_in">type</span>(cell.value)<span class="comment">#打印出单元格的数据类型（必须是下四种之一）：int、float、str、datetime.datetime</span></span><br><span class="line">cell.coordinat <span class="comment">#单元格的坐标，例如‘A2’，‘E2’</span></span><br><span class="line">cell.col_idx<span class="comment">#单元格列号 column_index</span></span><br><span class="line">cell.number_format<span class="comment">#数的显示格式，“General”,&quot;0.00%&quot;,&quot;0.00E+00&quot;等</span></span><br></pre></td></tr></table></figure><h4 id="读取行、列、单元格的相关操作">读取行、列、单元格的相关操作</h4><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20230727214335475.png" alt="image-20230727214335475"></p><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20230727214707417.png" alt="image-20230727214707417"></p><h4 id="读取公式的计算结果">读取公式的计算结果</h4><p>有时excel表格中某些单元格内容是公式，我们有可能只需要计算完公式之后的结果，或者只需要公式。</p><p>如果我们只需要计算结果，则可以在读书excel表格时加入相关参数。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> openpyxl</span><br><span class="line">book=openpyxl.load_workbook(<span class="string">&quot;/home/path&quot;</span>,data_only=<span class="literal">True</span>)</span><br></pre></td></tr></table></figure><h3 id="创建excel文档">创建excel文档</h3><h4 id="创建文档及其框架的相关操作">创建文档及其框架的相关操作</h4><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20230727220943747.png" alt="image-20230727220943747"></p><h4 id="excel文档内容相关操作">excel文档内容相关操作</h4><p>单元格显示格式、单元格值的类型、设置单元格宽度、新建工作表及命名、删除单元格</p><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20230727221621598.png" alt="image-20230727221621598"></p><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20230727221929531.png" alt="image-20230727221929531"></p><h3 id="openpyxl指定单元格样式">openpyxl指定单元格样式</h3><p>设置单元格边线类型、粗细，为单元格填充底色，指定单元格字体、斜体，设置单元格内内容的位置（如：水平居中，垂直居中等等）</p><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20230727223238087.png" alt="image-20230727223238087"></p><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20230727223307199.png" alt="image-20230727223307199"></p><hr><h2 id="jieba库">jieba库</h2><p>详细用法可以移步到github上的jieb库：<a href="https://github.com/fxsjy/jieba">https://github.com/fxsjy/jieba</a></p><h3 id="jieba库中文分词">jieba库中文分词</h3><p><strong>代码示例：</strong></p><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20230728082013503.png" alt="image-20230728082013503"></p><p>可以读取文件为jieba词典库扩充，然后再进行分词，这里为txt文件</p><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20230728082119230.png" alt="image-20230728082119230"></p><h3 id="分词算法">分词算法</h3><h4 id="ti-dif算法">ti-dif算法</h4><p>ti-idf是一种统计方法，用以评估一个字词对于一个文件集或者一个语料库中的其中一份文件的重要程度。它是一种用于信息检索和文本挖掘的常用的加权技术。</p><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20230728091222810.png" alt="image-20230728091222810"></p><h4 id="算法原理">算法原理</h4><p>tf是词语在某篇文档中出现的评论</p><p>词语在文档中出现的频率越高越大</p><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20230728091315816.png" alt="image-20230728091315816"></p><p>itf</p><p>词语出现的文档数越多越小</p><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20230728091407835.png" alt="image-20230728091407835"></p><p>tf-idf的值与词语频率成正比增大，但是会随着它在更多文档中出现而下降。</p><p>效果：突出重要词语、抑制次要词语</p><p>缺点：</p><ol><li>频率小单词越重要</li><li>单词频率大越无用</li><li>不能体现上下文信息</li></ol><hr><h2 id="datatime库处理日期和时间">datatime库处理日期和时间</h2><h2 id="random随机数模块">random随机数模块</h2><table><thead><tr><th>函数</th><th>作用</th></tr></thead><tbody><tr><td>random.randint(1,10)</td><td>随机产生1-10的整数</td></tr><tr><td>random.random()</td><td>随机生成0-1之间的小数</td></tr><tr><td>random.uniform(min,max)</td><td>随机生成min-max之间的小数，其中min和max可以互换</td></tr><tr><td>random.randint(min,max)</td><td>随机生成min-max之间的整数</td></tr><tr><td>random.choice(元组/列表/range()/字符串)</td><td>从给定元组/列表/range()/字符串中随机挑出一个元素</td></tr><tr><td>random.randrange(min,max,tap_num)</td><td>在min-max之间随机产生一个数，其中tap_num是间隔（可以用于取奇数、偶数）</td></tr><tr><td>random.sample(元组/列表/字符串/range, num)</td><td>从给定的对象的所有元素随机选取num个元素，返回列表</td></tr></tbody></table><h2 id="Pillow库处理图像">Pillow库处理图像</h2><h3 id="图像的相关常识">图像的相关常识</h3><h4 id="图像的模式">图像的模式</h4><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20230803212002871.png" alt="image-20230803212002871"></p><h4 id="图像的缩放">图像的缩放</h4><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20230803212510672.png" alt="image-20230803212510672"></p><h4 id="图像的旋转、翻转以及滤镜效果">图像的旋转、翻转以及滤镜效果</h4><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20230803212745727.png" alt="image-20230803212745727"></p><h4 id="图像的裁剪">图像的裁剪</h4><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20230803213239349.png" alt="image-20230803213239349"></p><h4 id="图像的素描画">图像的素描画</h4><p>基本原理：把**轮廓（颜色发生剧烈变化的地方）**画出来，飞轮廓部分都变成白色。</p><p>算法思路：</p><ol><li>将彩色图片转化为黑白图片</li><li>遍历图片像素如果有相邻的像素深浅发生明显变化，那么这两个像素之间必然有一个像素是属于轮廓</li><li>深浅相差多少才算是明显变化呢？这个可以自己来调试。</li></ol><p>代码示例：</p><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20230803213912188.png" alt="image-20230803213912188"></p><h4 id="给图像添加水印">给图像添加水印</h4><p>原理：paste时可以用“掩膜”之后定img的每个像素粘贴过去的透明度。如果透明度为0则完全透明，如果透明度为255则完全掩盖原来的像素。mask参数即为掩膜，是个模式为“L”的图片对象。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">imgSrc=paste(img,(x,y),mask=msk)</span><br></pre></td></tr></table></figure><p><strong>代码示例：</strong></p><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20230803214507273.png" alt="image-20230803214507273"></p><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20230803215513178.png" alt="image-20230803215513178"></p><h3 id="通过图片获取额外信息">通过图片获取额外信息</h3><h4 id="图片的exif信息">图片的exif信息</h4><p>当我们拍摄一张照片后，照片会有其exif信息，手机拍摄的照片以原图在网络上传播，可能会泄露个人隐私。</p><p>照片的exif信息涵盖了：照片拍摄的经纬度（地点信息）、拍照设备、曝光实践、IOS、光圈等、拍摄实践等…</p><p><strong>Python的Pillow库可以获取照片的exif信息。</strong></p>]]></content>
      
      
      <categories>
          
          <category> Python基础 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
            <tag> Python基础 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>文件读写</title>
      <link href="/2023/07/11/%E3%80%90Python%E5%9F%BA%E7%A1%80%E3%80%9111-Python%E6%96%87%E4%BB%B6%E8%AF%BB%E5%86%99/"/>
      <url>/2023/07/11/%E3%80%90Python%E5%9F%BA%E7%A1%80%E3%80%9111-Python%E6%96%87%E4%BB%B6%E8%AF%BB%E5%86%99/</url>
      
        <content type="html"><![CDATA[<h1>文件读写</h1><h2 id="文本文件读写">文本文件读写</h2><h3 id="常见函数">常见函数</h3><p>open打开文件后，f就在程序中代表这个文件。</p><ul><li>f.readlines读取文件的内容，内容存放在列表里面，列表的每个元素都是一个字符串，代表文件的一行</li></ul><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20230717222733503.png" alt="image-20230717222733503"></p><h3 id="写文件"><strong>写文件</strong></h3><p>open会在目录创建文件（如果文件不存在），但是如果目录不存在，则会报错。因为open不能创建一个文件夹。</p><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20230717222816467.png" alt="image-20230717222816467"></p><h3 id="读文件"><strong>读文件</strong></h3><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20230717223035755.png" alt="image-20230717223035755"></p><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20230717223143916.png" alt="image-20230717223143916"></p><h4 id="按行读入">按行读入</h4><p>如果按行读入，读取到某一行为空串“”，则表示已经文件结束。因为即使是空行也会读取出换行符“\n”</p><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20230717223342231.png" alt="image-20230717223342231"></p><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20230717223544719.png" alt="image-20230717223544719"></p><h3 id="添加方式打开文件"><strong>添加方式打开文件</strong></h3><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20230717223657179.png" alt="image-20230717223657179"></p><h2 id="文本文件的编码">文本文件的编码</h2><h3 id="基本概念">基本概念</h3><p>二进制以什么组合方式表示文字或字母。</p><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20230717223828774.png" alt="image-20230717223828774"></p><h3 id="Python程序的编码">Python程序的编码</h3><p>.py文件必须以utf-8格式才能运行。如果存成ansi格式（对应gbk编码），那么<strong>应该在文件开头写上#coding=gbk</strong></p><h3 id="指定编码打开文件">指定编码打开文件</h3><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20230717224143091.png" alt="image-20230717224143091"></p><h2 id="文件的路径">文件的路径</h2><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20230717224443130.png" alt="image-20230717224443130"></p><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20230717224546601.png" alt="image-20230717224546601"></p><h2 id="Python的文件夹操作">Python的文件夹操作</h2><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20230717224703178.png" alt="image-20230717224703178"></p><h3 id="删除文件夹的递归函数">删除文件夹的递归函数</h3><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20230717225455738.png" alt="image-20230717225455738"></p><h3 id="获取文件夹总大小的函数">获取文件夹总大小的函数</h3><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20230717225527614.png" alt="image-20230717225527614"></p><h2 id="命令行参数">命令行参数</h2><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20230717230500558.png" alt="image-20230717230500558"></p>]]></content>
      
      
      <categories>
          
          <category> Python基础 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
            <tag> Python基础 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>有关python运算的时间复杂度</title>
      <link href="/2023/07/10/%E3%80%90Python%E5%9F%BA%E7%A1%80%E3%80%9110-%E5%85%B3%E4%BA%8EPython%E7%9A%84%E7%AE%97%E6%B3%95%E6%97%B6%E9%97%B4%E5%A4%8D%E6%9D%82%E5%BA%A6%E9%97%AE%E9%A2%98/"/>
      <url>/2023/07/10/%E3%80%90Python%E5%9F%BA%E7%A1%80%E3%80%9110-%E5%85%B3%E4%BA%8EPython%E7%9A%84%E7%AE%97%E6%B3%95%E6%97%B6%E9%97%B4%E5%A4%8D%E6%9D%82%E5%BA%A6%E9%97%AE%E9%A2%98/</url>
      
        <content type="html"><![CDATA[<h2 id="Python中in的复杂度">Python中in的复杂度</h2><p>对于a  in  b这个语句</p><p>如果b是列表、字符串、元组，则时间复杂度为O(n)，与元素的个数有关。</p><p>若b是字典或者集合，时间复杂度为O(1)。</p><h2 id="Python中一些操作的时间复杂度总结">Python中一些操作的时间复杂度总结</h2><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20230717221426903.png" alt="image-20230717221426903"></p>]]></content>
      
      
      <categories>
          
          <category> Python基础 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
            <tag> Python基础 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>集合</title>
      <link href="/2023/07/09/%E3%80%90Python%E5%9F%BA%E7%A1%80%E3%80%919-%E9%9B%86%E5%90%88/"/>
      <url>/2023/07/09/%E3%80%90Python%E5%9F%BA%E7%A1%80%E3%80%919-%E9%9B%86%E5%90%88/</url>
      
        <content type="html"><![CDATA[<h1>集合</h1><h2 id="集合的基本概念">集合的基本概念</h2><ul><li><p>集合元素类型可以不同</p></li><li><p>不会有重复元素，集合会自动去重</p></li><li><p>可以增删元素</p></li><li><p>整数、小数、复数、字符串、元组等<strong>不可变的数据类型</strong>才可以作为集合的元素</p><p>列表、字典和集合等可变的不可以作为集合元素</p></li><li><p>集合的作用是快速判断某个东西是否在一堆东西里面（用in）</p><p>用in判断某个东西是否在集合里面花费的时间是固定的O(1)复杂度</p></li><li><p><strong>集合的元素没有顺序，不能用下标访问</strong></p></li></ul><h2 id="集合的构造">集合的构造</h2><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20230717215646757.png" alt="image-20230717215646757"></p><h2 id="集合的常用函数">集合的常用函数</h2><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20230717215913579.png" alt="image-20230717215913579"></p><h2 id="集合的运算">集合的运算</h2><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20230717220101312.png" alt="image-20230717220101312"></p><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20230717220151449.png" alt="image-20230717220151449"></p><h2 id="集合示例程序">集合示例程序</h2><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20230717220418702.png" alt="image-20230717220418702"></p><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20230717220543358.png" alt="image-20230717220543358"></p><h2 id="集合、列表的区别和选择">集合、列表的区别和选择</h2><h3 id="区别">区别</h3><ol><li><p>有序性：集合是无序的</p><p>​列表式有序的</p></li><li><p>重复性：集合元素不可重复</p><p>​列表元素可以重复</p></li><li><p>可变性：集合元素可变，可以通过函数进行增、删、改</p><p>​列表元素可变，通过索引和切片操作进行修改</p></li><li><p>存储方式：集合采用哈希表存储，所以<strong>在集合中查找特定元素的速度很快</strong></p><p>​列表采用动态数组的方式存储，所以<strong>在列表中按索引访问元素的速度很快</strong></p></li></ol><h3 id="选择">选择</h3><p>集合的使用场景：元素唯一且不关心元素顺序</p><p>列表的使用场景：需要保持元素顺序且元素可以重复</p>]]></content>
      
      
      <categories>
          
          <category> Python基础 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
            <tag> Python基础 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>字典</title>
      <link href="/2023/07/08/%E3%80%90Python%E5%9F%BA%E7%A1%80%E3%80%918-%E5%AD%97%E5%85%B8/"/>
      <url>/2023/07/08/%E3%80%90Python%E5%9F%BA%E7%A1%80%E3%80%918-%E5%AD%97%E5%85%B8/</url>
      
        <content type="html"><![CDATA[<h1>字典</h1><h2 id="字典的基本认识">字典的基本认识</h2><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20230717133332542.png" alt="image-20230717133332542"></p><p><strong>注意：</strong></p><ul><li>不可变的数据类型：str   int   float  tuple</li><li>可变的数据类型：list  dict  set</li><li>==只有不可变的数据类型才能作为字典元素的<strong>键</strong>==</li><li>字典用花括号扩住：d={…}</li><li><strong>字典的键是唯一的，如果有多个一样的键，则会自动剔除多余的，取最右边的键的值</strong></li></ul><h3 id="字典元素的访问">字典元素的访问</h3><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20230717133722074.png" alt="image-20230717133722074"></p><h3 id="字典的基本操作">字典的基本操作</h3><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20230717133928489.png" alt="image-20230717133928489"></p><p>涉及到<strong>in</strong>和函数<strong>get</strong></p><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20230717134155945.png" alt="image-20230717134155945"></p><h3 id="字典的构造">字典的构造</h3><p>d={‘a’:'b}相当于d={(‘a’,‘b’)}，也就是元组生成字典的一种形式</p><h4 id="利用已有的数据创建字典">利用已有的数据创建字典!</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">keys = [<span class="string">&#x27;a&#x27;</span>,<span class="string">&#x27;b&#x27;</span>,<span class="string">&#x27;c&#x27;</span>,<span class="string">&#x27;d&#x27;</span>]</span><br><span class="line">values = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>]</span><br><span class="line">dicts = <span class="built_in">dict</span>(<span class="built_in">zip</span>(keys,values))</span><br><span class="line">dicts</span><br><span class="line">&gt;&gt;&#123;<span class="string">&#x27;a&#x27;</span>:<span class="number">1</span>,<span class="string">&#x27;b&#x27;</span>:<span class="number">2</span>,<span class="string">&#x27;c&#x27;</span>:<span class="number">3</span>,<span class="string">&#x27;d&#x27;</span>:<span class="number">4</span>&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">#给定键值创建值为空的字典</span></span><br><span class="line">adict = <span class="built_in">dict</span>.fromkeys([<span class="string">&#x27;name&#x27;</span>,<span class="string">&#x27;age&#x27;</span>,<span class="string">&#x27;sex&#x27;</span>])</span><br><span class="line">adict</span><br><span class="line">&gt;&gt;&#123;<span class="string">&#x27;name&#x27;</span>:<span class="literal">None</span>, <span class="string">&#x27;age&#x27;</span>:<span class="literal">None</span>, <span class="string">&#x27;sex&#x27;</span>:<span class="literal">None</span>&#125;</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20230717134826007.png" alt="image-20230717134826007"></p><h2 id="lambda函数">lambda函数</h2><ul><li><p>lambda函数是一种特殊的函数——匿名函数</p></li><li><p>lambda函数是一个临时使用的函数，只包含一个表达式，表达式的计算结果可以看成函数的返回值</p></li><li><p>匿名函数并非没有名字，而是将函数名作为函数的结果返回：</p><p>fuc_name = lambda x: x</p></li><li><p>lambda函数与正常函数一样，等价于下面的表达式</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">fuc_name</span>(<span class="params">x</span>):</span><br><span class="line">    <span class="keyword">return</span> x</span><br></pre></td></tr></table></figure></li></ul><p>例子：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">f = <span class="keyword">lambda</span> x,y=<span class="number">2</span>,z=<span class="number">3</span>: x+y+z</span><br><span class="line">f(<span class="number">1</span>)</span><br><span class="line">&gt;&gt;<span class="number">6</span></span><br></pre></td></tr></table></figure><h2 id="字典的相关函数">字典的相关函数</h2><table><thead><tr><th>函数和方法</th><th>描述</th></tr></thead><tbody><tr><td>d.keys()</td><td>返回字典中键的序列列表</td></tr><tr><td>d.values()</td><td>返回字典中值的序列列表</td></tr><tr><td>d.items()</td><td>返回字典中所有的键值对序列元组列表，键值对以元组组织</td></tr><tr><td>d.get(key,deflaut)</td><td>键存在则返回键值，否则返回默认值</td></tr><tr><td>d.pop(key,defalut)</td><td>键存在则返回键值并删除键值对，否则返回默认值</td></tr><tr><td>d.popitem()</td><td>随机从字典中取出一个键值对，以元组(k,v)的形式返回</td></tr><tr><td>d.clear()</td><td>删除所有键值对</td></tr><tr><td>del d[key]</td><td>删除字典中某个键值对</td></tr><tr><td>key in d</td><td>如果键值在字典d中返回True，否则返回False</td></tr></tbody></table><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20230717135038589.png" alt="image-20230717135038589"></p><p><strong>应用</strong></p><p>关于字典打印出来的顺序问题：</p><p>在python3.5以前的版本，字典打印出来的顺序与字典本身的顺序毫无关系</p><p>在python3.5以后，字典的顺序与字典打印出来的顺序一致</p><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20230717140427561.png" alt="image-20230717140427561"></p><h3 id="字典的浅拷贝">字典的浅拷贝</h3><p><strong>键的值本质上是一个指针</strong></p><p>下面这个例子，y是x的浅拷贝，y修改了username的值不会影响到x，因为在y中，拷贝了username的指针，用另一块地址存放admin。</p><p>但是对于1978这个键的值，本身指向一块地址，y用另一块新的地址存放元组[1,2,3]的地址，实际上这时y和x的1978的键的值都指向同一块地址。所以y的变化会影响到x的变化。</p><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20230717140721338.png" alt="image-20230717140721338"></p><h3 id="字典的深拷贝">字典的深拷贝</h3><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20230717141121602.png" alt="image-20230717141121602"></p><h3 id="字典的遍历">字典的遍历</h3><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20230717141205168.png" alt="image-20230717141205168"></p><h2 id="字典推导式">字典推导式</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">s = &#123;x:x.strip() <span class="keyword">for</span> x <span class="keyword">in</span> (<span class="string">&#x27; he&#x27;</span>,<span class="string">&#x27; she&#x27;</span>,<span class="string">&#x27; I&#x27;</span>)&#125;</span><br><span class="line">s</span><br><span class="line">&gt;&gt;&#123;<span class="string">&#x27; he&#x27;</span>:<span class="string">&#x27;he&#x27;</span>,<span class="string">&#x27; she&#x27;</span>:<span class="string">&#x27;she&#x27;</span>,<span class="string">&#x27; I&#x27;</span>:<span class="string">&#x27;I&#x27;</span>&#125;</span><br><span class="line"></span><br><span class="line">s = &#123;i:<span class="built_in">str</span>(i) <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>,<span class="number">5</span>)&#125;</span><br><span class="line">s</span><br><span class="line">&gt;&gt;&#123;<span class="number">1</span>:<span class="string">&#x27;1&#x27;</span>,<span class="number">2</span>:<span class="string">&#x27;2&#x27;</span>,<span class="number">3</span>:<span class="string">&#x27;3&#x27;</span>,<span class="number">4</span>:<span class="string">&#x27;4&#x27;</span>&#125;</span><br><span class="line"></span><br><span class="line">x = [<span class="string">&#x27;A&#x27;</span>,<span class="string">&#x27;B&#x27;</span>,<span class="string">&#x27;C&#x27;</span>,<span class="string">&#x27;D&#x27;</span>]</span><br><span class="line">y = [<span class="string">&#x27;a&#x27;</span>,<span class="string">&#x27;b&#x27;</span>,<span class="string">&#x27;c&#x27;</span>,<span class="string">&#x27;d&#x27;</span>]</span><br><span class="line">&#123;i:j <span class="keyword">for</span> i,j <span class="keyword">in</span> <span class="built_in">zip</span>(x,y)&#125;</span><br><span class="line">&gt;&gt;&#123;<span class="string">&#x27;A&#x27;</span>:<span class="string">&#x27;a&#x27;</span>,<span class="string">&#x27;B&#x27;</span>:<span class="string">&#x27;b&#x27;</span>,<span class="string">&#x27;C&#x27;</span>:<span class="string">&#x27;c&#x27;</span>,<span class="string">&#x27;D&#x27;</span>:<span class="string">&#x27;d&#x27;</span>&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Python基础 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
            <tag> Python基础 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>列表</title>
      <link href="/2023/07/07/%E3%80%90Python%E5%9F%BA%E7%A1%80%E3%80%917-%E5%88%97%E8%A1%A8/"/>
      <url>/2023/07/07/%E3%80%90Python%E5%9F%BA%E7%A1%80%E3%80%917-%E5%88%97%E8%A1%A8/</url>
      
        <content type="html"><![CDATA[<h1>列表</h1><h2 id="序列类型相关操作">序列类型相关操作</h2><p>列表、字符串、元组都是Python中的序列数据类型，元素的存储有顺序；</p><p>下面对顺序类型的数据的常见操作进行汇总；下面的表格对所有序列类型数据适用。</p><table><thead><tr><th>操作符</th><th>描述</th></tr></thead><tbody><tr><td>x in s</td><td>x如果是s的元素，返回True，否则返回False</td></tr><tr><td>x not in s</td><td>不赘述</td></tr><tr><td>s+t</td><td>连接s和t</td></tr><tr><td><strong>s*n 或 n*s</strong></td><td><strong>将序列s复制n次</strong></td></tr><tr><td>s[i]</td><td>索引，返回序列的第i个元素</td></tr><tr><td><strong>s[i:j]</strong></td><td><strong>切片</strong>，返回包含序列s第i到j个元素的子序列（不包含j元素，==左闭右开==）</td></tr><tr><td>s[i:j:k]</td><td>按步长k切片，返回包含序列s第i到j个元素以k为步数的子序列</td></tr><tr><td><strong>len(s)</strong></td><td><strong>序列s的元素个数（长度）</strong></td></tr><tr><td><strong>min(s)</strong></td><td>序列s中的最小元素</td></tr><tr><td><strong>max(s)</strong></td><td>序列s中的最大元素</td></tr><tr><td>==s.index(x[,i[,j]])==</td><td>序列s中从i开始到j位置中第一次出现元素x的位置</td></tr><tr><td><strong>s.count(x)</strong></td><td>序列s中出现x的总次数</td></tr><tr><td><strong>sum(s)</strong></td><td>一般针对数字，对序列s中的元素求和</td></tr><tr><td><strong>sorted(s)</strong></td><td>排序函数，对列表、元组、集合等数据类型进行排序，返回列表</td></tr><tr><td>==enumerate==</td><td>枚举函数，将列表/元组/字典等其中的元素进行编号，返回其编号和元素</td></tr></tbody></table><h2 id="列表简介">列表简介</h2><ul><li><p>列表可以增删元素，列表元素可以修改，列表元素可以是任何类型；</p><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20230416213710381.png" alt="image-20230416213710381"></p></li><li><p>分析说明：</p><ol><li>del   删除列表元素的函数</li><li>list.append()，括号内<strong>无论输入什么，都是作为一个元素添加在列表的尾部</strong></li></ol></li></ul><h2 id="列表的赋值">列表的赋值</h2><ul><li><p>对于列表来说，a+=b和a=a+b不同</p><ol><li>a+=b，相当于在a列表指向的地址后面添加了一块地址给a；<strong>注意：+=的右边一定是一个列表</strong></li><li>a=a+b，相当于分配一块新的空间，存储a+b，即<strong>生成一个新的列表，然后让a指向这块新的地址</strong>；</li></ol><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20230416214211391.png" alt="image-20230416214211391"></p></li></ul><h3 id="列表乘法">列表乘法</h3><p>说明：</p><p>这里的b=a*3，相当于拷贝了一份a*3，然后b作为一个新的列表存放这些内容，和a不相关；</p><p>而c=[a]*3是说，c是一个列表，<strong>它的每一个元素都指向a</strong>，有3个元素，所以a的值的改变会影响c；</p><p><strong>启示:</strong> 涉及到新列表，就是涉及到一个新地址；</p><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20230416214413565.png" alt="image-20230416214413565"></p><p>深入探索：a=[[0]]*2+[[0]]*2是什么？</p><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20230716194826466.png" alt="image-20230716194826466"></p><h3 id="列表的切片">列表的切片</h3><p><strong>和字符串切片类似</strong></p><p>==列表可以同时使用正向递增序列和反向序列来切片！==</p><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20230416223322087.png" alt="image-20230416223322087"></p><h3 id="列表比大小">列表比大小</h3><p>和元组一致；</p><p>逐个比较，如果无法比较的数据类型，会runtime error</p><h3 id="列表相关函数">列表相关函数</h3><ul><li>sum   可以求列表元素的和，同时True表示1，False表示0</li></ul><h2 id="列表的排序">列表的排序</h2><h3 id="列表的朴素排序算法">列表的朴素排序算法</h3><ul><li>选择排序法</li><li>冒泡排序法</li></ul><h3 id="排序函数">排序函数</h3><p>sort是排序函数</p><p><strong>对数的排序</strong></p><p>用法：</p><ul><li>a.sort()，这样就会对a从小到大排序</li><li>b=sort<strong>ed</strong>(a)，对a排序后，生成一个新的列表b</li><li>a.sort(==reverse=True==)  从大到小排序</li></ul><h2 id="复杂列表的自义定排序">复杂列表的自义定排序</h2><p>==自定义比较函数 key，自定义排序规则，实际上是重载key函数==</p><h3 id="lambda表达式">lambda表达式</h3><p>lambda x:x[2]</p><p>lambda  参数：返回值</p><p>表示一个函数，参数是x，返回值是x[2]</p><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20230417185113033.png" alt="image-20230417185113033"></p><h3 id="用不同的关键字排序">用不同的关键字排序</h3><p>如果关键字比较相同，则相对位置不变</p><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20230417185223327.png" alt="image-20230417185223327"></p><h3 id="重载比较函数">重载比较函数</h3><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20230716201233568.png" alt="image-20230716201233568"></p><h3 id="多级排序">多级排序</h3><p>需求：有时候不止需要比较关键词，还需要比较多种数据；如年龄、成绩、姓名。</p><p>下面是多级比较按照年龄从大到小、成绩从高到低、姓名字典序排序的例子：</p><p>​自定义的排序函数f的返回值是一个<strong>元组</strong>，我们知道，元组的比较顺序就是从第0个元素开始逐个比较，如此便实现了我们的需求。</p><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20230716201951067.png" alt="image-20230716201951067"></p><h3 id="Python元组的排序">Python元组的排序</h3><p>元组不能修改，因此没有sort函数，但是可以用sorted函数。</p><p>用sorted函数后，元组变成排序后的新的列表，但元组本身不受影响。这个例子和多级排序的例子相同。</p><h2 id="列表相关函数-2">列表相关函数</h2><table><thead><tr><th>函数或方法</th><th>描述</th></tr></thead><tbody><tr><td>ls[i] = x</td><td>替换列表ls第i数据项为x</td></tr><tr><td>ls[i:j] = lt</td><td>用列表lt替换ls中第i到j项数据（不包括第j项）</td></tr><tr><td><strong>ls[i:j:k]</strong></td><td>有步长的替换，依然不包括第j项</td></tr><tr><td>del ls[i:j]</td><td>删除列表ls第i到j项数据，等价于ls[i:j]=[]</td></tr><tr><td><strong>del ls[i:j:k]</strong></td><td>删除列表ls第i到j以k为步的数据</td></tr><tr><td><strong>ls+=lt或ls.extend(lt)</strong></td><td>将列表<strong>lt的元素</strong>增加到列表ls中</td></tr><tr><td>*<em>ls <em>= n</em></em></td><td><strong>更新列表ls，其元素重复n次</strong></td></tr><tr><td>ls.append(x)</td><td>在列表ls最后增加一个元素x</td></tr><tr><td><strong>ls.clear()</strong></td><td>删除ls中所有元素</td></tr><tr><td><strong>ls.copy()</strong></td><td>返回一个新列表，复制ls中的所有元素</td></tr><tr><td><strong>ls.insert(i,x)</strong></td><td>在列表ls的第i个位置添加元素x</td></tr><tr><td><strong>ls.pop(i)</strong></td><td>将列表ls中第i项元素取出并删除该元素</td></tr><tr><td><strong>ls.remove(x)</strong></td><td>将列表中<strong>出现的第一个</strong>x元素删除</td></tr><tr><td><strong>ls.reverse()</strong></td><td>将列表中元素进行反转</td></tr><tr><td><strong>ls.sort()</strong></td><td>将列表中的数据从小到大排序</td></tr></tbody></table><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20230524221406534.png" alt="image-20230524221406534"></p><p>注意：</p><ol><li>extend和append的区别</li><li>remove(x)，只会删掉列表中第一次出现的x</li></ol><h2 id="列表映射">列表映射</h2><ul><li>map(function,sequence) ，可以用于将一个序列（列表、元组、集合…）映射到另一个序列</li><li>返回一个延时求值对象，可以转化为list、tuple、set…</li></ul><p>下面的a=map(f,[1,2,3])表示map是一个函数，将列表的各个元素作为参数，以x*x为返回值收集起来，a存放的是映射后的<strong>延时求值对象</strong>，它还没有被转换成list、set、tuple等数据类型，还不能使用。</p><p>在后面的代码操作中，通过list(a)、set(a)、tuple(a)，可以将a序列实例化，但是只能对a操作一次。</p><p><strong>下面代码第一次list(a)，已经把对象a进行了转化成list的操作，这时a对象就不存在了。后面再进行tuple(a)，输出为空。</strong></p><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20230716204447599.png" alt="image-20230716204447599"></p><h2 id="列表过滤">列表过滤</h2><ul><li>filter(function,sequence)，抽取序列中令function(x)为True的元素x</li><li>返回延时求值对象</li></ul><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20230716205213583.png" alt="image-20230716205213583"></p><h2 id="嵌套元祖的复杂列表">嵌套元祖的复杂列表</h2><p>复杂列表：</p><ol><li>各个元素可以是任意类型；</li><li>列表不会预先分配空间，可以任意增加长度；</li></ol><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">student = [(<span class="string">&#x27;201901&#x27;</span>,<span class="string">&#x27;张飞&#x27;</span>,<span class="string">&#x27;男&#x27;</span>,<span class="number">25</span>),(<span class="string">&#x27;201902&#x27;</span>,<span class="string">&#x27;张角&#x27;</span>,<span class="string">&#x27;男&#x27;</span>,<span class="number">26</span>)]</span><br></pre></td></tr></table></figure><h2 id="推导式生成列表-元组-字典-集合">推导式生成列表/元组/字典/集合</h2><h3 id="列表生成式"><strong>列表生成式</strong></h3><p>一行代码生成一个列表。</p><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20230716205623299.png" alt="image-20230716205623299"></p><h3 id="元组生成式">元组生成式</h3><p>和列表生成式语法相同，不过格式为<strong>tuple(…)</strong></p><p>而元组生成式格式为**[…]**</p><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20230716205722216.png" alt="image-20230716205722216"></p><h3 id="集合推导式">集合推导式</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">aset = &#123;x*x <span class="keyword">for</span> x <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">10</span>)&#125;</span><br></pre></td></tr></table></figure><h3 id="字典推导式">字典推导式</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">adict = &#123;x:x*x <span class="keyword">for</span> x <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">10</span>)&#125;</span><br></pre></td></tr></table></figure><h3 id="列表推导式复杂应用">列表推导式复杂应用</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#矩阵转置</span></span><br><span class="line">matrix = [[<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>], [<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span>,<span class="number">8</span>], [<span class="number">9</span>,<span class="number">10</span>,<span class="number">11</span>,<span class="number">12</span>]]</span><br><span class="line">matrix_reverse = [[row[i] <span class="keyword">for</span> row <span class="keyword">in</span> matrix] <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">4</span>)]</span><br><span class="line"></span><br><span class="line"><span class="comment">#使用内置函数实现矩阵转置</span></span><br><span class="line"><span class="built_in">list</span>(<span class="built_in">zip</span>(*matrix))  <span class="comment">#序列解包</span></span><br><span class="line">&gt;&gt;[(<span class="number">1</span>,<span class="number">5</span>,<span class="number">9</span>),(<span class="number">2</span>,<span class="number">6</span>,<span class="number">10</span>),(<span class="number">3</span>,<span class="number">7</span>,<span class="number">11</span>),(<span class="number">4</span>,<span class="number">8</span>,<span class="number">12</span>)]</span><br></pre></td></tr></table></figure><h2 id="二维列表">二维列表</h2><p>二维列表可以看作是矩阵，a[i][j]就是第i行第j列元素。</p><h3 id="二维列表的错误生成方法">二维列表的错误生成方法</h3><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20230716234804057.png" alt="image-20230716234804057"></p><h3 id="二维列表的正确生成方法">二维列表的正确生成方法</h3><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20230716235306898.png" alt="image-20230716235306898"></p><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20230716235323595.png" alt="image-20230716235323595"></p><h2 id="二维元组">二维元组</h2><p>二维元组的定义和二维列表的定义类似</p><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20230716235406251.png" alt="image-20230716235406251"></p><h2 id="列表的拷贝-复制（重点关注）">列表的拷贝/复制（重点关注）</h2><h3 id="列表的拷贝">列表的拷贝</h3><h4 id="浅拷贝">浅拷贝</h4><p>若有两个列表a,b；则b=a意味着b指向a指向的地址，这时a和b指向同一个地址，相互影响。</p><p>若需要对列表进行拷贝：b=a[:]</p><p>也可以通过函数的方式进行拷贝：b = a.copy()</p><h4 id="深拷贝">深拷贝</h4><p>以下是浅拷贝的例子。</p><p><strong>浅拷贝</strong>：只拷贝指针，并不拷贝指针指向的内容</p><p><strong>深拷贝</strong>：不但拷贝指针，还拷贝指针指向的内容（以下面的例子来说，就是把列表[2]也另外拷贝了一份，b=[1,[2]]，虽然b中的[2]和a中的[2]看起来一样，但他们并不是指向同一块地址，不会相互影响。）</p><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20230716235751896.png" alt="image-20230716235751896"></p><h4 id="列表深拷贝的实现">列表深拷贝的实现</h4><p>深拷贝之后，a和b没有任何相互影响的关系。</p><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20230717000422658.png" alt="image-20230717000422658"></p><h2 id="数据类型的互转">数据类型的互转</h2><h3 id="强制类型转换方法">强制类型转换方法</h3><h4 id="元组和列表的转换">元组和列表的转换</h4><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20230717000624061.png" alt="image-20230717000624061"></p><h4 id="元组、列表和字符串的转换">元组、列表和字符串的转换</h4><p>解释一下第二行代码的&quot;&quot;.join([…])，join的功能就是把传给join的参数连在一起（一般是列表），再加上字符串尾巴，这里尾巴是“”。</p><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20230717000834759.png" alt="image-20230717000834759"></p><h4 id="数字和列表的相互转换">数字和列表的相互转换</h4><ol><li><p>把123转换成[1,2,3]</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">num=<span class="number">123</span></span><br><span class="line">lst=[<span class="built_in">int</span>(digit) <span class="keyword">for</span> digit <span class="keyword">in</span> <span class="built_in">str</span>(num)]</span><br><span class="line"><span class="comment">#先把数字转换成字符串，再使用列表推导式</span></span><br></pre></td></tr></table></figure></li><li><p>把[1,2,3]转换成123</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">lst=[<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>]</span><br><span class="line">lst=<span class="built_in">list</span>(<span class="built_in">map</span>(<span class="built_in">str</span>,lst))<span class="comment">#先把序列转换成字符串序列，因为join函数只是对字符串的拼接</span></span><br><span class="line">num=<span class="built_in">int</span>(<span class="string">&quot;&quot;</span>.join(lst))</span><br></pre></td></tr></table></figure></li></ol>]]></content>
      
      
      <categories>
          
          <category> Python基础 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
            <tag> Python基础 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>元组</title>
      <link href="/2023/07/06/%E3%80%90Python%E5%9F%BA%E7%A1%80%E3%80%916-%E5%85%83%E7%BB%84/"/>
      <url>/2023/07/06/%E3%80%90Python%E5%9F%BA%E7%A1%80%E3%80%916-%E5%85%83%E7%BB%84/</url>
      
        <content type="html"><![CDATA[<h1>元组</h1><ul><li>元组由数个逗号分隔的值构成，前后可以加括号；</li><li>元组不能修改，即不可增删元素，不可对元素赋值，不可修改元素顺序（比如排序）；</li><li>访问方式与列表相同，元组的访问速度比列表快。（列表式方括号，元素可修改）；</li><li>一般用于表达固定的数据项、函数多个返回值等情况；</li><li>元组中的元素可以是任意不同类型，元组中的元素如果是==列表或者集合==是可以修改的；</li><li>元组表示的是结构，列表表示的是顺序，所以元祖通常由不同的数据类型元素构成，而列表通常由相同的数据类型构成；</li></ul><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20230416205739412.png" alt="image-20230416205739412"></p><ul><li><p><strong>元组的内容由可能被修改。例如，如果元组是列表，就可以修改该列表；</strong></p><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20230416210255845.png" alt="image-20230416210255845"></p></li></ul><h2 id="元组元素的本质">元组元素的本质</h2><p><strong>元组的每个元素都是一个指针，一旦元组建立，那么元组元素的指针指向就确定了</strong>，不能更改元组元素的指向；</p><p>可以对元组的元素进行修改，比如，元素是一个列表，可以修改该列表。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">t=<span class="string">&#x27;abc&#x27;</span>,<span class="number">123</span>,<span class="string">&quot;ios&quot;</span></span><br><span class="line">t[<span class="number">0</span>]=<span class="number">5</span> <span class="comment">#错误，元组元素不能更改指向</span></span><br><span class="line">t[<span class="number">0</span>][<span class="number">2</span>]=<span class="number">123</span> <span class="comment">#可以修改，修改元组元素指向的内容是可以的</span></span><br></pre></td></tr></table></figure><h2 id="元组的高级用法">元组的高级用法</h2><h3 id="元组的内置函数">元组的内置函数</h3><table><thead><tr><th>方法</th><th>描述</th></tr></thead><tbody><tr><td>len(tuple)</td><td>计算元组个数</td></tr><tr><td>max(tuple)</td><td>略</td></tr><tr><td>min(tuple)</td><td>略</td></tr><tr><td>tuple(seq)</td><td>将列表转为元组</td></tr><tr><td>其他序列型函数</td><td>在列表那一章有汇总</td></tr></tbody></table><p><strong>元组使用的注意事项：</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#元组中元素不能修改</span></span><br><span class="line">atuple = (<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>)</span><br><span class="line">atuple.sort()   错误！</span><br><span class="line">atuple.pop()   错误！</span><br><span class="line"></span><br><span class="line"><span class="built_in">sorted</span>(atuple)   允许！</span><br></pre></td></tr></table></figure><h3 id="单元素原组">单元素原组</h3><p><strong>注意单元素原组，一定不能少了逗号，否则不是元组；</strong></p><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20230416210633369.png" alt="image-20230416210633369"></p><h3 id="元组的切片">元组的切片</h3><p>用下标访问元组，以及元组的切片；用法和字符串一样；</p><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20230416210800842.png" alt="image-20230416210800842"></p><h3 id="元组的连接和组合">元组的连接和组合</h3><ul><li><p>可以对元组进行连接组合；</p><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20230416210916671.png" alt="image-20230416210916671"></p></li><li><p>和字符串连接相似；</p></li></ul><h3 id="元组的运算和迭代">元组的运算和迭代</h3><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20230416211026364.png" alt="image-20230416211026364"></p><h3 id="元组的赋值">元组的赋值</h3><p>分析：<code>x+=(100,)</code>等价于<code>x=x+(100,)</code>，<strong>实际上就是在赋值符号右边新建了一个元组指向新的地址</strong>，x指向那块新的地址；但是b指向的位置不变，内容也不变；</p><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20230416211130909.png" alt="image-20230416211130909"></p><h3 id="元组比大小">元组比大小</h3><ul><li><strong>逐个元素比大小</strong>，直到分出胜负；</li><li>如果由两个对应元素无法比大小（比如数据类型不同），那么会出现runtime error</li></ul><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20230416211439176.png" alt="image-20230416211439176"></p><h4 id="元组的实用例子：">元组的实用例子：</h4><ul><li>取代复杂的分支结构</li></ul>]]></content>
      
      
      <categories>
          
          <category> Python基础 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
            <tag> Python基础 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>字符串</title>
      <link href="/2023/07/05/%E3%80%90Python%E5%9F%BA%E7%A1%80%E3%80%915-%E5%AD%97%E7%AC%A6%E4%B8%B2/"/>
      <url>/2023/07/05/%E3%80%90Python%E5%9F%BA%E7%A1%80%E3%80%915-%E5%AD%97%E7%AC%A6%E4%B8%B2/</url>
      
        <content type="html"><![CDATA[<h1>字符串</h1><h2 id="转义字符">转义字符</h2><h3 id="转义字符：">转义字符：\</h3><ul><li><p>必须在引号里面</p></li><li><p>规定’\'不转义的字符串，要在字符串引号前加上r</p><p><code>print(r'ab\ncd')#这样的\会被当作正常的字符串输出  </code></p></li></ul><h2 id="字符串切片（子串）-同样时用于元组和列表">字符串切片（子串）/同样时用于元组和列表</h2><h3 id="a-x-y-详解">a[x:y]详解</h3><ul><li>对于字符串<code> a=&quot;ABCD&quot;</code>       <code>a[1:2]</code>表示<strong>左闭右开</strong>的字符串区间，代表了字符B</li><li><strong>字符串最左边的元素序号为0，最右边的元素序号为-1</strong></li><li><code>a[2:]</code>终点省略，表示从2一直到最后；开头省略同理；</li><li>修改字符串中的子串，不能通过s[i]='x’的方式进行修改和删除</li></ul><h3 id="Python字符串的两种序号体系">Python字符串的两种序号体系</h3><p>以字符串hello world为例：</p><table><thead><tr><th>反向序列</th><th>-11</th><th>-10</th><th>-9</th><th>-8</th><th>-7</th><th>-6</th><th>-5</th><th>-4</th><th>-3</th><th>-2</th><th>-1</th></tr></thead><tbody><tr><td>字符串</td><td>H</td><td>e</td><td>l</td><td>l</td><td>o</td><td></td><td>W</td><td>o</td><td>r</td><td>l</td><td>d</td></tr><tr><td>正向序列</td><td>0</td><td>1</td><td>2</td><td>3</td><td>4</td><td>5</td><td>6</td><td>7</td><td>8</td><td>9</td><td>10</td></tr></tbody></table><h3 id="a-x-y-z-详解">a[x:y:z]详解</h3><p>a[x:y:z]表示，从a[x]取到a[y]（a[y]不算），<strong>每z个字符取一次</strong>，最后拼起来；</p><p><strong>z如果为负数，表示倒着取；</strong></p><p>x，y可以省略。x，y全省略表示从头取到尾或者从尾取到头；</p><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20230416090539584.png" alt="image-20230416090539584"></p><h2 id="字符串的分割">字符串的分割</h2><h3 id="split函数详解">split函数详解</h3><p><code>s.split(x)</code>用字符串x做分割符分割字符串s，得到分割后的列表<strong>两个相邻分割符号之间会被分隔出一个空串</strong>。</p><p><strong>字符串分隔后，得到各个子串包括空串的列表。</strong></p><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20230416090826652.png" alt="image-20230416090826652"></p><h3 id="字符串高级分割">字符串高级分割</h3><h4 id="用多个分隔串进行分割（引入库re）">用多个分隔串进行分割（引入库re）</h4><p><strong>re是正则表达式包</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> re</span><br><span class="line">a=<span class="string">&#x27;beautiful, is ; better*than\nugly&#x27;</span></span><br><span class="line"><span class="built_in">print</span>(re.split(<span class="string">&#x27;;| |,|\*|\n&#x27;</span>,a))<span class="comment">#分隔符串用 | 分开</span></span><br><span class="line">两个相邻的分隔符串之间，会隔出一个空串</span><br></pre></td></tr></table></figure><h3 id="字符串相关函数">字符串相关函数</h3><ul><li><p>count   求子串出现次数</p><p><code>s='thisAAbb AA'</code></p><p><code>s.count('AA')</code>  返回2，表示AA出现2次</p></li><li><p>len   字符串长度</p><p><code>s='1234'</code></p><p><code>len(s)</code>   返回4</p></li><li><p>upper、lower函数</p><p>转大写、小写</p></li><li><p>find、rfind、index、rindex   在字符串中查找子串，返回找到的下标。找不到的话find返回-1，index引发异常</p><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20230416091854828.png" alt="image-20230416091854828"></p><ol><li><p>find还可以指定查找的起点。</p><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20230416092046109.png" alt="image-20230416092046109"></p></li></ol></li><li><p>replace  替换    返回替换后的新串</p><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20230416092132781.png" alt="image-20230416092132781"></p></li><li><p>isdigit()、islower()、isupper()，判断字符串是否是数，是否全是小写等</p></li><li><p>startswith，endswith，判断字符串是否以某个子串开头或者结尾</p></li></ul><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20230416092423228.png" alt="image-20230416092423228"></p><ul><li><p>strip()  返回除去头尾空白字符(空格、‘\r’ ‘\t’ ‘\n’)后面的字符串</p></li><li><p>lstrip()  返回除去头部(左端)空白字符后的字符串</p></li><li><p>rstrip()  返回除去尾部空白字符串后的字符串</p><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20230416092729841.png" alt="image-20230416092729841"></p></li></ul><h2 id="字符串的编码">字符串的编码</h2><p>字符串在内存中的编码都是unicode，虽然写到文件的时候可能是gbk，或者utf-8</p><h2 id="字符串的格式化">字符串的格式化</h2><h3 id="format函数">format函数</h3><p>format函数，在字符串对应的参数格式。{0}…format{“nihao”,“21” }——&gt;表示format中的第0个元素替换{0}。</p><p>也可以用键值对的方式进行对应：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;&#123;name&#125;,&#123;sex&#125;&#x27;</span>.<span class="built_in">format</span>(name=<span class="string">&quot;icserm&quot;</span>,sex=<span class="string">&#x27;male&#x27;</span>))</span><br></pre></td></tr></table></figure><p>{序号：宽度.精度  类型}</p><ul><li>&lt;  右对齐</li><li>&gt;   左对齐</li><li>^   中对齐</li><li>:b 、 :d 、 :o 、:x 分别表示二进制、十进制、八进制、十六进制输出</li></ul><p><strong>例如：如果{0:&gt;10.4f}表示第0项是小数，以宽度至少是10个字符，右对齐（宽度不足时补充在左边），保留小数点后4位的方式输出。</strong></p><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20230416093121081.png" alt="image-20230416093121081"></p><h4 id="字符串格式化2image-20230416093653076">字符串格式化2<img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20230416093653076.png" alt="image-20230416093653076"></h4>]]></content>
      
      
      <categories>
          
          <category> Python基础 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
            <tag> Python基础 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python的数据类型</title>
      <link href="/2023/07/04/%E3%80%90Python%E5%9F%BA%E7%A1%80%E3%80%914-Python%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/"/>
      <url>/2023/07/04/%E3%80%90Python%E5%9F%BA%E7%A1%80%E3%80%914-Python%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/</url>
      
        <content type="html"><![CDATA[<h1>Python的数据类型</h1><h2 id="基本数据类型">基本数据类型</h2><ul><li>int</li><li>float</li><li>complex</li></ul><h2 id="组合数据类型">组合数据类型</h2><ul><li>字符串   str</li><li>元组       tuple</li><li>列表       list</li><li>字典       dict</li><li>集合       set</li></ul><h2 id="相关函数">相关函数</h2><ol><li><p>isinstance(x,y)   查询数据x是否时类型y</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">a=<span class="string">&quot;1233&quot;</span></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">isinstance</span>(a,<span class="built_in">str</span>)) <span class="comment">#返回true</span></span><br></pre></td></tr></table></figure></li><li><p>len   求组合数据类型的元素个数（长度）</p><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20230415235603907.png" alt="image-20230415235603907"></p></li></ol><h2 id="关于Python中变量的理解">关于Python中变量的理解</h2><ul><li><p>Python中的变量<strong>都是指针</strong>；</p><p><strong>python中所有可以赋值的东西，也就是所有可以出现在“=”左边的东西，==都是指针==；</strong></p></li><li><p>指针即代表内存单元的地址</p></li><li><p><strong>对变量进行赋值的本质，就是让该变量的指针指向某个地址</strong>(每对变量赋值一次，就会给一个赋值一个地址，是<strong>实时动态变化</strong>的)</p></li><li><p><strong>用一个变量对另一个变量赋值，意味着让两个变量指向同一个地方</strong></p><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20230416000022697.png" alt="image-20230416000022697"></p></li></ul><h3 id="“is-运算符和”-的区别">“is&quot;运算符和”==&quot;的区别</h3><ul><li>a is b 为true，说明a和b指向同一个地方（指针地址相同）</li><li>a == b 为true，说明a和b指向的地方放的东西相同（指针指向的地址上存储的数据相同）</li><li>a=b会使得a和b指向同一个地方</li></ul><h4 id="值的注意的问题：">值的注意的问题：</h4><ul><li>对于list、dict、set类型的变量</li></ul><p>这类变量存储时，分配一片连续的空间存储数据，如果对其中的某片数据进行改变，就是对内存上某个位值的数据进行改变，但<strong>地址不变</strong></p><p>对于赋值符号两边，其中一个变量数据的改变会影响到另一个变量，因为他们指向同一块地址</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">a=[<span class="number">1</span>,<span class="number">3</span>,<span class="number">5</span>,<span class="number">7</span>,<span class="number">9</span>]</span><br><span class="line">b=a</span><br><span class="line"><span class="built_in">print</span>(b[<span class="number">2</span>]) <span class="comment">#输出3</span></span><br><span class="line">a[<span class="number">2</span>]=<span class="number">10</span></span><br><span class="line"><span class="built_in">print</span>(b[<span class="number">2</span>])<span class="comment">#输出10</span></span><br></pre></td></tr></table></figure><ul><li><p>对于int、float、complex、str、tuple类型的变量</p><p>他们的存储时分配一块内存地址，每次给他们的值改变，都会给他们分配一片新的内存空间，也就是说原来地址上的数据不变，但是该变量的地址改变了。</p><p>所以当a=b，a改变了并不会对b造成影响</p></li></ul><h3 id="列表元素的指针本质">列表元素的指针本质</h3><ul><li><p>列表元素也可以赋值，也是指针</p><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20230416002538576.png" alt="image-20230416002538576"></p></li></ul>]]></content>
      
      
      <categories>
          
          <category> Python基础 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
            <tag> Python基础 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>函数</title>
      <link href="/2023/07/03/%E3%80%90Python%E5%9F%BA%E7%A1%80%E3%80%913-%E5%87%BD%E6%95%B0/"/>
      <url>/2023/07/03/%E3%80%90Python%E5%9F%BA%E7%A1%80%E3%80%913-%E5%87%BD%E6%95%B0/</url>
      
        <content type="html"><![CDATA[<h1>函数</h1><h3 id="函数的定义">函数的定义</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">f</span>(<span class="params">x,y</span>):</span><br><span class="line">    <span class="keyword">return</span> x+y</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="python的函数可以返回多个值">python的函数可以返回多个值</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">sumAndDiffernt</span>(<span class="params">x,y</span>):</span><br><span class="line">    <span class="keyword">return</span> x+y,x-y</span><br><span class="line"></span><br><span class="line">s,d=sumAndDiffernt(<span class="number">10</span>,<span class="number">5</span>)</span><br><span class="line"><span class="built_in">print</span>(s,d)</span><br><span class="line">//输出<span class="number">15</span> <span class="number">5</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Python基础 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
            <tag> Python基础 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>python的基本逻辑结构</title>
      <link href="/2023/07/02/%E3%80%90Python%E5%9F%BA%E7%A1%80%E3%80%912-python%E7%9A%84%E5%9F%BA%E6%9C%AC%E7%A8%8B%E5%BA%8F%E9%80%BB%E8%BE%91%E7%BB%93%E6%9E%84/"/>
      <url>/2023/07/02/%E3%80%90Python%E5%9F%BA%E7%A1%80%E3%80%912-python%E7%9A%84%E5%9F%BA%E6%9C%AC%E7%A8%8B%E5%BA%8F%E9%80%BB%E8%BE%91%E7%BB%93%E6%9E%84/</url>
      
        <content type="html"><![CDATA[<h1>python的基本逻辑结构</h1><h2 id="条件分支语句">条件分支语句</h2><p>如果要控制缩进，就需要有冒号；</p><p><strong>循环结构、分支结构等等，都得注意缩进的问题</strong></p><h2 id="输出格式控制">输出格式控制</h2><h3 id="字符串中的格式控制符：">字符串中的格式控制符：</h3><ol><li>%s表示输出字符串</li><li>%d</li><li>%f</li><li>%.nf表示要输出一个小数，保留小数点后n位，<strong>四舍六入</strong></li></ol><h2 id="循环结构">循环结构</h2><h3 id="for循环">for循环</h3><h4 id="遍历数的范围">遍历数的范围</h4><p>range(5)，左闭右开</p><p>range(0,5)</p><p>range(0,10,3)，【0,10），步长为3；</p><h4 id="遍历列表">遍历列表</h4><p>len() 可以用于求字符串长度、元组、列表、字典等等的元素个数；</p><h4 id="遍历字符串">遍历字符串</h4><p>for letter in ‘taobao’</p><h4 id="字符的编码">字符的编码</h4><p>ord输入参数必须为字符串，输出为数字；</p><p>chr输入参数必须为整数，输出为字符；</p><p>字符的编码：二进制数，在计算机中的表示标识编码；比如汉字是unicode编码，字母是ASCII编码；</p><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20230323232430296.png" alt="image-20230323232430296"></p><h3 id="while循环">while循环</h3><h4 id="基本语法">基本语法</h4><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20230323235042204.png" alt="image-20230323235042204"></p><h2 id="异常处理">异常处理</h2><h3 id="基本语法-2">基本语法</h3><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20230323235938258.png" alt="image-20230323235938258"></p><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20230324000007566.png" alt="image-20230324000007566"></p><p>下标越界也会异常；<br>下标越界也会异常；</p><h2 id="格式输出常见方法">格式输出常见方法</h2><h3 id="format方法">format方法</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">name=<span class="string">&quot;John&quot;</span></span><br><span class="line">age=<span class="number">25.567</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;My name is &#123;&#125; and I am &#123;:.2f&#125; years old.&quot;</span>.<span class="built_in">format</span>(name,age))</span><br></pre></td></tr></table></figure><h3 id="的形式（沿用C语言）">%的形式（沿用C语言）</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">print</span>(<span class="string">&quot;My name is %s and I am %.2f years old.&quot;</span>%(name,age))</span><br></pre></td></tr></table></figure><h3 id="f-string格式化方法">f-string格式化方法</h3><p>用法：</p><p>在字符串前面加上f，然后再字符串中使用花括号{}来表示变量。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">print</span>(<span class="string">f&quot;My name is <span class="subst">&#123;name&#125;</span> and I am <span class="subst">&#123;age:<span class="number">.2</span>f&#125;</span> years old.&quot;</span>)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Python基础 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
            <tag> Python基础 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>python的算数运算</title>
      <link href="/2023/07/01/%E3%80%90Python%E5%9F%BA%E7%A1%80%E3%80%911-%E7%AE%97%E6%9C%AF%E8%BF%90%E7%AE%97/"/>
      <url>/2023/07/01/%E3%80%90Python%E5%9F%BA%E7%A1%80%E3%80%911-%E7%AE%97%E6%9C%AF%E8%BF%90%E7%AE%97/</url>
      
        <content type="html"><![CDATA[<h1>python的计算</h1><p>注意事项：</p><ul><li><strong>/  输出的结果一定是小数</strong></li><li>x 如果是小数，那么x//1也是小数</li><li>print(-9//2)，结果是-5，向负半轴取数</li></ul><h2 id="关系运算符也能比较字符串">关系运算符也能比较字符串</h2><p>a=“abc”</p><p>a==“abc”，返回true</p><h2 id="逻辑运算符">逻辑运算符</h2><ul><li>and</li><li>or</li><li>not</li></ul><h2 id="关系运算的结果True-False">关系运算的结果True   False</h2><ul><li><p>False</p><p>0、“”(空字符串)、[](空列表)    都相当于False</p></li><li><p>True</p><p>非0数、非空字符串、非空列表</p></li></ul><h2 id="各种运算符的优先级">各种运算符的优先级</h2><p>从高到底：</p><ol><li><p>算术运算符：**、*、/、//、%、+、-</p><p><strong>注意：</strong>//是整除、/是带小数点的除法</p></li><li><p>关系运算符：&lt;、&gt;、==、！=、&lt;=、&gt;=</p></li><li><p>逻辑运算符：not、and、or</p></li></ol><h2 id="Python数据类型中的浮点数">Python数据类型中的浮点数</h2><p>Python中，浮点数的数据类型使用底层表示存储数据，用底层CPU和IEEE标准来计算；所以在python表示浮点数的时候会出现误差，即使是最简单的数学运算也可能产生小的误差。</p><p>比如:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">a = <span class="number">2.1</span></span><br><span class="line">b = <span class="number">4.2</span></span><br><span class="line">a+b  &lt;&lt;输出 <span class="number">3.000001</span></span><br></pre></td></tr></table></figure><p>在一些特殊行业，比如金融，这样的误差是不被允许的；由于Python底层就是这样实现浮点数运算的，Python本身无法避免这样的误差；</p><p>为了解决这个问题，我们可以使用decimal库来获取更高的精度。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> decimal <span class="keyword">import</span> Decimal</span><br><span class="line">a = Decimal(<span class="string">&#x27;4.2&#x27;</span>)</span><br><span class="line">b = Decimal(<span class="string">&#x27;2.1&#x27;</span>)</span><br><span class="line">a+b</span><br><span class="line">&lt;&lt; Decimal(<span class="string">&#x27;6.3&#x27;</span>) （输出的是正常精度的数字了）</span><br><span class="line"><span class="built_in">print</span>(a+b)</span><br><span class="line">&lt;&lt; <span class="number">6.3</span></span><br><span class="line">(a+b) == Decimal(<span class="string">&#x27;6.3&#x27;</span>)</span><br><span class="line">&lt;&lt; <span class="literal">True</span></span><br></pre></td></tr></table></figure><h2 id="二进制以及二进制位运算">二进制以及二进制位运算</h2><p>二进制在Python中用0b打头；</p><p>bin()函数可以将十进制数据以二进制的方式表示；</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">0b11011</span></span><br><span class="line">&lt;&lt; <span class="number">27</span></span><br><span class="line"><span class="built_in">bin</span>(<span class="number">27</span>)</span><br><span class="line">&lt;&lt; <span class="number">0b11011</span></span><br></pre></td></tr></table></figure><p>二进制的位运算：</p><table><thead><tr><th>运算符</th><th>名称与作用</th></tr></thead><tbody><tr><td>&amp;</td><td>按位与</td></tr><tr><td>|</td><td>按位或</td></tr><tr><td>^</td><td>按位异或</td></tr><tr><td>==-==</td><td><strong>==按位取非==</strong></td></tr><tr><td>&lt;&lt;</td><td>左移运算符</td></tr><tr><td>&gt;&gt;</td><td>右移运算符</td></tr></tbody></table><h2 id="数据类型转换">数据类型转换</h2><ol><li>int(x)    不支持复数</li><li>float(x)    不支持复数</li><li>complex(x,y)</li><li>str(x)</li><li>bin(x)、 oct(x)、 hex(x)</li><li><strong>chr(x)， ord(x)</strong>    ASCII码与十进制的转化</li></ol>]]></content>
      
      
      <categories>
          
          <category> Python基础 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
            <tag> Python基础 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>playwright测试工具的使用(未更新)</title>
      <link href="/2023/06/10/%E3%80%90%E6%95%B0%E6%8D%AE%E6%8C%96%E6%8E%98%E3%80%91%E7%88%AC%E8%99%AB%E7%B3%BB%E7%BB%9F%E5%AD%A6%E4%B9%A0-7-playwrite%E5%AD%A6%E4%B9%A0/"/>
      <url>/2023/06/10/%E3%80%90%E6%95%B0%E6%8D%AE%E6%8C%96%E6%8E%98%E3%80%91%E7%88%AC%E8%99%AB%E7%B3%BB%E7%BB%9F%E5%AD%A6%E4%B9%A0-7-playwrite%E5%AD%A6%E4%B9%A0/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      <categories>
          
          <category> 数据挖掘 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
            <tag> 爬虫设计 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>模拟浏览器爬取数据</title>
      <link href="/2023/06/06/%E3%80%90%E6%95%B0%E6%8D%AE%E6%8C%96%E6%8E%98%E3%80%91%E7%88%AC%E8%99%AB%E7%B3%BB%E7%BB%9F%E5%AD%A6%E4%B9%A0-6-selenium%E7%9A%84%E4%BD%BF%E7%94%A8/"/>
      <url>/2023/06/06/%E3%80%90%E6%95%B0%E6%8D%AE%E6%8C%96%E6%8E%98%E3%80%91%E7%88%AC%E8%99%AB%E7%B3%BB%E7%BB%9F%E5%AD%A6%E4%B9%A0-6-selenium%E7%9A%84%E4%BD%BF%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<h1>模拟浏览器爬取数据</h1><h2 id="selenium简介">selenium简介</h2><p>selenium会模拟一个浏览器进行数据的获取，然后我们可以在模拟浏览器获取的页面上进行数据的获取。</p>]]></content>
      
      
      <categories>
          
          <category> 数据挖掘 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
            <tag> 爬虫设计 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>cookie的利用</title>
      <link href="/2023/06/05/%E3%80%90%E6%95%B0%E6%8D%AE%E6%8C%96%E6%8E%98%E3%80%91%E7%88%AC%E8%99%AB%E7%B3%BB%E7%BB%9F%E5%AD%A6%E4%B9%A0-5-cookie%E7%9A%84%E5%88%A9%E7%94%A8/"/>
      <url>/2023/06/05/%E3%80%90%E6%95%B0%E6%8D%AE%E6%8C%96%E6%8E%98%E3%80%91%E7%88%AC%E8%99%AB%E7%B3%BB%E7%BB%9F%E5%AD%A6%E4%B9%A0-5-cookie%E7%9A%84%E5%88%A9%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<h1>cookie</h1><h2 id="简介">简介</h2><p>cookie类似于一个密钥，客户端登录之后会获取一个cookie，然后后面的访问都带着cookie对服务器进行请求。很多网站，没有cookie，就不能请求到数据。</p><h2 id="使用">使用</h2><h3 id="步骤">步骤</h3><ol><li><p>登录    得到cookie</p></li><li><p>带着cookie对服务器请求数据</p></li><li><p>注意：上面两个操作必须连起来，所以我们需要用session进行请求。</p><p>​ session请求可以认为是一连串的请求，在请求过程中cookie不会丢失。</p></li></ol><h1>防盗链</h1><h2 id="防盗链">防盗链</h2><p>request请求中的headers中的参数referer中会有一个地址，这个地址用于溯源访问当前页面的前一个页面，如果前面没有的话就会被反爬。</p>]]></content>
      
      
      <categories>
          
          <category> 数据挖掘 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
            <tag> 爬虫设计 - 计算机网络基础 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>数据解析</title>
      <link href="/2023/06/04/%E3%80%90%E6%95%B0%E6%8D%AE%E6%8C%96%E6%8E%98%E3%80%91%E7%88%AC%E8%99%AB%E7%B3%BB%E7%BB%9F%E5%AD%A6%E4%B9%A0-4-%E6%95%B0%E6%8D%AE%E8%A7%A3%E6%9E%90/"/>
      <url>/2023/06/04/%E3%80%90%E6%95%B0%E6%8D%AE%E6%8C%96%E6%8E%98%E3%80%91%E7%88%AC%E8%99%AB%E7%B3%BB%E7%BB%9F%E5%AD%A6%E4%B9%A0-4-%E6%95%B0%E6%8D%AE%E8%A7%A3%E6%9E%90/</url>
      
        <content type="html"><![CDATA[<h1>数据解析</h1><h2 id="前言">前言</h2><p>爬虫获取到数据后需要对数据进行解析，常用的解析方式有三种：正则解析、bs4解析、xpath解析。</p><p>其中最常用并且最搞笑的解析方式就是xpath解析，其通用性也比较强。</p><h2 id="xpath解析">xpath解析</h2><h3 id="xpath简介">xpath简介</h3><p>xpath是xml文档中搜索内容的一门语言；html是xml的一个子集，所以xpath可以用于解析html中的内容。</p><h3 id="原理">原理</h3><ol><li>file实例化一个etree的对象，且需要将被解析的页面源码数据加载到该对象中</li><li>调用etree对象中的xpath方法结合xpath表达式实现标签的定位和内容的捕获</li></ol><h3 id="环境安装">环境安装</h3><ol><li>安装一个解析器：pip install lxml</li></ol><h3 id="实现过程">实现过程</h3><h4 id="实例化一个etree对象-from-lxml-import-etree">实例化一个etree对象(from lxml import etree)</h4><ol><li><p>将本地的html文档中的源码数据加载到etree对象中：</p><p>etree.parse(filePath)</p></li><li><p>或将从互联网上获取的源码数据加载到该对象中（也可以加载xml）：</p><p>etree.HTML(‘page_text’)</p></li><li><p>xpath(‘<strong>xpath表达式</strong>’)获取相关的标签定位和内容捕获</p><ul><li><p><strong>xpath表达式：</strong></p><ul><li><p>/：表达的是根节点开始定位，的表达式</p></li><li><p>//：表达的是从任意的位置定位到某个特定的标签或者是表示从多个层级下来定位到某个标签</p></li><li><p>属性定位：//div[@class=“song”]//</p></li><li><p>索引定位：//div[@class=“song”]/p[3]  <strong>索引是从1开始的</strong></p></li><li><p>取文本：//div[@class=“song”]/li**/text()**，获取直系文本内容</p><p>​                //div[@class=“song”]/li**//text()**，获取该标签下所有的文本内容(两条斜杠)</p></li><li><p>取属性：//div[@class=“tang”]/img/<strong>@src</strong></p></li></ul></li></ul></li></ol>]]></content>
      
      
      <categories>
          
          <category> 数据挖掘 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
            <tag> 爬虫设计 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>网络请求模块</title>
      <link href="/2023/06/03/%E3%80%90%E6%95%B0%E6%8D%AE%E6%8C%96%E6%8E%98%E3%80%91%E7%88%AC%E8%99%AB%E7%B3%BB%E7%BB%9F%E5%AD%A6%E4%B9%A0-3-%E7%BD%91%E7%BB%9C%E8%AF%B7%E6%B1%82%E6%A8%A1%E5%9D%97/"/>
      <url>/2023/06/03/%E3%80%90%E6%95%B0%E6%8D%AE%E6%8C%96%E6%8E%98%E3%80%91%E7%88%AC%E8%99%AB%E7%B3%BB%E7%BB%9F%E5%AD%A6%E4%B9%A0-3-%E7%BD%91%E7%BB%9C%E8%AF%B7%E6%B1%82%E6%A8%A1%E5%9D%97/</url>
      
        <content type="html"><![CDATA[<h1>网络请求模块</h1><h2 id="前言">前言</h2><p>Python中用于网络请求的模块有urllib和request，而request简洁、效率高，完全代替urllib</p><p>request模块作用：模拟浏览器发送请求</p><h2 id="使用request">使用request</h2><p>浏览器发送请求的过程（也是request模块的编码流程）</p><ol><li><p>指定url</p></li><li><p>发起请求</p><p>GET或POST请求</p><ol><li>get请求，参数：url、params(请求参数)、headers(请求头，UA伪装)</li><li>post请求，参数：url、data(请求数据/参数)、headers(UA伪装)</li></ol></li><li><p>获取响应数据</p></li><li><p>持久化存储需要的数据</p></li></ol><h2 id="爬取特定数据的方法">爬取特定数据的方法</h2><h4 id="数据解析">数据解析</h4><h4 id="阿贾克斯请求（AJAX-request）">阿贾克斯请求（AJAX request）</h4><p>阿贾克斯请求（Ajax request）是一种通过JavaScript和XMLHttpRequest对象发送HTTP请求的技术。它允许在不刷新整个页面的情况下，与服务器进行异步通信并获取数据。通过发送和接收数据，可以实现动态更新网页内容，提高用户体验。</p><p>简单来说：当发生页面信息变动时进行局部刷新页面。</p><h2 id="反爬手段">反爬手段</h2><h3 id="UA伪装">UA伪装</h3><p>User-Agent请求载体的身份标识</p><p>UA检测：</p><p>门户网站的服务器会检测对应的请求载体身份标识，如果检测搭到请求载体为某一款浏览器，那么说明这是一个正常的请求。</p><p>但是，如果检测到请求的载体不是属于某个浏览器，则表示这不是一个正常的请求（爬虫），门户网站会拒绝访问。</p><p><strong>为了不被服务器拒绝，所以我们在写爬虫时要把爬虫伪装成浏览器</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">headers = &#123;</span><br><span class="line">    <span class="string">&#x27;User-Agent&#x27;</span>:<span class="string">&#x27;...&#x27;</span>（用抓包工具或者去浏览器开发者选项中找对应的UA放进来）</span><br><span class="line">&#125;</span><br><span class="line">response = request(url=url,params=param,headers=headers)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 数据挖掘 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
            <tag> 爬虫设计 - 计算机网络基础 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>计算机网络基础</title>
      <link href="/2023/06/02/%E3%80%90%E6%95%B0%E6%8D%AE%E6%8C%96%E6%8E%98%E3%80%91%E7%88%AC%E8%99%AB%E7%B3%BB%E7%BB%9F%E5%AD%A6%E4%B9%A0-2-%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E5%9F%BA%E7%A1%80/"/>
      <url>/2023/06/02/%E3%80%90%E6%95%B0%E6%8D%AE%E6%8C%96%E6%8E%98%E3%80%91%E7%88%AC%E8%99%AB%E7%B3%BB%E7%BB%9F%E5%AD%A6%E4%B9%A0-2-%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E5%9F%BA%E7%A1%80/</url>
      
        <content type="html"><![CDATA[<h1>计算机网络基础</h1><h2 id="IP地址">IP地址</h2><p>网络连接的核心——TCP/IP体系结构（IP和端口）</p><p><strong>IP地址是电子设备（计算机）在互联网上的唯一标识</strong></p><p>IP地址的功能是在互联网中寻找电脑</p><h3 id="DNS协议">DNS协议</h3><p>域名解析协议，把我们的IP地址转换成域名的协议，便于网址的记忆与访问</p><h3 id="内网（局域网）IP">内网（局域网）IP</h3><ul><li>内网IP：路由以内的网络，可以连接互联网，但是互联网无法直接连接内网（需要端口映射）</li><li>优点：安全、解决IPv4地址耗尽的问题</li><li>缺点：互联网无法直接连接到内网，比如在自己电脑上搭建一个网站，只有和你使用同一个路由器网络的人才能访问（在同一内网）</li></ul><h3 id="公网（互联网）IP">公网（互联网）IP</h3><ul><li>互联网IP地址</li><li>优点：直接和互联网资源互联，日常应用比如摄像头远程监控、电脑远程开机、NAS等等</li><li>缺点：安全性较低，IPv4网址资源耗尽</li></ul><p><strong>IP地址就像家庭地址一样，公网IP是小区地址，小区中又有很多住户，内网IP就是你家具体的门牌号</strong></p><h2 id="端口（TCP逻辑端口）">端口（TCP逻辑端口）</h2><ul><li>端口是应用程序（服务）在计算机中的唯一标识</li></ul><p>如何查看自己开启了哪些端口？</p><ul><li><p>linux端</p><p>netstat -anltup</p></li><li><p>windows端</p><p>netstat -ano</p></li></ul><h2 id="HTTP（Hyper-Text-Transfer-Protocol）超文本传输协议">HTTP（Hyper Text Transfer Protocol）超文本传输协议</h2><p>浏览器与服务器的数据交互协议http协议：</p><ul><li>浏览器请求服务器数据   request</li><li>服务器响应客户端请求   response</li></ul><p>http协议的特点：</p><ul><li>基于tcp/ip协议</li><li><strong>默认端口号：80</strong></li><li>请求和响应一一对应</li><li>每次请求相互独立，是无状态协议</li></ul><p>https协议，s是security或者ssl，就是更安全的超文本传输协议</p><p><strong>HTTP协议把一条信息分为三大块内容，无论是请求还是响应都分为三块内容。</strong></p><p><strong>请求：</strong></p><ul><li>请求行  ——&gt;   请求方式（get/post）   请求url地址   协议</li><li>请求头  ——&gt;   放依稀额服务器要使用的附加信息</li><li>请求体  ——&gt;   一般放请求参数</li></ul><p><strong>响应：</strong></p><ul><li>状态行  ——&gt;  协议、状态码</li><li>响应头  ——&gt;  放一些客户端要使用的一些附加信息（比如密钥ssl等）</li><li>响应体  ——&gt;  服务器返回给客户端的数据内容（html, json）</li></ul><h3 id="请求消息——request">请求消息——request</h3><p>http协议中请求消息的格式</p><ol><li><p>请求行</p><p><strong>请求方式</strong>+请求url+协议以及版本</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">GET   /pages/jointLaboratory.jsp   HTTP/<span class="number">1.1</span></span><br></pre></td></tr></table></figure><ul><li><p>请求方式常见的有八种，get和post最为常用</p><ol><li>get请求，请求参数存放在url地址中，url有长度限制，只能传输字符数据</li><li>post请求，请求参数在请求体中，无大小限制，post请求可以传输字符或者字节数据</li></ol></li><li><p>get请求和post请求的转换</p><p><strong>get请求</strong></p><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20230902040614277.png" alt="image-20230902040614277"></p><p><strong>post请求</strong></p><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20230902040735591.png" alt="image-20230902040735591"></p><p><strong>Content-Type:服务器响应客户端的数据类型</strong></p></li></ul></li><li><p>请求头</p><ul><li><p>Host：请求主机域名/IP地址</p><p>例如：Host:www.baidu.com</p></li><li><p><strong>User-Agent</strong>：请求载体的身份标识，告诉浏览器的版本信息，供服务器解决浏览器兼容问题</p></li><li><p>Accept：传输文件类型</p></li><li><p><strong>Referer</strong>：告诉服务器从哪里来（网站服务器会检查访问者是从哪里来，决定是否允许你访问），也叫防盗链</p></li><li><p><strong>Cookie</strong>：存储在用户本地终端上的数据（客户端访问数据的“令牌”），用户登录信息、反爬token</p></li></ul><h3 id="响应消息——response">响应消息——response</h3><ol><li><p>响应行</p><p>协议以及版本+响应状态码+状态码描述</p><p>HTTP/1.1   200   OK</p><p><em>状态码200表示是正常访问网站。如果正常访问网站，状态码就是200。常见的错误状态码以及意义“”</em></p></li><li><p>响应头</p><ul><li>Server</li><li>Data</li><li>Content-Security-Policy</li></ul><p>…</p></li><li><p>响应空行</p></li><li><p>响应体</p></li></ol><h3 id="响应状态码">响应状态码</h3><p>服务器告诉浏览器本次请求和响应状态</p><p>1xx：服务器接受浏览器消息未完成，发送1xx状态码</p><p>2xx：成功，200</p><p>3xx：重定向，302，304（访问缓存）</p><p>4xx：客户端错误、404（服务器没有找到对应资源）、405（请求方法不被允许）</p><p>5xx：500、501、502、503（服务器内部出现异常）</p><h3 id="加密方式">加密方式</h3><ol><li><p>对称密钥加密</p><p>客户端发送信息到服务器会先对数据进行加密，然后把生成的密文和密钥传输给客户端</p><p>弊端：容易被拦截而导致信息泄露</p></li><li><p>非对称密钥加密</p><p>服务器端设定一种加密方式，将加密方式发送给客户端。客户端拿到加密方式之后，就把数据进行加密，加密后只把加密得到的密文发送给服务器请求数据。（不会发送秘钥）</p><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20230902043609871.png" alt="image-20230902043609871"></p><p>优点：不会把密钥和密文同时暴露</p><p>​公钥被拦截后可能会被篡改公钥加密方式然后又发送给客户端（无法保证客户端拿到的公钥是服务器创建的公钥）</p></li><li><p>证书密钥加密（https协议）</p><p>引入第三方证书认证机构；服务器创建公钥加密方式，然后发送给第三方证书认证机构，认证机构认证成功后对公钥进行数字签名（防伪），然后再发给客户端，很大程度上确保了公钥的源头正确性</p><p><img src="https://cdn.jsdelivr.net/gh/ICserD/blog_img@master/img/image-20230902043940457.png" alt="image-20230902043940457"></p></li></ol></li></ol><h2 id="web请求过程剖析">web请求过程剖析</h2><p>目前网站的web请求分为两种方式，一种是基于服务器渲染的数据请求，一种是基于客户端渲染的数据请求，不同的请求方式影响着我们抓包的url地址。</p><h3 id="基于服务器渲染的数据请求流程">基于服务器渲染的数据请求流程</h3><ol><li>客户端向服务器端发送请求（带参数，比如搜索：“周杰伦”）</li><li>服务器收到带参数的请求信息，在服务器内进行数据检索和处理，然后将数据和html整合起来，返回给客户端一个已经渲染好数据的html</li></ol><h3 id="基于客户端渲染的数据请求流程（例如阿贾克斯（XHR）请求）">基于客户端渲染的数据请求流程（例如阿贾克斯（XHR）请求）</h3><ol><li>客户端向服务器发送请求</li><li>服务器进行数据处理，返回给客户端一个网页框架，但不包含相关的数据信息</li><li>客户端收到网页框架后，在客户端进行渲染，渲染过程中执行html中的js程序，再次对服务器发送请求</li><li>服务器收到第二次请求，然后进行数据处理，将数据返回给客户端（这时返回的不是html网页，而是具体的整理好的数据，反而对于爬虫来说，这些数据正是我们需要的）</li><li>客户端根据收到的数据以及网页框架进行二次渲染，形成用户所需要浏览的网站页面</li></ol>]]></content>
      
      
      <categories>
          
          <category> 数据挖掘 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
            <tag> 爬虫设计 - 计算机网络基础 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>爬虫的基本认识和注意事项</title>
      <link href="/2023/06/01/%E3%80%90%E6%95%B0%E6%8D%AE%E6%8C%96%E6%8E%98%E3%80%91%E7%88%AC%E8%99%AB%E7%B3%BB%E7%BB%9F%E5%AD%A6%E4%B9%A0-1-%E5%89%8D%E8%A8%80/"/>
      <url>/2023/06/01/%E3%80%90%E6%95%B0%E6%8D%AE%E6%8C%96%E6%8E%98%E3%80%91%E7%88%AC%E8%99%AB%E7%B3%BB%E7%BB%9F%E5%AD%A6%E4%B9%A0-1-%E5%89%8D%E8%A8%80/</url>
      
        <content type="html"><![CDATA[<h1>爬虫系统学习</h1><h2 id="前言">前言</h2><p>爬虫是python的重要的实战应用之一，是一门获取信息的重要技术手段。</p><p>技术本身无罪，但爬虫如果影响到网站正常使用或者爬取涉及到商业机密等法律保护的数据时，可能会有犯罪风险。</p><h2 id="如何规避犯罪风险">如何规避犯罪风险</h2><ol><li><p>robots.txt协议</p><p>每个网站都有robots.txt协议，上面规定了哪些信息可以爬取，那些信息不可被爬取。</p><p>尽量避免爬取不被允许的信息。如果不慎爬取到了敏感信息，可以及时停止爬取和传播。</p></li></ol><h2 id="注意事项">注意事项</h2><ol><li>记得关文件</li><li>记得关resp, resp.close();</li></ol>]]></content>
      
      
      <categories>
          
          <category> 数据挖掘 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
            <tag> 爬虫设计 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
